{"version":3,"sources":["../ui/src/constants/forbidden-routes.ts","../ui/src/constants/injection-zones.ts","../src/node/actions/build.ts","../src/node/utils/create-cache-dir.ts","../src/node/utils/copy-filter.ts","../src/node/utils/create-entry.ts","../src/node/utils/logger.ts","../src/node/utils/normalize-path.ts","../src/node/utils/validate-extensions.ts","../src/node/utils/get-client-env.ts","../src/node/utils/watch-local-admin-folder.ts","../src/node/webpack/get-custom-webpack-config.ts","../src/node/utils/validate-args.ts","../src/node/webpack/get-webpack-config.ts","../src/node/constants.ts","../src/node/webpack/webpack-aliases.ts","../src/node/webpack/with-custom-webpack-config.ts","../src/node/actions/clean.ts","../src/node/actions/develop.ts"],"sourcesContent":["export const forbiddenRoutes = [\r\n  \"/products\",\r\n  \"/products/:id\",\r\n  \"/product-categories\",\r\n  \"/product-categories\",\r\n  \"/orders\",\r\n  \"/orders/:id\",\r\n  \"/customers\",\r\n  \"/customers/:id\",\r\n  \"/customers/groups\",\r\n  \"/customers/groups/:id\",\r\n  \"/discounts\",\r\n  \"/discounts/new\",\r\n  \"/discounts/:id\",\r\n  \"/gift-cards\",\r\n  \"/gift-cards/:id\",\r\n  \"/gift-cards/manage\",\r\n  \"/pricing\",\r\n  \"/pricing/new\",\r\n  \"/pricing/:id\",\r\n  \"/inventory\",\r\n  \"/collections\",\r\n  \"/collections/:id\",\r\n  \"/draft-orders\",\r\n  \"/draft-orders/:id\",\r\n  \"/login\",\r\n  \"/sales-channels\",\r\n  \"/publishable-api-keys\",\r\n  \"/oauth\",\r\n  \"/oauth/:app_name\",\r\n] as const\r\n\r\nexport const isSettingsRoute = (route: string) => {\r\n  return route.startsWith(\"/settings\")\r\n}\r\n\r\nexport const isForbiddenRoute = (route: any): boolean => {\r\n  if (isSettingsRoute(route)) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      console.warn(\r\n        `The route \"${route}\" is a settings route. Please register the extension in the \"settings\" directory instead.`\r\n      )\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  if (forbiddenRoutes.includes(route)) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      console.warn(\r\n        `The route \"${route}\" is a forbidden route. We do not currently support overriding default routes.`\r\n      )\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n","export const injectionZones = [\r\n  // Order injection zones\r\n  \"order.details.before\",\r\n  \"order.details.after\",\r\n  \"order.list.before\",\r\n  \"order.list.after\",\r\n  // Draft order injection zones\r\n  \"draft_order.list.before\",\r\n  \"draft_order.list.after\",\r\n  \"draft_order.details.before\",\r\n  \"draft_order.details.after\",\r\n  // Customer injection zones\r\n  \"customer.details.before\",\r\n  \"customer.details.after\",\r\n  \"customer.list.before\",\r\n  \"customer.list.after\",\r\n  // Customer group injection zones\r\n  \"customer_group.details.before\",\r\n  \"customer_group.details.after\",\r\n  \"customer_group.list.before\",\r\n  \"customer_group.list.after\",\r\n  // Product injection zones\r\n  \"product.details.before\",\r\n  \"product.details.after\",\r\n  \"product.list.before\",\r\n  \"product.list.after\",\r\n  // Product collection injection zones\r\n  \"product_collection.details.before\",\r\n  \"product_collection.details.after\",\r\n  \"product_collection.list.before\",\r\n  \"product_collection.list.after\",\r\n  // Price list injection zones\r\n  \"price_list.details.before\",\r\n  \"price_list.details.after\",\r\n  \"price_list.list.before\",\r\n  \"price_list.list.after\",\r\n  // Discount injection zones\r\n  \"discount.details.before\",\r\n  \"discount.details.after\",\r\n  \"discount.list.before\",\r\n  \"discount.list.after\",\r\n  // Gift card injection zones\r\n  \"gift_card.details.before\",\r\n  \"gift_card.details.after\",\r\n  \"gift_card.list.before\",\r\n  \"gift_card.list.after\",\r\n  \"custom_gift_card.before\",\r\n  \"custom_gift_card.after\",\r\n  // Login\r\n  \"login.before\",\r\n  \"login.after\",\r\n] as const\r\n","import path from \"node:path\"\r\nimport webpack, { WebpackError } from \"webpack\"\r\nimport { BuildArgs } from \"../types\"\r\nimport { logger } from \"../utils\"\r\nimport { createCacheDir } from \"../utils/create-cache-dir\"\r\nimport { getCustomWebpackConfig } from \"../webpack\"\r\n\r\n/**\r\n * Builds the admin UI.\r\n */\r\nexport async function build({\r\n  appDir,\r\n  buildDir,\r\n  plugins,\r\n  options,\r\n  reporting = \"fancy\",\r\n}: BuildArgs) {\r\n  await createCacheDir({ appDir, plugins })\r\n\r\n  const cacheDir = path.resolve(appDir, \".cache\")\r\n  const entry = path.resolve(cacheDir, \"admin\", \"src\", \"main.tsx\")\r\n  const dest = path.resolve(appDir, buildDir)\r\n  const env = \"production\"\r\n\r\n  const config = await getCustomWebpackConfig(appDir, {\r\n    entry,\r\n    dest,\r\n    cacheDir,\r\n    env,\r\n    options,\r\n    reporting,\r\n  })\r\n\r\n  const compiler = webpack(config)\r\n\r\n  return new Promise((resolve, reject) => {\r\n    compiler.run((err: WebpackError, stats) => {\r\n      if (err) {\r\n        if (err.details) {\r\n          logger.error(err.details)\r\n        }\r\n\r\n        reject(err)\r\n      }\r\n\r\n      const info = stats.toJson()\r\n\r\n      if (stats.hasErrors()) {\r\n        logger.error(JSON.stringify(info.errors))\r\n      }\r\n\r\n      return resolve({\r\n        stats,\r\n        warnings: info.warnings,\r\n      })\r\n    })\r\n  })\r\n}\r\n","import fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\nimport { copyFilter } from \"./copy-filter\"\r\nimport { createEntry } from \"./create-entry\"\r\nimport { logger } from \"./logger\"\r\n\r\nasync function copyAdmin(dest: string) {\r\n  const adminDir = path.resolve(__dirname, \"..\", \"ui\")\r\n  const destDir = path.resolve(dest, \"admin\")\r\n\r\n  try {\r\n    await fse.copy(adminDir, destDir, {\r\n      filter: copyFilter,\r\n    })\r\n  } catch (err) {\r\n    logger.panic(\r\n      `Could not copy the admin UI to ${destDir}. See the error below for details:`,\r\n      {\r\n        error: err,\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\ntype CreateCacheDirArgs = {\r\n  appDir: string\r\n  plugins?: string[]\r\n}\r\n\r\nasync function createCacheDir({ appDir, plugins }: CreateCacheDirArgs) {\r\n  const cacheDir = path.resolve(appDir, \".cache\")\r\n\r\n  await copyAdmin(cacheDir)\r\n\r\n  await createEntry({\r\n    appDir,\r\n    dest: cacheDir,\r\n    plugins,\r\n  })\r\n\r\n  return {\r\n    cacheDir,\r\n  }\r\n}\r\n\r\nexport { createCacheDir }\r\n","import fse from \"fs-extra\"\r\n\r\n/**\r\n * Filter function to exclude test files and folders, as well as webpack configurations from being copied to the cache folder.\r\n */\r\nexport function copyFilter(src: string) {\r\n  if (fse.lstatSync(src).isDirectory() && src.includes(\"__test__\")) {\r\n    return false\r\n  }\r\n\r\n  if (fse.lstatSync(src).isFile()) {\r\n    if (\r\n      src.includes(\".test\") ||\r\n      src.includes(\".spec\") ||\r\n      src.includes(\"webpack.config\")\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","import fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\nimport dedent from \"ts-dedent\"\r\nimport { copyFilter } from \"./copy-filter\"\r\nimport { logger } from \"./logger\"\r\nimport { normalizePath } from \"./normalize-path\"\r\nimport {\r\n  findAllValidRoutes,\r\n  findAllValidSettings,\r\n  findAllValidWidgets,\r\n} from \"./validate-extensions\"\r\n\r\nconst FILE_EXT_REGEX = /\\.[^/.]+$/\r\n\r\nasync function copyLocalExtensions(src: string, dest: string) {\r\n  try {\r\n    await fse.copy(src, dest, {\r\n      filter: copyFilter,\r\n    })\r\n  } catch (err) {\r\n    logger.error(\r\n      `Could not copy local extensions to cache folder. See the error below for details:`,\r\n      {\r\n        error: err,\r\n      }\r\n    )\r\n\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Creates an entry file for any local extensions, if they exist.\r\n */\r\nasync function createLocalExtensionsEntry(appDir: string, dest: string) {\r\n  const localAdminDir = path.resolve(appDir, \"src\", \"admin\")\r\n\r\n  const localAdminDirExists = await fse.pathExists(localAdminDir)\r\n\r\n  if (!localAdminDirExists) {\r\n    return false\r\n  }\r\n\r\n  const copied = await copyLocalExtensions(\r\n    localAdminDir,\r\n    path.resolve(dest, \"admin\", \"src\", \"extensions\")\r\n  )\r\n\r\n  if (!copied) {\r\n    logger.error(\r\n      \"Could not copy local extensions to cache folder. See above error for details. The error must be fixed before any local extensions can be injected.\"\r\n    )\r\n    return false\r\n  }\r\n\r\n  const [localWidgets, localRoutes, localSettings] = await Promise.all([\r\n    findAllValidWidgets(\r\n      path.resolve(dest, \"admin\", \"src\", \"extensions\", \"widgets\")\r\n    ),\r\n    findAllValidRoutes(\r\n      path.resolve(dest, \"admin\", \"src\", \"extensions\", \"routes\")\r\n    ),\r\n    findAllValidSettings(\r\n      path.resolve(dest, \"admin\", \"src\", \"extensions\", \"settings\")\r\n    ),\r\n  ])\r\n\r\n  const widgetsArray = localWidgets.map((file, index) => {\r\n    const relativePath = normalizePath(\r\n      path\r\n        .relative(path.resolve(dest, \"admin\", \"src\", \"extensions\"), file)\r\n        .replace(FILE_EXT_REGEX, \"\")\r\n    )\r\n\r\n    return {\r\n      importStatement: `import Widget${index}, { config as widgetConfig${index} } from \"./${relativePath}\"`,\r\n      extension: `{ Component: Widget${index}, config: { ...widgetConfig${index}, type: \"widget\" } }`,\r\n    }\r\n  })\r\n\r\n  const routesArray = localRoutes.map((route, index) => {\r\n    const relativePath = normalizePath(\r\n      path\r\n        .relative(path.resolve(dest, \"admin\", \"src\", \"extensions\"), route.file)\r\n        .replace(FILE_EXT_REGEX, \"\")\r\n    )\r\n\r\n    const importStatement = route.hasConfig\r\n      ? `import Page${index}, { config as routeConfig${index} } from \"./${relativePath}\"`\r\n      : `import Page${index} from \"./${relativePath}\"`\r\n\r\n    const extension = route.hasConfig\r\n      ? `{ Component: Page${index}, config: { ...routeConfig${index}, type: \"route\",  path: \"${route.path}\" } }`\r\n      : `{ Component: Page${index}, config: { path: \"${route.path}\", type: \"route\" } }`\r\n\r\n    return {\r\n      importStatement,\r\n      extension,\r\n    }\r\n  })\r\n\r\n  const settingsArray = localSettings.map((setting, index) => {\r\n    const relativePath = normalizePath(\r\n      path\r\n        .relative(\r\n          path.resolve(dest, \"admin\", \"src\", \"extensions\"),\r\n          setting.file\r\n        )\r\n        .replace(FILE_EXT_REGEX, \"\")\r\n    )\r\n\r\n    return {\r\n      importStatement: `import Setting${index}, { config as settingConfig${index} } from \"./${relativePath}\"`,\r\n      extension: `{ Component: Setting${index}, config: { ...settingConfig${index}, path: \"${setting.path}\", type: \"setting\" } }`,\r\n    }\r\n  })\r\n\r\n  const extensionsArray = [...widgetsArray, ...routesArray, ...settingsArray]\r\n\r\n  const extensionsEntry = dedent`\r\n    ${extensionsArray.map((extension) => extension.importStatement).join(\"\\n\")}\r\n\r\n    const LocalEntry = {\r\n      identifier: \"local\",\r\n      extensions: [\r\n        ${extensionsArray.map((extension) => extension.extension).join(\",\\n\")}\r\n      ],\r\n    }\r\n\r\n    export default LocalEntry\r\n  `\r\n\r\n  try {\r\n    await fse.outputFile(\r\n      path.resolve(dest, \"admin\", \"src\", \"extensions\", \"_local-entry.ts\"),\r\n      extensionsEntry\r\n    )\r\n  } catch (err) {\r\n    logger.panic(\r\n      `Failed to write the entry file for the local extensions. See the error below for details:`,\r\n      {\r\n        error: err,\r\n      }\r\n    )\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction findPluginsWithExtensions(plugins: string[]) {\r\n  const pluginsWithExtensions: string[] = []\r\n\r\n  for (const plugin of plugins) {\r\n    try {\r\n      const pluginDir = path.dirname(\r\n        require.resolve(`${plugin}/package.json`, {\r\n          paths: [process.cwd()],\r\n        })\r\n      )\r\n      const entrypoint = path.resolve(\r\n        pluginDir,\r\n        \"dist\",\r\n        \"admin\",\r\n        \"_virtual_entry.js\"\r\n      )\r\n\r\n      if (fse.existsSync(entrypoint)) {\r\n        pluginsWithExtensions.push(entrypoint)\r\n      }\r\n    } catch (_err) {\r\n      logger.warn(\r\n        `There was an error while attempting to load extensions from the plugin: ${plugin}. Are you sure it is installed?`\r\n      )\r\n      // no plugin found - noop\r\n    }\r\n  }\r\n\r\n  return pluginsWithExtensions\r\n}\r\n\r\nasync function writeTailwindContentFile(dest: string, plugins: string[]) {\r\n  const tailwindContent = dedent`\r\n    const path = require(\"path\")\r\n\r\n    const devPath = path.join(__dirname, \"..\", \"..\", \"src/admin/**/*.{js,jsx,ts,tsx}\")\r\n\r\n    module.exports = {\r\n      content: [\r\n        devPath,\r\n        ${plugins\r\n          .map((plugin) => {\r\n            const tailwindContentPath = normalizePath(\r\n              path.relative(\r\n                path.resolve(dest, \"admin\"),\r\n                path.dirname(path.join(plugin, \"..\", \"..\"))\r\n              )\r\n            )\r\n\r\n            return `\"${tailwindContentPath}/dist/admin/**/*.{js,jsx,ts,tsx}\"`\r\n          })\r\n          .join(\",\\n\")}\r\n      ],\r\n    }\r\n  \r\n  `\r\n\r\n  try {\r\n    await fse.outputFile(\r\n      path.resolve(dest, \"admin\", \"tailwind.content.js\"),\r\n      tailwindContent\r\n    )\r\n  } catch (err) {\r\n    logger.warn(\r\n      `Failed to write the Tailwind content file to ${dest}. The admin UI will remain functional, but CSS classes applied to extensions from plugins might not have the correct styles`\r\n    )\r\n  }\r\n}\r\n\r\nasync function createMainExtensionsEntry(\r\n  dest: string,\r\n  plugins: string[],\r\n  hasLocalExtensions: boolean\r\n) {\r\n  if (!plugins.length && !hasLocalExtensions) {\r\n    // We still want to generate the entry file, even if there are no extensions\r\n    // to load, so that the admin UI can be built without errors\r\n    const emptyEntry = dedent`\r\n      const extensions = []\r\n\r\n      export default extensions\r\n    `\r\n\r\n    try {\r\n      await fse.outputFile(\r\n        path.resolve(dest, \"admin\", \"src\", \"extensions\", \"_main-entry.ts\"),\r\n        emptyEntry\r\n      )\r\n    } catch (err) {\r\n      logger.panic(\r\n        `Failed to write the entry file for the main extensions. See the error below for details:`,\r\n        {\r\n          error: err,\r\n        }\r\n      )\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  const pluginsArray = plugins.map((plugin) => {\r\n    const relativePath = normalizePath(\r\n      path\r\n        .relative(path.resolve(dest, \"admin\", \"src\", \"extensions\"), plugin)\r\n        .replace(FILE_EXT_REGEX, \"\")\r\n    )\r\n\r\n    return relativePath\r\n  })\r\n\r\n  const extensionsArray = [\r\n    ...pluginsArray.map((plugin, index) => {\r\n      const importStatement = `import Plugin${index} from \"${plugin}\"`\r\n\r\n      return {\r\n        importStatement,\r\n        extension: `Plugin${index}`,\r\n      }\r\n    }),\r\n    ...(hasLocalExtensions\r\n      ? [\r\n          {\r\n            importStatement: `import LocalEntry from \"./_local-entry\"`,\r\n            extension: `LocalEntry`,\r\n          },\r\n        ]\r\n      : []),\r\n  ]\r\n\r\n  const extensionsEntry = dedent`\r\n      ${extensionsArray\r\n        .map((extension) => extension.importStatement)\r\n        .join(\"\\n\")}\r\n\r\n      const extensions = [\r\n        ${extensionsArray.map((extension) => extension.extension).join(\",\\n\")}\r\n      ]\r\n\r\n      export default extensions\r\n    `\r\n\r\n  try {\r\n    await fse.outputFile(\r\n      path.resolve(dest, \"admin\", \"src\", \"extensions\", \"_main-entry.ts\"),\r\n      extensionsEntry\r\n    )\r\n  } catch (err) {\r\n    logger.panic(\r\n      `Failed to write the extensions entry file. See the error below for details:`,\r\n      {\r\n        error: err,\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\ntype CreateEntryArgs = {\r\n  appDir: string\r\n  dest: string\r\n  plugins?: string[]\r\n}\r\n\r\nexport async function createEntry({ appDir, dest, plugins }: CreateEntryArgs) {\r\n  const hasLocalExtensions = await createLocalExtensionsEntry(appDir, dest)\r\n\r\n  const adminPlugins = findPluginsWithExtensions(plugins)\r\n\r\n  await createMainExtensionsEntry(dest, adminPlugins, hasLocalExtensions)\r\n  await writeTailwindContentFile(dest, adminPlugins)\r\n}\r\n","import colors from \"picocolors\"\r\nimport readline from \"readline\"\r\n\r\nconst prefix = \"[@medusajs/admin]\"\r\n\r\ntype LogType = \"error\" | \"warn\" | \"info\"\r\n\r\ninterface LogOptions {\r\n  clearScreen?: boolean\r\n}\r\n\r\ninterface LogErrorOptions extends LogOptions {\r\n  error?: Error | null\r\n}\r\n\r\ninterface Logger {\r\n  info(msg: string, options?: LogOptions): void\r\n  warn(msg: string, options?: LogOptions): void\r\n  error(msg: string, options?: LogErrorOptions): void\r\n  panic(msg: string, options?: LogErrorOptions): void\r\n}\r\n\r\nfunction clearScreen() {\r\n  const repeatCount = process.stdout.rows - 2\r\n  const blank = repeatCount > 0 ? \"\\n\".repeat(repeatCount) : \"\"\r\n  console.log(blank)\r\n  readline.cursorTo(process.stdout, 0, 0)\r\n  readline.clearScreenDown(process.stdout)\r\n}\r\n\r\nconst canClearScreen = process.stdout.isTTY && !process.env.CI\r\nconst clear = canClearScreen\r\n  ? clearScreen\r\n  : () => {\r\n      // noop\r\n    }\r\n\r\nfunction createLogger(): Logger {\r\n  const output = (type: LogType, msg: string, options?: LogErrorOptions) => {\r\n    const method = type === \"info\" ? \"log\" : type\r\n    const format = () => {\r\n      const tag =\r\n        type === \"info\"\r\n          ? colors.cyan(colors.bold(prefix))\r\n          : type === \"warn\"\r\n          ? colors.yellow(colors.bold(prefix))\r\n          : colors.red(colors.bold(prefix))\r\n      return `${colors.dim(new Date().toLocaleTimeString())} ${tag} ${msg}`\r\n    }\r\n\r\n    if (options?.clearScreen) {\r\n      clear()\r\n    }\r\n\r\n    console[method](format())\r\n\r\n    if (options?.error) {\r\n      console.error(options.error)\r\n    }\r\n  }\r\n\r\n  return {\r\n    info: (msg, options) => output(\"info\", msg, options),\r\n    warn: (msg, options) => output(\"warn\", msg, options),\r\n    error: (msg, options) => output(\"error\", msg, options),\r\n    panic: (msg, options) => {\r\n      output(\"error\", msg, options)\r\n      output(\"error\", \"Exiting process\", {})\r\n      process.exit(1)\r\n    },\r\n  }\r\n}\r\n\r\nexport const logger = createLogger()\r\n","export function normalizePath(path: string): string {\r\n  const isWindows = process.platform === \"win32\"\r\n  const separator = isWindows ? \"\\\\\" : \"/\"\r\n  const regex = new RegExp(`\\\\${separator}`, \"g\")\r\n  return path.replace(regex, \"/\")\r\n}\r\n","import { parse, ParseResult, ParserOptions } from \"@babel/parser\"\r\nimport traverse, { NodePath } from \"@babel/traverse\"\r\nimport type {\r\n  ExportDefaultDeclaration,\r\n  ExportNamedDeclaration,\r\n  ObjectExpression,\r\n  ObjectMethod,\r\n  ObjectProperty,\r\n  SpreadElement,\r\n} from \"@babel/types\"\r\nimport fse from \"fs-extra\"\r\nimport path from \"path\"\r\nimport { forbiddenRoutes, InjectionZone, injectionZones } from \"../../client\"\r\nimport { logger } from \"./logger\"\r\nimport { normalizePath } from \"./normalize-path\"\r\n\r\nfunction isValidInjectionZone(zone: any): zone is InjectionZone {\r\n  return injectionZones.includes(zone)\r\n}\r\n\r\n/**\r\n * Validates that the widget config export is valid.\r\n * In order to be valid it must have a `zone` property that is either a `InjectionZone` or a `InjectionZone` array.\r\n */\r\nfunction validateWidgetConfigExport(\r\n  properties: (ObjectMethod | ObjectProperty | SpreadElement)[]\r\n): boolean {\r\n  const zoneProperty = properties.find(\r\n    (p) =>\r\n      p.type === \"ObjectProperty\" &&\r\n      p.key.type === \"Identifier\" &&\r\n      p.key.name === \"zone\"\r\n  ) as ObjectProperty | undefined\r\n\r\n  if (!zoneProperty) {\r\n    return false\r\n  }\r\n\r\n  let zoneIsValid = false\r\n\r\n  if (zoneProperty.value.type === \"StringLiteral\") {\r\n    zoneIsValid = isValidInjectionZone(zoneProperty.value.value)\r\n  } else if (zoneProperty.value.type === \"ArrayExpression\") {\r\n    zoneIsValid = zoneProperty.value.elements.every(\r\n      (zone) =>\r\n        zone.type === \"StringLiteral\" && isValidInjectionZone(zone.value)\r\n    )\r\n  }\r\n\r\n  return zoneIsValid\r\n}\r\n\r\nfunction validateRouteConfigExport(\r\n  properties: (ObjectMethod | ObjectProperty | SpreadElement)[]\r\n): boolean {\r\n  const linkProperty = properties.find(\r\n    (p) =>\r\n      p.type === \"ObjectProperty\" &&\r\n      p.key.type === \"Identifier\" &&\r\n      p.key.name === \"link\"\r\n  ) as ObjectProperty | undefined\r\n\r\n  // Link property is optional for routes\r\n  if (!linkProperty) {\r\n    return true\r\n  }\r\n\r\n  const linkValue = linkProperty.value as ObjectExpression\r\n\r\n  let labelIsValid = false\r\n\r\n  // Check that the linkProperty is an object and has a `label` property that is a string\r\n  if (\r\n    linkValue.properties.some(\r\n      (p) =>\r\n        p.type === \"ObjectProperty\" &&\r\n        p.key.type === \"Identifier\" &&\r\n        p.key.name === \"label\" &&\r\n        p.value.type === \"StringLiteral\"\r\n    )\r\n  ) {\r\n    labelIsValid = true\r\n  }\r\n\r\n  return labelIsValid\r\n}\r\n\r\nfunction validateSettingConfigExport(\r\n  properties: (ObjectMethod | ObjectProperty | SpreadElement)[]\r\n): boolean {\r\n  const cardProperty = properties.find(\r\n    (p) =>\r\n      p.type === \"ObjectProperty\" &&\r\n      p.key.type === \"Identifier\" &&\r\n      p.key.name === \"card\"\r\n  ) as ObjectProperty | undefined\r\n\r\n  // Link property is required for settings\r\n  if (!cardProperty) {\r\n    return false\r\n  }\r\n\r\n  const cardValue = cardProperty.value as ObjectExpression\r\n\r\n  let hasLabel = false\r\n  let hasDescription = false\r\n\r\n  if (\r\n    cardValue.properties.some(\r\n      (p) =>\r\n        p.type === \"ObjectProperty\" &&\r\n        p.key.type === \"Identifier\" &&\r\n        p.key.name === \"label\" &&\r\n        p.value.type === \"StringLiteral\"\r\n    )\r\n  ) {\r\n    hasLabel = true\r\n  }\r\n\r\n  if (\r\n    cardValue.properties.some(\r\n      (p) =>\r\n        p.type === \"ObjectProperty\" &&\r\n        p.key.type === \"Identifier\" &&\r\n        p.key.name === \"description\" &&\r\n        p.value.type === \"StringLiteral\"\r\n    )\r\n  ) {\r\n    hasDescription = true\r\n  }\r\n\r\n  return hasLabel && hasDescription\r\n}\r\n\r\nfunction validateConfigExport(\r\n  path: NodePath<ExportNamedDeclaration>,\r\n  type: \"widget\" | \"route\" | \"setting\"\r\n) {\r\n  let hasValidConfigExport = false\r\n\r\n  const declaration = path.node.declaration\r\n  if (declaration && declaration.type === \"VariableDeclaration\") {\r\n    const configDeclaration = declaration.declarations.find(\r\n      (d) =>\r\n        d.type === \"VariableDeclarator\" &&\r\n        d.id.type === \"Identifier\" &&\r\n        d.id.name === \"config\"\r\n    )\r\n\r\n    if (\r\n      configDeclaration &&\r\n      configDeclaration.init.type === \"ObjectExpression\"\r\n    ) {\r\n      const properties = configDeclaration.init.properties\r\n\r\n      if (type === \"widget\") {\r\n        hasValidConfigExport = validateWidgetConfigExport(properties)\r\n      }\r\n\r\n      if (type === \"route\") {\r\n        hasValidConfigExport = validateRouteConfigExport(properties)\r\n      }\r\n\r\n      if (type === \"setting\") {\r\n        hasValidConfigExport = validateSettingConfigExport(properties)\r\n      }\r\n    } else {\r\n      hasValidConfigExport = false\r\n    }\r\n  }\r\n\r\n  return hasValidConfigExport\r\n}\r\n\r\n/**\r\n * Validates that the default export of a file is a valid React component.\r\n * This is determined by checking if the default export is a function declaration\r\n * with a return statement that returns a JSX element or fragment.\r\n */\r\nfunction validateDefaultExport(\r\n  path: NodePath<ExportDefaultDeclaration>,\r\n  ast: ParseResult<any>\r\n) {\r\n  let hasComponentExport = false\r\n\r\n  const declaration = path.node.declaration\r\n  if (\r\n    declaration &&\r\n    (declaration.type === \"Identifier\" ||\r\n      declaration.type === \"FunctionDeclaration\")\r\n  ) {\r\n    const exportName =\r\n      declaration.type === \"Identifier\"\r\n        ? declaration.name\r\n        : declaration.id && declaration.id.name\r\n\r\n    if (exportName) {\r\n      try {\r\n        traverse(ast, {\r\n          VariableDeclarator({ node, scope }) {\r\n            let isDefaultExport = false\r\n\r\n            if (node.id.type === \"Identifier\" && node.id.name === exportName) {\r\n              isDefaultExport = true\r\n            }\r\n\r\n            if (!isDefaultExport) {\r\n              return\r\n            }\r\n\r\n            traverse(\r\n              node,\r\n              {\r\n                ReturnStatement(path) {\r\n                  if (\r\n                    path.node.argument?.type === \"JSXElement\" ||\r\n                    path.node.argument?.type === \"JSXFragment\"\r\n                  ) {\r\n                    hasComponentExport = true\r\n                  }\r\n                },\r\n              },\r\n              scope\r\n            )\r\n          },\r\n        })\r\n      } catch (e) {\r\n        logger.error(\r\n          `There was an error while validating the default export of ${path}. The following error must be resolved before continuing:`,\r\n          {\r\n            error: e,\r\n          }\r\n        )\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  return hasComponentExport\r\n}\r\n\r\n/**\r\n * Validates that a widget file has a valid default export and a valid config export.\r\n *\r\n */\r\nasync function validateWidget(file: string) {\r\n  const content = await fse.readFile(file, \"utf-8\")\r\n\r\n  const parserOptions: ParserOptions = {\r\n    sourceType: \"module\",\r\n    plugins: [\"jsx\"],\r\n  }\r\n\r\n  if (file.endsWith(\".ts\") || file.endsWith(\".tsx\")) {\r\n    parserOptions.plugins.push(\"typescript\")\r\n  }\r\n\r\n  let ast: ParseResult<any>\r\n\r\n  try {\r\n    ast = parse(content, parserOptions)\r\n  } catch (e) {\r\n    logger.error(\r\n      `An error occurred while parsing the Widget \"${file}\", and the Widget cannot be injected. The following error must be resolved before continuing:`,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n    return false\r\n  }\r\n\r\n  let hasConfigExport = false\r\n  let hasComponentExport = false\r\n\r\n  try {\r\n    traverse(ast, {\r\n      ExportDefaultDeclaration: (path) => {\r\n        hasComponentExport = validateDefaultExport(path, ast)\r\n      },\r\n      ExportNamedDeclaration: (path) => {\r\n        hasConfigExport = validateConfigExport(path, \"widget\")\r\n      },\r\n    })\r\n  } catch (e) {\r\n    logger.error(\r\n      `An error occurred while validating the Widget \"${file}\". The following error must be resolved before continuing:`,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n    return false\r\n  }\r\n\r\n  if (hasConfigExport && !hasComponentExport) {\r\n    if (!hasComponentExport) {\r\n      logger.error(\r\n        `The default export in the Widget \"${file}\" is invalid and the widget will not be injected. Please make sure that the default export is a valid React component.`\r\n      )\r\n    }\r\n  }\r\n\r\n  if (!hasConfigExport && hasComponentExport) {\r\n    logger.error(\r\n      `The Widget config export in \"${file}\" is invalid and the Widget cannot be injected. Please ensure that the config is valid.`\r\n    )\r\n  }\r\n\r\n  return hasConfigExport && hasComponentExport\r\n}\r\n\r\n/**\r\n * This function takes a file path and converts it to a URL path.\r\n * It converts the file path to a URL path by replacing any\r\n * square brackets with colons, and then removing the \"page.[jt]s\" suffix.\r\n */\r\nfunction createPath(filePath: string): string {\r\n  const normalizedPath = normalizePath(filePath)\r\n\r\n  const regex = /\\[(.*?)\\]/g\r\n  const strippedPath = normalizedPath.replace(regex, \":$1\")\r\n\r\n  const url = strippedPath.replace(/\\/page\\.[jt]sx?$/i, \"\")\r\n\r\n  return url\r\n}\r\n\r\nfunction isForbiddenRoute(path: any): boolean {\r\n  return forbiddenRoutes.includes(path)\r\n}\r\n\r\nfunction validatePath(\r\n  path: string,\r\n  origin: string\r\n): {\r\n  valid: boolean\r\n  error: string\r\n} {\r\n  if (isForbiddenRoute(path)) {\r\n    return {\r\n      error: `A route from ${origin} is using a forbidden path: ${path}.`,\r\n      valid: false,\r\n    }\r\n  }\r\n\r\n  const specialChars = [\"/\", \":\", \"-\"]\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const currentChar = path[i]\r\n\r\n    if (\r\n      !specialChars.includes(currentChar) &&\r\n      !/^[a-z0-9]$/i.test(currentChar)\r\n    ) {\r\n      return {\r\n        error: `A route from ${origin} is using an invalid path: ${path}. Only alphanumeric characters, \"/\", \":\", and \"-\" are allowed.`,\r\n        valid: false,\r\n      }\r\n    }\r\n\r\n    if (currentChar === \":\" && (i === 0 || path[i - 1] !== \"/\")) {\r\n      return {\r\n        error: `A route from ${origin} is using an invalid path: ${path}. All dynamic segments must be preceded by a \"/\".`,\r\n        valid: false,\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    valid: true,\r\n    error: \"\",\r\n  }\r\n}\r\n\r\n/**\r\n * Validates that a file is a valid route.\r\n * This is determined by checking if the file exports a valid React component\r\n * as the default export, and a optional route config as a named export.\r\n * If the file is not a valid route, `null` is returned.\r\n * If the file is a valid route, a `ValidRouteResult` is returned.\r\n */\r\nasync function validateRoute(\r\n  file: string,\r\n  basePath: string\r\n): Promise<{\r\n  path: string\r\n  hasConfig: boolean\r\n  file: string\r\n} | null> {\r\n  const cleanPath = createPath(file.replace(basePath, \"\"))\r\n\r\n  const { valid, error } = validatePath(cleanPath, file)\r\n\r\n  if (!valid) {\r\n    logger.error(\r\n      `The path ${cleanPath} for the UI Route \"${file}\" is invalid and the route cannot be injected. The following error must be fixed before the route can be injected: ${error}`\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  const content = await fse.readFile(file, \"utf-8\")\r\n\r\n  let hasComponentExport = false\r\n  let hasConfigExport = false\r\n\r\n  const parserOptions: ParserOptions = {\r\n    sourceType: \"module\",\r\n    plugins: [\"jsx\"],\r\n  }\r\n\r\n  if (file.endsWith(\".ts\") || file.endsWith(\".tsx\")) {\r\n    parserOptions.plugins.push(\"typescript\")\r\n  }\r\n\r\n  let ast: ParseResult<any>\r\n\r\n  try {\r\n    ast = parse(content, parserOptions)\r\n  } catch (e) {\r\n    logger.error(\r\n      `An error occurred while parsing the UI Route \"${file}\", and the UI Route cannot be injected. The following error must be resolved before continuing:`,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n    return null\r\n  }\r\n\r\n  try {\r\n    traverse(ast, {\r\n      ExportDefaultDeclaration: (path) => {\r\n        hasComponentExport = validateDefaultExport(path, ast)\r\n      },\r\n      ExportNamedDeclaration: (path) => {\r\n        hasConfigExport = validateConfigExport(path, \"route\")\r\n      },\r\n    })\r\n  } catch (e) {\r\n    logger.error(\r\n      `An error occurred while validating the UI Route \"${file}\", and the UI Route cannot be injected. The following error must be resolved before continuing:`,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n    return null\r\n  }\r\n\r\n  if (!hasComponentExport) {\r\n    logger.error(\r\n      `The default export in the UI Route \"${file}\" is invalid and the route cannot be injected. Please make sure that the default export is a valid React component.`\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  return {\r\n    path: cleanPath,\r\n    hasConfig: hasConfigExport,\r\n    file,\r\n  }\r\n}\r\n\r\nasync function validateSetting(file: string, basePath: string) {\r\n  const cleanPath = createPath(file.replace(basePath, \"\"))\r\n\r\n  const { valid, error } = validatePath(cleanPath, file)\r\n\r\n  if (!valid) {\r\n    logger.error(\r\n      `The path ${cleanPath} for the Setting \"${file}\" is invalid and the setting cannot be injected. The following error must be fixed before the Setting can be injected: ${error}`\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  const content = await fse.readFile(file, \"utf-8\")\r\n\r\n  let hasComponentExport = false\r\n  let hasConfigExport = false\r\n\r\n  const parserOptions: ParserOptions = {\r\n    sourceType: \"module\",\r\n    plugins: [\"jsx\"],\r\n  }\r\n\r\n  if (file.endsWith(\".ts\") || file.endsWith(\".tsx\")) {\r\n    parserOptions.plugins.push(\"typescript\")\r\n  }\r\n\r\n  let ast: ParseResult<any>\r\n\r\n  try {\r\n    ast = parse(content, parserOptions)\r\n  } catch (e) {\r\n    logger.error(\r\n      `\r\n      An error occured while parsing the Setting \"${file}\". The following error must be resolved before continuing:\r\n      `,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  try {\r\n    traverse(ast, {\r\n      ExportDefaultDeclaration: (path) => {\r\n        hasComponentExport = validateDefaultExport(path, ast)\r\n      },\r\n      ExportNamedDeclaration: (path) => {\r\n        hasConfigExport = validateConfigExport(path, \"setting\")\r\n      },\r\n    })\r\n  } catch (e) {\r\n    logger.error(\r\n      `\r\n      An error occured while validating the Setting \"${file}\". The following error must be resolved before continuing:`,\r\n      {\r\n        error: e,\r\n      }\r\n    )\r\n    return null\r\n  }\r\n\r\n  if (!hasComponentExport) {\r\n    logger.error(\r\n      `The default export in the Setting \"${file}\" is invalid and the page will not be injected. Please make sure that the default export is a valid React component.`\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  if (!hasConfigExport) {\r\n    logger.error(\r\n      `The named export \"config\" in the Setting \"${file}\" is invalid or missing and the settings page will not be injected. Please make sure that the file exports a valid config.`\r\n    )\r\n\r\n    return null\r\n  }\r\n\r\n  return {\r\n    path: cleanPath,\r\n    file,\r\n  }\r\n}\r\n\r\nasync function findAllValidSettings(dir: string) {\r\n  const settingsFiles: string[] = []\r\n\r\n  const dirExists = await fse.pathExists(dir)\r\n\r\n  if (!dirExists) {\r\n    return []\r\n  }\r\n\r\n  const paths = await fse.readdir(dir)\r\n\r\n  let hasSubDirs = false\r\n\r\n  // We only check the first level of directories for settings files\r\n  for (const pa of paths) {\r\n    const filePath = path.join(dir, pa)\r\n    const fileStat = await fse.stat(filePath)\r\n\r\n    if (fileStat.isDirectory()) {\r\n      const files = await fse.readdir(filePath)\r\n\r\n      for (const file of files) {\r\n        const filePath = path.join(dir, pa, file)\r\n        const fileStat = await fse.stat(filePath)\r\n\r\n        if (fileStat.isFile() && /^(.*\\/)?page\\.[jt]sx?$/i.test(file)) {\r\n          settingsFiles.push(filePath)\r\n          break\r\n        } else if (fileStat.isDirectory()) {\r\n          hasSubDirs = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hasSubDirs) {\r\n    logger.warn(\r\n      `The directory ${dir} contains subdirectories. Settings do not support nested routes, only UI Routes support nested paths.`\r\n    )\r\n  }\r\n\r\n  const validSettingsFiles = await Promise.all(\r\n    settingsFiles.map(async (file) => validateSetting(file, dir))\r\n  )\r\n\r\n  return validSettingsFiles.filter((file) => file !== null)\r\n}\r\n\r\n/**\r\n * Scans a directory for valid widgets.\r\n * A valid widget is a file that exports a valid widget config and a valid React component.\r\n */\r\nasync function findAllValidWidgets(dir: string) {\r\n  const jsxAndTsxFiles: string[] = []\r\n\r\n  const dirExists = await fse.pathExists(dir)\r\n\r\n  if (!dirExists) {\r\n    return []\r\n  }\r\n\r\n  async function traverseDirectory(currentPath: string) {\r\n    const files = await fse.readdir(currentPath)\r\n\r\n    for (const file of files) {\r\n      const filePath = path.join(currentPath, file)\r\n      const fileStat = await fse.stat(filePath)\r\n\r\n      if (fileStat.isDirectory()) {\r\n        await traverseDirectory(filePath)\r\n      } else if (fileStat.isFile() && /\\.(js|jsx|ts|tsx)$/i.test(file)) {\r\n        jsxAndTsxFiles.push(filePath)\r\n      }\r\n    }\r\n  }\r\n\r\n  await traverseDirectory(dir)\r\n\r\n  const promises = jsxAndTsxFiles.map((file) => {\r\n    const isValid = validateWidget(file)\r\n\r\n    return isValid ? file : null\r\n  })\r\n\r\n  const validFiles = await Promise.all(promises)\r\n\r\n  return validFiles.filter((file) => file !== null)\r\n}\r\n\r\n/**\r\n * Scans a directory for valid routes.\r\n * A valid route is a file that exports a optional route config and a valid React component.\r\n */\r\nasync function findAllValidRoutes(dir: string) {\r\n  const pageFiles: string[] = []\r\n\r\n  const dirExists = await fse.pathExists(dir)\r\n\r\n  if (!dirExists) {\r\n    return []\r\n  }\r\n\r\n  async function traverseDirectory(currentPath: string) {\r\n    const files = await fse.readdir(currentPath)\r\n\r\n    for (const file of files) {\r\n      const filePath = path.join(currentPath, file)\r\n      const fileStat = await fse.stat(filePath)\r\n\r\n      if (fileStat.isDirectory()) {\r\n        await traverseDirectory(filePath)\r\n      } else if (fileStat.isFile() && /^(.*\\/)?page\\.[jt]sx?$/i.test(file)) {\r\n        pageFiles.push(filePath)\r\n      }\r\n    }\r\n  }\r\n\r\n  await traverseDirectory(dir)\r\n\r\n  const promises = pageFiles.map(async (file) => {\r\n    return validateRoute(file, dir)\r\n  })\r\n\r\n  const validFiles = await Promise.all(promises)\r\n\r\n  return validFiles.filter((file) => file !== null)\r\n}\r\n\r\nexport {\r\n  createPath,\r\n  validateWidget,\r\n  validateRoute,\r\n  validateSetting,\r\n  findAllValidSettings,\r\n  findAllValidWidgets,\r\n  findAllValidRoutes,\r\n}\r\n","import dotenv from \"dotenv\"\r\nimport fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\n\r\nconst MEDUSA_ADMIN = /^MEDUSA_ADMIN_/i\r\n\r\nlet ENV_FILE_NAME = \"\"\r\nswitch (process.env.NODE_ENV) {\r\n  case \"production\":\r\n    ENV_FILE_NAME = \".env.production\"\r\n    break\r\n  case \"staging\":\r\n    ENV_FILE_NAME = \".env.staging\"\r\n    break\r\n  case \"test\":\r\n    ENV_FILE_NAME = \".env.test\"\r\n    break\r\n  case \"development\":\r\n  default:\r\n    ENV_FILE_NAME = \".env\"\r\n    break\r\n}\r\n\r\nif (fse.existsSync(ENV_FILE_NAME)) {\r\n  dotenv.config({ path: path.resolve(process.cwd(), ENV_FILE_NAME) })\r\n} else if (ENV_FILE_NAME !== \".env\") {\r\n  // Fall back to .env if the specified file does not exist\r\n  dotenv.config({ path: path.resolve(process.cwd(), \".env\") })\r\n}\r\n\r\ntype GetClientEnvArgs = {\r\n  path?: string\r\n  env?: string\r\n  backend?: string\r\n}\r\n\r\nexport const getClientEnv = (args: GetClientEnvArgs) => {\r\n  const raw = Object.keys(process.env)\r\n    .filter((key) => MEDUSA_ADMIN.test(key))\r\n    .reduce(\r\n      (acc, current) => {\r\n        acc[current] = process.env[current]\r\n\r\n        return acc\r\n      },\r\n      {\r\n        ADMIN_PATH: args.path || \"/\",\r\n        NODE_ENV: args.env || \"development\",\r\n        MEDUSA_BACKEND_URL: args.backend || process.env.MEDUSA_BACKEND_URL,\r\n      }\r\n    )\r\n\r\n  const stringified = {\r\n    \"process.env\": Object.keys(raw).reduce((env, key) => {\r\n      env[key] = JSON.stringify(raw[key])\r\n      return env\r\n    }, {}),\r\n  }\r\n\r\n  return stringified\r\n}\r\n","import chokidar from \"chokidar\"\r\nimport fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\nimport { createEntry } from \"./create-entry\"\r\nimport { logger } from \"./logger\"\r\n\r\n/**\r\n * Watches the local admin directory for changes and updates the extensions cache directory accordingly.\r\n */\r\nexport async function watchLocalAdminFolder(\r\n  appDir: string,\r\n  cacheDir: string,\r\n  plugins: string[]\r\n) {\r\n  const adminDir = path.resolve(appDir, \"src\", \"admin\")\r\n\r\n  const watcher = chokidar.watch(adminDir, {\r\n    ignored: /(^|[/\\\\])\\../,\r\n    ignoreInitial: true,\r\n  })\r\n\r\n  watcher.on(\"all\", async (event, file) => {\r\n    if (event === \"unlinkDir\" || event === \"unlink\") {\r\n      removeUnlinkedFile(file, appDir, cacheDir)\r\n    }\r\n\r\n    await createEntry({\r\n      appDir,\r\n      dest: cacheDir,\r\n      plugins,\r\n    })\r\n\r\n    logger.info(\"Extensions cache directory was re-initialized\")\r\n  })\r\n\r\n  process\r\n    .on(\"SIGINT\", async () => {\r\n      await watcher.close()\r\n    })\r\n    .on(\"SIGTERM\", async () => {\r\n      await watcher.close()\r\n    })\r\n}\r\n\r\nfunction removeUnlinkedFile(file: string, appDir: string, cacheDir: string) {\r\n  const srcDir = path.resolve(appDir, \"src\", \"admin\")\r\n  const relativePath = path.relative(srcDir, file)\r\n\r\n  const destDir = path.resolve(cacheDir, \"admin\", \"src\", \"extensions\")\r\n  const fileToDelete = path.resolve(destDir, relativePath)\r\n\r\n  try {\r\n    fse.removeSync(fileToDelete)\r\n  } catch (error) {\r\n    logger.error(`An error occurred while removing ${fileToDelete}: ${error}`)\r\n  }\r\n}\r\n","import fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\nimport webpack from \"webpack\"\r\nimport { CustomWebpackConfigArgs } from \"../types\"\r\nimport { logger } from \"../utils\"\r\nimport { validateArgs } from \"../utils/validate-args\"\r\nimport { getWebpackConfig } from \"./get-webpack-config\"\r\nimport { withCustomWebpackConfig } from \"./with-custom-webpack-config\"\r\n\r\nexport async function getCustomWebpackConfig(\r\n  appDir: string,\r\n  args: CustomWebpackConfigArgs\r\n) {\r\n  validateArgs(args)\r\n\r\n  let config = getWebpackConfig(args)\r\n\r\n  const adminConfigPath = path.join(appDir, \"src\", \"admin\", \"webpack.config.js\")\r\n\r\n  const pathExists = await fse.pathExists(adminConfigPath)\r\n\r\n  if (pathExists) {\r\n    let webpackAdminConfig: ReturnType<typeof withCustomWebpackConfig>\r\n\r\n    try {\r\n      webpackAdminConfig = require(adminConfigPath)\r\n    } catch (e) {\r\n      logger.panic(\r\n        `An error occured while trying to load your custom Webpack config. See the error below for details:`,\r\n        {\r\n          error: e,\r\n        }\r\n      )\r\n    }\r\n\r\n    if (typeof webpackAdminConfig === \"function\") {\r\n      if (args.devServer) {\r\n        config.devServer = args.devServer\r\n      }\r\n\r\n      config = webpackAdminConfig(config, webpack)\r\n\r\n      if (!config) {\r\n        logger.panic(\r\n          \"Nothing was returned from your custom webpack configuration\"\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return config\r\n}\r\n","import { CustomWebpackConfigArgs } from \"../types\"\r\nimport { logger } from \"./logger\"\r\n\r\nfunction validateArgs(args: CustomWebpackConfigArgs) {\r\n  const { options } = args\r\n\r\n  if (options.path) {\r\n    if (!options.path.startsWith(\"/\")) {\r\n      logger.panic(\r\n        \"'path' in the options of `@medusajs/admin` must start with a '/'\"\r\n      )\r\n    }\r\n\r\n    if (options.path !== \"/\" && options.path.endsWith(\"/\")) {\r\n      logger.panic(\r\n        \"'path' in the options of `@medusajs/admin` cannot end with a '/'\"\r\n      )\r\n    }\r\n\r\n    if (typeof options.path !== \"string\") {\r\n      logger.panic(\r\n        \"'path' in the options of `@medusajs/admin` must be a string\"\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport { validateArgs }\r\n","import ReactRefreshPlugin from \"@pmmmwh/react-refresh-webpack-plugin\"\r\nimport HtmlWebpackPlugin from \"html-webpack-plugin\"\r\nimport MiniCssExtractPlugin from \"mini-css-extract-plugin\"\r\nimport path from \"node:path\"\r\nimport { SwcMinifyWebpackPlugin } from \"swc-minify-webpack-plugin\"\r\nimport type { Configuration } from \"webpack\"\r\nimport webpack from \"webpack\"\r\nimport WebpackBar from \"webpackbar\"\r\nimport { WebpackConfigArgs } from \"../types\"\r\nimport { getClientEnv } from \"../utils\"\r\nimport { webpackAliases } from \"./webpack-aliases\"\r\n\r\nfunction formatPublicPath(path?: string) {\r\n  if (!path) {\r\n    return \"/app/\"\r\n  }\r\n\r\n  if (path === \"/\") {\r\n    return path\r\n  }\r\n\r\n  return path.endsWith(\"/\") ? path : `${path}/`\r\n}\r\n\r\nexport function getWebpackConfig({\r\n  entry,\r\n  dest,\r\n  cacheDir,\r\n  env,\r\n  options,\r\n  template,\r\n  reporting = \"fancy\",\r\n}: WebpackConfigArgs): Configuration {\r\n  const isProd = env === \"production\"\r\n\r\n  const envVars = getClientEnv({\r\n    env,\r\n    backend: options?.backend,\r\n    path: options?.path,\r\n  })\r\n\r\n  const publicPath = formatPublicPath(options?.path)\r\n\r\n  const webpackPlugins = isProd\r\n    ? [\r\n        new MiniCssExtractPlugin({\r\n          filename: \"[name].[chunkhash].css\",\r\n          chunkFilename: \"[name].[chunkhash].css\",\r\n        }),\r\n        new WebpackBar({\r\n          basic: reporting === \"minimal\",\r\n          fancy: reporting === \"fancy\",\r\n        }),\r\n      ]\r\n    : [new MiniCssExtractPlugin()]\r\n\r\n  return {\r\n    mode: env,\r\n    bail: !!isProd,\r\n    devtool: isProd ? false : \"eval-source-map\",\r\n    entry: [entry],\r\n    output: {\r\n      path: dest,\r\n      filename: isProd ? \"[name].[contenthash:8].js\" : \"[name].bundle.js\",\r\n      chunkFilename: isProd\r\n        ? \"[name].[contenthash:8].chunk.js\"\r\n        : \"[name].chunk.js\",\r\n    },\r\n    optimization: {\r\n      minimize: true,\r\n      minimizer: [new SwcMinifyWebpackPlugin()],\r\n      moduleIds: \"deterministic\",\r\n      runtimeChunk: true,\r\n    },\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.tsx?$/,\r\n          exclude: /node_modules/,\r\n          include: [cacheDir],\r\n          use: {\r\n            loader: \"swc-loader\",\r\n            options: {\r\n              jsc: {\r\n                parser: {\r\n                  syntax: \"typescript\", // Use TypeScript syntax for parsing\r\n                  jsx: true, // Enable JSX parsing\r\n                },\r\n                transform: {\r\n                  react: {\r\n                    runtime: \"automatic\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        {\r\n          test: /\\.jsx?$/,\r\n          exclude: /node_modules/,\r\n          include: [cacheDir],\r\n          use: {\r\n            loader: \"swc-loader\",\r\n            options: {\r\n              jsc: {\r\n                parser: {\r\n                  syntax: \"ecmascript\", // Use Ecmascript syntax for parsing\r\n                  jsx: true, // Enable JSX parsing\r\n                },\r\n                transform: {\r\n                  react: {\r\n                    runtime: \"automatic\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        {\r\n          test: /\\.css$/,\r\n          use: [MiniCssExtractPlugin.loader, \"css-loader\", \"postcss-loader\"],\r\n        },\r\n        {\r\n          test: /\\.svg$/,\r\n          oneOf: [\r\n            {\r\n              type: \"asset/resource\",\r\n              resourceQuery: /url/,\r\n            },\r\n            {\r\n              type: \"asset/inline\",\r\n              resourceQuery: /base64/,\r\n            },\r\n            {\r\n              issuer: /\\.[jt]sx?$/,\r\n              use: [\"@svgr/webpack\"],\r\n            },\r\n          ],\r\n          generator: {\r\n            filename: `images/${isProd ? \"[name]-[hash][ext]\" : \"[name][ext]\"}`,\r\n          },\r\n        },\r\n        {\r\n          test: /\\.(eot|otf|ttf|woff|woff2)$/,\r\n          type: \"asset/resource\",\r\n        },\r\n        {\r\n          test: /\\.(js|mjs)(\\.map)?$/,\r\n          enforce: \"pre\",\r\n          use: [\"source-map-loader\"],\r\n        },\r\n        {\r\n          test: /\\.m?jsx?$/,\r\n          resolve: {\r\n            fullySpecified: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    resolve: {\r\n      alias: webpackAliases,\r\n      symlinks: false,\r\n      extensions: [\".js\", \".jsx\", \".ts\", \".tsx\"],\r\n      mainFields: [\"browser\", \"module\", \"main\"],\r\n      modules: [\"node_modules\", path.resolve(__dirname, \"..\", \"node_modules\")],\r\n      fallback: {\r\n        readline: false,\r\n        path: false,\r\n      },\r\n    },\r\n    plugins: [\r\n      new HtmlWebpackPlugin({\r\n        inject: true,\r\n        template: template || path.resolve(__dirname, \"..\", \"ui\", \"index.html\"),\r\n        publicPath: publicPath,\r\n      }),\r\n\r\n      new webpack.DefinePlugin(envVars),\r\n\r\n      !isProd && new ReactRefreshPlugin(),\r\n\r\n      ...webpackPlugins,\r\n    ].filter(Boolean),\r\n  }\r\n}\r\n","export const ALIASED_PACKAGES = [\r\n  \"react\",\r\n  \"react-dom\",\r\n  \"react-router-dom\",\r\n  \"react-dnd\",\r\n  \"react-dnd-html5-backend\",\r\n  \"react-select\",\r\n  \"react-helmet-async\",\r\n  \"@tanstack/react-query\",\r\n  \"@tanstack/react-table\",\r\n  \"@emotion/react\",\r\n  \"medusa-react\",\r\n] as const\r\n","import { ALIASED_PACKAGES } from \"../constants\"\r\n\r\n/**\r\n * Ensure that the admin-ui uses the same version of these packages as the project.\r\n */\r\nexport const webpackAliases = ALIASED_PACKAGES.reduce((acc, pkg) => {\r\n  acc[`${pkg}$`] = require.resolve(pkg)\r\n  return acc\r\n}, {})\r\n","import webpack, { type Configuration } from \"webpack\"\r\n\r\n/**\r\n * Helper function to create a custom webpack config that can be used to\r\n * extend the default webpack config used to build the admin UI.\r\n */\r\nexport function withCustomWebpackConfig(\r\n  callback: (\r\n    config: Configuration,\r\n    webpackInstance: typeof webpack\r\n  ) => Configuration\r\n) {\r\n  return (config: Configuration, webpackInstance: typeof webpack) => {\r\n    return callback(config, webpackInstance)\r\n  }\r\n}\r\n","import fse from \"fs-extra\"\r\nimport path from \"node:path\"\r\n\r\ntype CleanArgs = {\r\n  appDir: string\r\n  outDir: string\r\n}\r\n\r\n/**\r\n * Cleans the build directory and cache directory.\r\n */\r\nexport async function clean({ appDir, outDir }: CleanArgs) {\r\n  const cacheDir = path.resolve(appDir, \".cache\", \"admin\")\r\n  const buildDir = path.resolve(appDir, outDir)\r\n\r\n  await fse.remove(buildDir)\r\n  await fse.remove(cacheDir)\r\n}\r\n","import path from \"node:path\"\r\nimport openBrowser from \"react-dev-utils/openBrowser\"\r\nimport webpack from \"webpack\"\r\nimport WebpackDevDerver, {\r\n  Configuration as DevServerConfiguration,\r\n} from \"webpack-dev-server\"\r\n\r\nimport { DevelopArgs } from \"../types\"\r\nimport { logger, watchLocalAdminFolder } from \"../utils\"\r\nimport { createCacheDir } from \"../utils/create-cache-dir\"\r\nimport { getCustomWebpackConfig } from \"../webpack\"\r\n\r\n/**\r\n * Starts a development server for the admin UI.\r\n */\r\nexport async function develop({\r\n  appDir,\r\n  buildDir,\r\n  plugins,\r\n  options = {\r\n    path: \"/\",\r\n    backend: process.env.BE_URL ?? \"http://localhost:9000\",\r\n    develop: {\r\n      open: true,\r\n      port: 7001,\r\n      logLevel: \"error\",\r\n      stats: \"normal\",\r\n    },\r\n  },\r\n}: DevelopArgs) {\r\n  const { cacheDir } = await createCacheDir({\r\n    appDir,\r\n    plugins,\r\n  })\r\n\r\n  const entry = path.resolve(cacheDir, \"admin\", \"src\", \"main.tsx\")\r\n  const dest = path.resolve(appDir, buildDir)\r\n  const env = \"development\"\r\n\r\n  const config = await getCustomWebpackConfig(appDir, {\r\n    entry,\r\n    dest,\r\n    cacheDir,\r\n    env,\r\n    options,\r\n  })\r\n\r\n  const compiler = webpack({\r\n    ...config,\r\n    infrastructureLogging: { level: options.develop.logLevel },\r\n    stats: options.develop.stats === \"normal\" ? \"errors-only\" : undefined,\r\n  })\r\n\r\n  const devServerArgs: DevServerConfiguration = {\r\n    port: options.develop.port,\r\n    client: {\r\n      logging: \"none\",\r\n      overlay: {\r\n        errors: true,\r\n        warnings: false,\r\n      },\r\n    },\r\n    open: false,\r\n    onListening: options.develop.open\r\n      ? function (devServer) {\r\n          if (!devServer) {\r\n            logger.warn(\"Failed to open browser.\")\r\n          }\r\n\r\n          openBrowser(\r\n            `http://localhost:${options.develop.port}${\r\n              options.path ? options.path : \"\"\r\n            }`\r\n          )\r\n        }\r\n      : undefined,\r\n    devMiddleware: {\r\n      publicPath: options.path,\r\n      stats: options.develop.stats === \"normal\" ? false : undefined,\r\n    },\r\n    historyApiFallback: {\r\n      index: options.path,\r\n      disableDotRule: true,\r\n    },\r\n    hot: true,\r\n  }\r\n\r\n  const server = new WebpackDevDerver(devServerArgs, compiler)\r\n\r\n  const runServer = async () => {\r\n    logger.info(\r\n      `Started development server on http://localhost:${options.develop.port}${\r\n        options.path ? options.path : \"\"\r\n      }`\r\n    )\r\n\r\n    await server.start()\r\n  }\r\n\r\n  await runServer()\r\n\r\n  await watchLocalAdminFolder(appDir, cacheDir, plugins)\r\n}\r\n"],"mappings":"0UAAO,IAAMA,EAAkB,CAC7B,YACA,gBACA,sBACA,sBACA,UACA,cACA,aACA,iBACA,oBACA,wBACA,aACA,iBACA,iBACA,cACA,kBACA,qBACA,WACA,eACA,eACA,aACA,eACA,mBACA,gBACA,oBACA,SACA,kBACA,wBACA,SACA,oBC7BK,IAAMC,EAAiB,CAE5B,uBACA,sBACA,oBACA,mBAEA,0BACA,yBACA,6BACA,4BAEA,0BACA,yBACA,uBACA,sBAEA,gCACA,+BACA,6BACA,4BAEA,yBACA,wBACA,sBACA,qBAEA,oCACA,mCACA,iCACA,gCAEA,4BACA,2BACA,yBACA,wBAEA,0BACA,yBACA,uBACA,sBAEA,2BACA,0BACA,wBACA,uBACA,0BACA,yBAEA,eACA,eClDF,OAAOC,MAAU,YACjB,OAAOC,OAA+B,UCDtC,OAAOC,OAAS,WAChB,OAAOC,MAAU,YCDjB,OAAOC,MAAS,WAKT,SAASC,EAAWC,EAAW,CAKpC,MAJIC,EAAAA,EAAIC,UAAUF,CAAAA,EAAKG,YAAW,GAAMH,EAAII,SAAS,UAAA,GAIjDH,EAAIC,UAAUF,CAAAA,EAAKK,OAAM,IAEzBL,EAAII,SAAS,OAAA,GACbJ,EAAII,SAAS,OAAA,GACbJ,EAAII,SAAS,gBAAA,GAOnB,CAhBgBL,EAAAA,EAAAA,cCLhB,OAAOO,MAAS,WAChB,OAAOC,MAAU,YACjB,OAAOC,MAAY,YCFnB,OAAOC,MAAY,aACnB,OAAOC,MAAc,WAErB,IAAMC,EAAS,oBAmBf,SAASC,IAAAA,CACP,IAAMC,EAAcC,QAAQC,OAAOC,KAAO,EACpCC,EAAQJ,EAAc,EAAI;EAAKK,OAAOL,CAAAA,EAAe,GAC3DM,QAAQC,IAAIH,CAAAA,EACZI,EAASC,SAASR,QAAQC,OAAQ,EAAG,CAAA,EACrCM,EAASE,gBAAgBT,QAAQC,MAAM,CACzC,CANSH,EAAAA,GAAAA,eAQT,IAAMY,GAAiBV,QAAQC,OAAOU,OAAS,CAACX,QAAQY,IAAIC,GACtDC,GAAQJ,GACVZ,GACA,IAAA,CAEA,EAEJ,SAASiB,IAAAA,CACP,IAAMC,EAASC,EAAA,CAACC,EAAeC,EAAaC,IAAAA,CAC1C,IAAMC,EAASH,IAAS,OAAS,MAAQA,EACnCI,EAASL,EAAA,IAAA,CACb,IAAMM,EACJL,IAAS,OACLM,EAAOC,KAAKD,EAAOE,KAAK7B,CAAAA,CAAAA,EACxBqB,IAAS,OACTM,EAAOG,OAAOH,EAAOE,KAAK7B,CAAAA,CAAAA,EAC1B2B,EAAOI,IAAIJ,EAAOE,KAAK7B,CAAAA,CAAAA,EAC7B,MAAO,GAAG2B,EAAOK,IAAI,IAAIC,KAAAA,EAAOC,mBAAkB,CAAA,KAAOR,KAAOJ,GAClE,EARe,UAUXC,GAAAA,MAAAA,EAAStB,aACXgB,GAAAA,EAGFT,QAAQgB,CAAAA,EAAQC,EAAAA,CAAAA,EAEZF,GAAAA,MAAAA,EAASY,OACX3B,QAAQ2B,MAAMZ,EAAQY,KAAK,CAE/B,EArBe,UAuBf,MAAO,CACLC,KAAM,CAACd,EAAKC,IAAYJ,EAAO,OAAQG,EAAKC,CAAAA,EAC5Cc,KAAM,CAACf,EAAKC,IAAYJ,EAAO,OAAQG,EAAKC,CAAAA,EAC5CY,MAAO,CAACb,EAAKC,IAAYJ,EAAO,QAASG,EAAKC,CAAAA,EAC9Ce,MAAO,CAAChB,EAAKC,IAAAA,CACXJ,EAAO,QAASG,EAAKC,CAAAA,EACrBJ,EAAO,QAAS,kBAAmB,CAAC,CAAA,EACpChB,QAAQoC,KAAK,CAAA,CACf,CACF,CACF,CAlCSrB,EAAAA,GAAAA,gBAoCF,IAAMsB,EAAStB,GAAAA,ECzEf,SAASuB,EAAcC,EAAY,CAExC,IAAMC,EADYC,QAAQC,WAAa,QACT,KAAO,IAC/BC,EAAQ,IAAIC,OAAO,KAAKJ,IAAa,GAAA,EAC3C,OAAOD,EAAKM,QAAQF,EAAO,GAAA,CAC7B,CALgBL,EAAAA,EAAAA,iBCAhB,OAASQ,SAAAA,MAAyC,gBAClD,OAAOC,MAA4B,kBASnC,OAAOC,MAAS,WAChB,OAAOC,MAAU,OAKjB,SAASC,EAAqBC,EAAS,CACrC,OAAOC,EAAeC,SAASF,CAAAA,CACjC,CAFSD,EAAAA,EAAAA,wBAQT,SAASI,GACPC,EAA6D,CAE7D,IAAMC,EAAeD,EAAWE,KAC7BC,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,MAAA,EAGnB,GAAI,CAACL,EACH,MAAO,GAGT,IAAIM,EAAc,GAElB,OAAIN,EAAaO,MAAMJ,OAAS,gBAC9BG,EAAcZ,EAAqBM,EAAaO,MAAMA,KAAK,EAClDP,EAAaO,MAAMJ,OAAS,oBACrCG,EAAcN,EAAaO,MAAMC,SAASC,MACvCd,GACCA,EAAKQ,OAAS,iBAAmBT,EAAqBC,EAAKY,KAAK,CAAA,GAI/DD,CACT,CA1BSR,EAAAA,GAAAA,8BA4BT,SAASY,GACPX,EAA6D,CAE7D,IAAMY,EAAeZ,EAAWE,KAC7BC,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,MAAA,EAInB,GAAI,CAACM,EACH,MAAO,GAGT,IAAMC,EAAYD,EAAaJ,MAE3BM,EAAe,GAGnB,OACED,EAAUb,WAAWe,KAClBZ,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,SACfH,EAAEK,MAAMJ,OAAS,eAAA,IAGrBU,EAAe,IAGVA,CACT,CAjCSH,EAAAA,GAAAA,6BAmCT,SAASK,GACPhB,EAA6D,CAE7D,IAAMiB,EAAejB,EAAWE,KAC7BC,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,MAAA,EAInB,GAAI,CAACW,EACH,MAAO,GAGT,IAAMC,EAAYD,EAAaT,MAE3BW,EAAW,GACXC,EAAiB,GAErB,OACEF,EAAUlB,WAAWe,KAClBZ,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,SACfH,EAAEK,MAAMJ,OAAS,eAAA,IAGrBe,EAAW,IAIXD,EAAUlB,WAAWe,KAClBZ,GACCA,EAAEC,OAAS,kBACXD,EAAEE,IAAID,OAAS,cACfD,EAAEE,IAAIC,OAAS,eACfH,EAAEK,MAAMJ,OAAS,eAAA,IAGrBgB,EAAiB,IAGZD,GAAYC,CACrB,CA7CSJ,EAAAA,GAAAA,+BA+CT,SAASK,EACPC,EACAlB,EAAoC,CAEpC,IAAImB,EAAuB,GAErBC,EAAcF,EAAKG,KAAKD,YAC9B,GAAIA,GAAeA,EAAYpB,OAAS,sBAAuB,CAC7D,IAAMsB,EAAoBF,EAAYG,aAAazB,KAChD0B,GACCA,EAAExB,OAAS,sBACXwB,EAAEC,GAAGzB,OAAS,cACdwB,EAAEC,GAAGvB,OAAS,QAAA,EAGlB,GACEoB,GACAA,EAAkBI,KAAK1B,OAAS,mBAChC,CACA,IAAMJ,EAAa0B,EAAkBI,KAAK9B,WAEtCI,IAAS,WACXmB,EAAuBxB,GAA2BC,CAAAA,GAGhDI,IAAS,UACXmB,EAAuBZ,GAA0BX,CAAAA,GAG/CI,IAAS,YACXmB,EAAuBP,GAA4BhB,CAAAA,QAGrDuB,EAAuB,GAI3B,OAAOA,CACT,CAtCSF,EAAAA,EAAAA,wBA6CT,SAASU,EACPT,EACAU,EAAqB,CAErB,IAAIC,EAAqB,GAEnBT,EAAcF,EAAKG,KAAKD,YAC9B,GACEA,IACCA,EAAYpB,OAAS,cACpBoB,EAAYpB,OAAS,uBACvB,CACA,IAAM8B,EACJV,EAAYpB,OAAS,aACjBoB,EAAYlB,KACZkB,EAAYK,IAAML,EAAYK,GAAGvB,KAEvC,GAAI4B,EACF,GAAI,CACFC,EAASH,EAAK,CACZI,mBAAmB,CAAEX,KAAAA,EAAMY,MAAAA,CAAK,EAAE,CAChC,IAAIC,EAAkB,GAElBb,EAAKI,GAAGzB,OAAS,cAAgBqB,EAAKI,GAAGvB,OAAS4B,IACpDI,EAAkB,IAGfA,GAILH,EACEV,EACA,CACEc,gBAAgBjB,EAAI,CArNpC,IAAAkB,EAAAC,KAuNoBnB,EAAAA,EAAKG,KAAKiB,WAAVpB,YAAAA,EAAoBlB,QAAS,gBAC7BkB,EAAAA,EAAKG,KAAKiB,WAAVpB,YAAAA,EAAoBlB,QAAS,iBAE7B6B,EAAqB,GAEzB,CACF,EACAI,CAAAA,CAEJ,CACF,CAAA,CACF,OAASM,EAAP,CACAC,OAAAA,EAAOC,MACL,6DAA6DvB,6DAC7D,CACEuB,MAAOF,CACT,CAAA,EAEK,EACT,EAIJ,OAAOV,CACT,CA5DSF,EAAAA,EAAAA,yBAkET,eAAee,EAAeC,EAAY,CACxC,IAAMC,EAAU,MAAMC,EAAIC,SAASH,EAAM,OAAA,EAEnCI,EAA+B,CACnCC,WAAY,SACZC,QAAS,CAAC,MACZ,GAEIN,EAAKO,SAAS,KAAA,GAAUP,EAAKO,SAAS,MAAA,IACxCH,EAAcE,QAAQE,KAAK,YAAA,EAG7B,IAAIvB,EAEJ,GAAI,CACFA,EAAMwB,EAAMR,EAASG,CAAAA,CACvB,OAASR,EAAP,CACAC,OAAAA,EAAOC,MACL,+CAA+CE,iGAC/C,CACEF,MAAOF,CACT,CAAA,EAEK,EACT,CAEA,IAAIc,EAAkB,GAClBxB,EAAqB,GAEzB,GAAI,CACFE,EAASH,EAAK,CACZ0B,yBAA2BpC,GAAAA,CACzBW,EAAqBF,EAAsBT,EAAMU,CAAAA,CACnD,EACA2B,uBAAyBrC,GAAAA,CACvBmC,EAAkBpC,EAAqBC,EAAM,QAAA,CAC/C,CACF,CAAA,CACF,OAASqB,EAAP,CACAC,OAAAA,EAAOC,MACL,kDAAkDE,8DAClD,CACEF,MAAOF,CACT,CAAA,EAEK,EACT,CAEA,OAAIc,GAAmB,CAACxB,IACjBA,GACHW,EAAOC,MACL,qCAAqCE,yHAA4H,GAKnK,CAACU,GAAmBxB,GACtBW,EAAOC,MACL,gCAAgCE,0FAA6F,EAI1HU,GAAmBxB,CAC5B,CA/Dea,EAAAA,EAAAA,kBAsEf,SAASc,GAAWC,EAAgB,CAClC,IAAMC,EAAiBC,EAAcF,CAAAA,EAE/BG,EAAQ,aAKd,OAJqBF,EAAeG,QAAQD,EAAO,KAAA,EAE1BC,QAAQ,oBAAqB,EAAA,CAGxD,CATSL,EAAAA,GAAAA,cAWT,SAASM,GAAiB5C,EAAS,CACjC,OAAO6C,EAAgBrE,SAASwB,CAAAA,CAClC,CAFS4C,EAAAA,GAAAA,oBAIT,SAASE,GACP9C,EACA+C,EAAc,CAKd,GAAIH,GAAiB5C,CAAAA,EACnB,MAAO,CACLuB,MAAO,gBAAgBwB,gCAAqC/C,KAC5DgD,MAAO,EACT,EAGF,IAAMC,EAAe,CAAC,IAAK,IAAK,KAEhC,QAASC,EAAI,EAAGA,EAAIlD,EAAKmD,OAAQD,IAAK,CACpC,IAAME,EAAcpD,EAAKkD,CAAAA,EAEzB,GACE,CAACD,EAAazE,SAAS4E,CAAAA,GACvB,CAAC,cAAcC,KAAKD,CAAAA,EAEpB,MAAO,CACL7B,MAAO,gBAAgBwB,+BAAoC/C,kEAC3DgD,MAAO,EACT,EAGF,GAAII,IAAgB,MAAQF,IAAM,GAAKlD,EAAKkD,EAAI,CAAA,IAAO,KACrD,MAAO,CACL3B,MAAO,gBAAgBwB,+BAAoC/C,qDAC3DgD,MAAO,EACT,EAIJ,MAAO,CACLA,MAAO,GACPzB,MAAO,EACT,CACF,CAzCSuB,EAAAA,GAAAA,gBAkDT,eAAeQ,GACb7B,EACA8B,EAAgB,CAMhB,IAAMC,EAAYlB,GAAWb,EAAKkB,QAAQY,EAAU,EAAA,CAAA,EAE9C,CAAEP,MAAAA,EAAOzB,MAAAA,CAAK,EAAKuB,GAAaU,EAAW/B,CAAAA,EAEjD,GAAI,CAACuB,EACH1B,OAAAA,EAAOC,MACL,YAAYiC,uBAA+B/B,uHAA0HF,GAAO,EAGvK,KAGT,IAAMG,EAAU,MAAMC,EAAIC,SAASH,EAAM,OAAA,EAErCd,EAAqB,GACrBwB,EAAkB,GAEhBN,EAA+B,CACnCC,WAAY,SACZC,QAAS,CAAC,MACZ,GAEIN,EAAKO,SAAS,KAAA,GAAUP,EAAKO,SAAS,MAAA,IACxCH,EAAcE,QAAQE,KAAK,YAAA,EAG7B,IAAIvB,EAEJ,GAAI,CACFA,EAAMwB,EAAMR,EAASG,CAAAA,CACvB,OAASR,EAAP,CACAC,OAAAA,EAAOC,MACL,iDAAiDE,mGACjD,CACEF,MAAOF,CACT,CAAA,EAEK,IACT,CAEA,GAAI,CACFR,EAASH,EAAK,CACZ0B,yBAA2BpC,GAAAA,CACzBW,EAAqBF,EAAsBT,EAAMU,CAAAA,CACnD,EACA2B,uBAAyBrC,GAAAA,CACvBmC,EAAkBpC,EAAqBC,EAAM,OAAA,CAC/C,CACF,CAAA,CACF,OAASqB,EAAP,CACAC,OAAAA,EAAOC,MACL,oDAAoDE,mGACpD,CACEF,MAAOF,CACT,CAAA,EAEK,IACT,CAEA,OAAKV,EAQE,CACLX,KAAMwD,EACNC,UAAWtB,EACXV,KAAAA,CACF,GAXEH,EAAOC,MACL,uCAAuCE,sHAAyH,EAG3J,KAQX,CAhFe6B,EAAAA,GAAAA,iBAkFf,eAAeI,GAAgBjC,EAAc8B,EAAgB,CAC3D,IAAMC,EAAYlB,GAAWb,EAAKkB,QAAQY,EAAU,EAAA,CAAA,EAE9C,CAAEP,MAAAA,EAAOzB,MAAAA,CAAK,EAAKuB,GAAaU,EAAW/B,CAAAA,EAEjD,GAAI,CAACuB,EACH1B,OAAAA,EAAOC,MACL,YAAYiC,sBAA8B/B,2HAA8HF,GAAO,EAG1K,KAGT,IAAMG,EAAU,MAAMC,EAAIC,SAASH,EAAM,OAAA,EAErCd,EAAqB,GACrBwB,EAAkB,GAEhBN,EAA+B,CACnCC,WAAY,SACZC,QAAS,CAAC,MACZ,GAEIN,EAAKO,SAAS,KAAA,GAAUP,EAAKO,SAAS,MAAA,IACxCH,EAAcE,QAAQE,KAAK,YAAA,EAG7B,IAAIvB,EAEJ,GAAI,CACFA,EAAMwB,EAAMR,EAASG,CAAAA,CACvB,OAASR,EAAP,CACAC,OAAAA,EAAOC,MACL;oDAC8CE;QAE9C,CACEF,MAAOF,CACT,CAAA,EAGK,IACT,CAEA,GAAI,CACFR,EAASH,EAAK,CACZ0B,yBAA2BpC,GAAAA,CACzBW,EAAqBF,EAAsBT,EAAMU,CAAAA,CACnD,EACA2B,uBAAyBrC,GAAAA,CACvBmC,EAAkBpC,EAAqBC,EAAM,SAAA,CAC/C,CACF,CAAA,CACF,OAASqB,EAAP,CACAC,OAAAA,EAAOC,MACL;uDACiDE,8DACjD,CACEF,MAAOF,CACT,CAAA,EAEK,IACT,CAEA,OAAKV,EAQAwB,EAQE,CACLnC,KAAMwD,EACN/B,KAAAA,CACF,GAVEH,EAAOC,MACL,6CAA6CE,6HAAgI,EAGxK,OAZPH,EAAOC,MACL,sCAAsCE,uHAA0H,EAG3J,KAeX,CApFeiC,EAAAA,GAAAA,mBAsFf,eAAeC,EAAqBC,EAAW,CAC7C,IAAMC,EAA0B,CAAA,EAIhC,GAAI,CAFc,MAAMlC,EAAImC,WAAWF,CAAAA,EAGrC,MAAO,CAAA,EAGT,IAAMG,EAAQ,MAAMpC,EAAIqC,QAAQJ,CAAAA,EAE5BK,EAAa,GAGjB,QAAWC,KAAMH,EAAO,CACtB,IAAMxB,EAAWvC,EAAKmE,KAAKP,EAAKM,CAAAA,EAGhC,IAFiB,MAAMvC,EAAIyC,KAAK7B,CAAAA,GAEnB8B,YAAW,EAAI,CAC1B,IAAMC,EAAQ,MAAM3C,EAAIqC,QAAQzB,CAAAA,EAEhC,QAAWd,KAAQ6C,EAAO,CACxB,IAAM/B,EAAWvC,EAAKmE,KAAKP,EAAKM,EAAIzC,CAAAA,EAC9B8C,EAAW,MAAM5C,EAAIyC,KAAK7B,CAAAA,EAEhC,GAAIgC,EAASC,OAAM,GAAM,0BAA0BnB,KAAK5B,CAAAA,EAAO,CAC7DoC,EAAc5B,KAAKM,CAAAA,EACnB,WACSgC,EAASF,YAAW,IAC7BJ,EAAa,MAMrB,OAAIA,GACF3C,EAAOmD,KACL,iBAAiBb,wGAA0G,GAIpG,MAAMc,QAAQC,IACvCd,EAAce,IAAI,MAAOnD,GAASiC,GAAgBjC,EAAMmC,CAAAA,CAAAA,CAAAA,GAGhCiB,OAAQpD,GAASA,IAAS,IAAA,CACtD,CA9CekC,EAAAA,EAAAA,wBAoDf,eAAemB,EAAoBlB,EAAW,CAC5C,IAAMmB,EAA2B,CAAA,EAIjC,GAAI,CAFc,MAAMpD,EAAImC,WAAWF,CAAAA,EAGrC,MAAO,CAAA,EAGT,eAAeoB,EAAkBC,EAAmB,CAClD,IAAMX,EAAQ,MAAM3C,EAAIqC,QAAQiB,CAAAA,EAEhC,QAAWxD,KAAQ6C,EAAO,CACxB,IAAM/B,EAAWvC,EAAKmE,KAAKc,EAAaxD,CAAAA,EAClC8C,EAAW,MAAM5C,EAAIyC,KAAK7B,CAAAA,EAE5BgC,EAASF,YAAW,EACtB,MAAMW,EAAkBzC,CAAAA,EACfgC,EAASC,OAAM,GAAM,sBAAsBnB,KAAK5B,CAAAA,GACzDsD,EAAe9C,KAAKM,CAAAA,EAG1B,CAbeyC,EAAAA,EAAAA,qBAef,MAAMA,EAAkBpB,CAAAA,EAExB,IAAMsB,EAAWH,EAAeH,IAAKnD,GACnBD,EAAeC,CAAAA,EAEdA,EAAO,IAC1B,EAIA,OAFmB,MAAMiD,QAAQC,IAAIO,CAAAA,GAEnBL,OAAQpD,GAASA,IAAS,IAAA,CAC9C,CAnCeqD,EAAAA,EAAAA,uBAyCf,eAAeK,EAAmBvB,EAAW,CAC3C,IAAMwB,EAAsB,CAAA,EAI5B,GAAI,CAFc,MAAMzD,EAAImC,WAAWF,CAAAA,EAGrC,MAAO,CAAA,EAGT,eAAeoB,EAAkBC,EAAmB,CAClD,IAAMX,EAAQ,MAAM3C,EAAIqC,QAAQiB,CAAAA,EAEhC,QAAWxD,KAAQ6C,EAAO,CACxB,IAAM/B,EAAWvC,EAAKmE,KAAKc,EAAaxD,CAAAA,EAClC8C,EAAW,MAAM5C,EAAIyC,KAAK7B,CAAAA,EAE5BgC,EAASF,YAAW,EACtB,MAAMW,EAAkBzC,CAAAA,EACfgC,EAASC,OAAM,GAAM,0BAA0BnB,KAAK5B,CAAAA,GAC7D2D,EAAUnD,KAAKM,CAAAA,EAGrB,CAbeyC,EAAAA,EAAAA,qBAef,MAAMA,EAAkBpB,CAAAA,EAExB,IAAMsB,EAAWE,EAAUR,IAAI,MAAOnD,GAC7B6B,GAAc7B,EAAMmC,CAAAA,CAC7B,EAIA,OAFmB,MAAMc,QAAQC,IAAIO,CAAAA,GAEnBL,OAAQpD,GAASA,IAAS,IAAA,CAC9C,CAjCe0D,EAAAA,EAAAA,sBHrnBf,IAAME,EAAiB,YAEvB,eAAeC,GAAoBC,EAAaC,EAAY,CAC1D,GAAI,CACF,MAAMC,EAAIC,KAAKH,EAAKC,EAAM,CACxBG,OAAQC,CACV,CAAA,CACF,OAASC,EAAP,CACAC,OAAAA,EAAOC,MACL,oFACA,CACEA,MAAOF,CACT,CAAA,EAGK,EACT,CAEA,MAAO,EACT,CAjBeP,EAAAA,GAAAA,uBAsBf,eAAeU,GAA2BC,EAAgBT,EAAY,CACpE,IAAMU,EAAgBC,EAAKC,QAAQH,EAAQ,MAAO,OAAA,EAIlD,GAAI,CAFwB,MAAMR,EAAIY,WAAWH,CAAAA,EAG/C,MAAO,GAQT,GAAI,CALW,MAAMZ,GACnBY,EACAC,EAAKC,QAAQZ,EAAM,QAAS,MAAO,YAAA,CAAA,EAInCM,OAAAA,EAAOC,MACL,oJAAA,EAEK,GAGT,GAAM,CAACO,EAAcC,EAAaC,CAAAA,EAAiB,MAAMC,QAAQC,IAAI,CACnEC,EACER,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,SAAA,CAAA,EAEnDoB,EACET,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,QAAA,CAAA,EAEnDqB,EACEV,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,UAAA,CAAA,EAEpD,EAEKsB,EAAeR,EAAaS,IAAI,CAACC,EAAMC,IAAAA,CAC3C,IAAMC,EAAeC,EACnBhB,EACGiB,SAASjB,EAAKC,QAAQZ,EAAM,QAAS,MAAO,YAAA,EAAewB,CAAAA,EAC3DK,QAAQhC,EAAgB,EAAA,CAAA,EAG7B,MAAO,CACLiC,gBAAiB,gBAAgBL,8BAAkCA,eAAmBC,KACtFK,UAAW,sBAAsBN,+BAAmCA,uBACtE,CACF,CAAA,EAEMO,EAAcjB,EAAYQ,IAAI,CAACU,EAAOR,IAAAA,CAC1C,IAAMC,EAAeC,EACnBhB,EACGiB,SAASjB,EAAKC,QAAQZ,EAAM,QAAS,MAAO,YAAA,EAAeiC,EAAMT,IAAI,EACrEK,QAAQhC,EAAgB,EAAA,CAAA,EAGvBiC,GAAkBG,EAAMC,UAC1B,cAAcT,6BAAiCA,eAAmBC,KAClE,cAAcD,aAAiBC,KAE7BK,GAAYE,EAAMC,UACpB,oBAAoBT,8BAAkCA,6BAAiCQ,EAAMtB,YAC7F,oBAAoBc,uBAA2BQ,EAAMtB,2BAEzD,MAAO,CACLmB,gBAAAA,GACAC,UAAAA,EACF,CACF,CAAA,EAEMI,EAAgBnB,EAAcO,IAAI,CAACa,EAASX,IAAAA,CAChD,IAAMC,EAAeC,EACnBhB,EACGiB,SACCjB,EAAKC,QAAQZ,EAAM,QAAS,MAAO,YAAA,EACnCoC,EAAQZ,IAAI,EAEbK,QAAQhC,EAAgB,EAAA,CAAA,EAG7B,MAAO,CACLiC,gBAAiB,iBAAiBL,+BAAmCA,eAAmBC,KACxFK,UAAW,uBAAuBN,gCAAoCA,aAAiBW,EAAQzB,4BACjG,CACF,CAAA,EAEM0B,EAAkB,IAAIf,KAAiBU,KAAgBG,GAEvDG,EAAkBC;MACpBF,EAAgBd,IAAKQ,GAAcA,EAAUD,eAAe,EAAEU,KAAK;CAAA;;;;;UAK/DH,EAAgBd,IAAKQ,GAAcA,EAAUA,SAAS,EAAES,KAAK;CAAA;;;;;IAOrE,GAAI,CACF,MAAMvC,EAAIwC,WACR9B,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,iBAAA,EACjDsC,CAAAA,CAEJ,OAASjC,EAAP,CACAC,EAAOoC,MACL,4FACA,CACEnC,MAAOF,CACT,CAAA,CAEJ,CAEA,MAAO,EACT,CAjHeG,EAAAA,GAAAA,8BAmHf,SAASmC,GAA0BC,EAAiB,CAClD,IAAMC,EAAkC,CAAA,EAExC,QAAWC,KAAUF,EACnB,GAAI,CACF,IAAMG,EAAYpC,EAAKqC,QACrBC,EAAQrC,QAAQ,GAAGkC,iBAAuB,CACxCI,MAAO,CAACC,QAAQC,IAAG,EACrB,CAAA,CAAA,EAEIC,EAAa1C,EAAKC,QACtBmC,EACA,OACA,QACA,mBAAA,EAGE9C,EAAIqD,WAAWD,CAAAA,GACjBR,EAAsBU,KAAKF,CAAAA,CAE/B,MAAE,CACA/C,EAAOkD,KACL,2EAA2EV,kCAAuC,CAGtH,CAGF,OAAOD,CACT,CA7BSF,EAAAA,GAAAA,6BA+BT,eAAec,GAAyBzD,EAAc4C,EAAiB,CACrE,IAAMc,EAAkBnB;;;;;;;;UAQhBK,EACCrB,IAAKuB,GAQG,IAPqBnB,EAC1BhB,EAAKiB,SACHjB,EAAKC,QAAQZ,EAAM,OAAA,EACnBW,EAAKqC,QAAQrC,EAAK6B,KAAKM,EAAQ,KAAM,IAAA,CAAA,CAAA,CAAA,oCAK3C,EACCN,KAAK;CAAA;;;;IAMd,GAAI,CACF,MAAMvC,EAAIwC,WACR9B,EAAKC,QAAQZ,EAAM,QAAS,qBAAA,EAC5B0D,CAAAA,CAEJ,MAAE,CACApD,EAAOkD,KACL,gDAAgDxD,8HAAiI,CAErL,CACF,CApCeyD,EAAAA,GAAAA,4BAsCf,eAAeE,GACb3D,EACA4C,EACAgB,EAA2B,CAE3B,GAAI,CAAChB,EAAQiB,QAAU,CAACD,EAAoB,CAG1C,IAAME,EAAavB;;;;MAMnB,GAAI,CACF,MAAMtC,EAAIwC,WACR9B,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,gBAAA,EACjD8D,CAAAA,CAEJ,OAASzD,EAAP,CACAC,EAAOoC,MACL,2FACA,CACEnC,MAAOF,CACT,CAAA,CAEJ,CAEA,OAaF,IAAMgC,EAAkB,IAVHO,EAAQrB,IAAKuB,GACXnB,EACnBhB,EACGiB,SAASjB,EAAKC,QAAQZ,EAAM,QAAS,MAAO,YAAA,EAAe8C,CAAAA,EAC3DjB,QAAQhC,EAAgB,EAAA,CAAA,CAI/B,EAGkB0B,IAAI,CAACuB,EAAQrB,KAGpB,CACLK,gBAHsB,gBAAgBL,WAAeqB,KAIrDf,UAAW,SAASN,GACtB,EACF,KACImC,EACA,CACE,CACE9B,gBAAiB,0CACjBC,UAAW,YACb,GAEF,CAAA,GAGAO,EAAkBC;QAClBF,EACCd,IAAKQ,GAAcA,EAAUD,eAAe,EAC5CU,KAAK;CAAA;;;UAGJH,EAAgBd,IAAKQ,GAAcA,EAAUA,SAAS,EAAES,KAAK;CAAA;;;;MAMrE,GAAI,CACF,MAAMvC,EAAIwC,WACR9B,EAAKC,QAAQZ,EAAM,QAAS,MAAO,aAAc,gBAAA,EACjDsC,CAAAA,CAEJ,OAASjC,EAAP,CACAC,EAAOoC,MACL,8EACA,CACEnC,MAAOF,CACT,CAAA,CAEJ,CACF,CArFesD,EAAAA,GAAAA,6BA6Ff,eAAsBI,EAAY,CAAEtD,OAAAA,EAAQT,KAAAA,EAAM4C,QAAAA,CAAO,EAAmB,CAC1E,IAAMgB,EAAqB,MAAMpD,GAA2BC,EAAQT,CAAAA,EAE9DgE,EAAerB,GAA0BC,CAAAA,EAE/C,MAAMe,GAA0B3D,EAAMgE,EAAcJ,CAAAA,EACpD,MAAMH,GAAyBzD,EAAMgE,CAAAA,CACvC,CAPsBD,EAAAA,EAAAA,eFnTtB,eAAeE,GAAUC,EAAY,CACnC,IAAMC,EAAWC,EAAKC,QAAQC,UAAW,KAAM,IAAA,EACzCC,EAAUH,EAAKC,QAAQH,EAAM,OAAA,EAEnC,GAAI,CACF,MAAMM,GAAIC,KAAKN,EAAUI,EAAS,CAChCG,OAAQC,CACV,CAAA,CACF,OAASC,EAAP,CACAC,EAAOC,MACL,kCAAkCP,sCAClC,CACEQ,MAAOH,CACT,CAAA,CAEJ,CACF,CAhBeX,EAAAA,GAAAA,aAuBf,eAAee,EAAe,CAAEC,OAAAA,EAAQC,QAAAA,CAAO,EAAsB,CACnE,IAAMC,EAAWf,EAAKC,QAAQY,EAAQ,QAAA,EAEtC,aAAMhB,GAAUkB,CAAAA,EAEhB,MAAMC,EAAY,CAChBH,OAAAA,EACAf,KAAMiB,EACND,QAAAA,CACF,CAAA,EAEO,CACLC,SAAAA,CACF,CACF,CAdeH,EAAAA,EAAAA,kBM7Bf,OAAOK,OAAY,SACnB,OAAOC,OAAS,WAChB,OAAOC,OAAU,YAEjB,IAAMC,GAAe,kBAEjBC,EAAgB,GACpB,OAAQC,QAAQC,IAAIC,SAAQ,CAC1B,IAAK,aACHH,EAAgB,kBAChB,MACF,IAAK,UACHA,EAAgB,eAChB,MACF,IAAK,OACHA,EAAgB,YAChB,MACF,IAAK,cACL,QACEA,EAAgB,OAChB,KACJ,CAEII,GAAIC,WAAWL,CAAAA,EACjBM,GAAOC,OAAO,CAAEC,KAAMA,GAAKC,QAAQR,QAAQS,IAAG,EAAIV,CAAAA,CAAe,CAAA,EACxDA,IAAkB,QAE3BM,GAAOC,OAAO,CAAEC,KAAMA,GAAKC,QAAQR,QAAQS,IAAG,EAAI,MAAA,CAAQ,CAAA,EASrD,IAAMC,EAAeC,EAACC,GAAAA,CAC3B,IAAMC,EAAMC,OAAOC,KAAKf,QAAQC,GAAG,EAChCe,OAAQC,GAAQnB,GAAaoB,KAAKD,CAAAA,CAAAA,EAClCE,OACC,CAACC,EAAKC,KACJD,EAAIC,CAAAA,EAAWrB,QAAQC,IAAIoB,CAAAA,EAEpBD,GAET,CACEE,WAAYV,EAAKL,MAAQ,IACzBL,SAAUU,EAAKX,KAAO,cACtBsB,mBAAoBX,EAAKY,SAAWxB,QAAQC,IAAIsB,kBAClD,CAAA,EAUJ,MAPoB,CAClB,cAAeT,OAAOC,KAAKF,CAAAA,EAAKM,OAAO,CAAClB,EAAKgB,KAC3ChB,EAAIgB,CAAAA,EAAOQ,KAAKC,UAAUb,EAAII,CAAAA,CAAI,EAC3BhB,GACN,CAAC,CAAA,CACN,CAGF,EAxB4B,gBCpC5B,OAAO0B,OAAc,WACrB,OAAOC,OAAS,WAChB,OAAOC,MAAU,YAOjB,eAAsBC,EACpBC,EACAC,EACAC,EAAiB,CAEjB,IAAMC,EAAWC,EAAKC,QAAQL,EAAQ,MAAO,OAAA,EAEvCM,EAAUC,GAASC,MAAML,EAAU,CACvCM,QAAS,eACTC,cAAe,EACjB,CAAA,EAEAJ,EAAQK,GAAG,MAAO,MAAOC,EAAOC,IAAAA,EAC1BD,IAAU,aAAeA,IAAU,WACrCE,GAAmBD,EAAMb,EAAQC,CAAAA,EAGnC,MAAMc,EAAY,CAChBf,OAAAA,EACAgB,KAAMf,EACNC,QAAAA,CACF,CAAA,EAEAe,EAAOC,KAAK,+CAAA,CACd,CAAA,EAEAC,QACGR,GAAG,SAAU,SAAA,CACZ,MAAML,EAAQc,MAAK,CACrB,CAAA,EACCT,GAAG,UAAW,SAAA,CACb,MAAML,EAAQc,MAAK,CACrB,CAAA,CACJ,CAjCsBrB,EAAAA,EAAAA,yBAmCtB,SAASe,GAAmBD,EAAcb,EAAgBC,EAAgB,CACxE,IAAMoB,EAASjB,EAAKC,QAAQL,EAAQ,MAAO,OAAA,EACrCsB,EAAelB,EAAKmB,SAASF,EAAQR,CAAAA,EAErCW,EAAUpB,EAAKC,QAAQJ,EAAU,QAAS,MAAO,YAAA,EACjDwB,EAAerB,EAAKC,QAAQmB,EAASF,CAAAA,EAE3C,GAAI,CACFI,GAAIC,WAAWF,CAAAA,CACjB,OAASG,EAAP,CACAX,EAAOW,MAAM,oCAAoCH,MAAiBG,GAAO,CAC3E,CACF,CAZSd,EAAAA,GAAAA,sBC5CT,OAAOe,OAAS,WAChB,OAAOC,OAAU,YACjB,OAAOC,OAAa,UCCpB,SAASC,GAAaC,EAA6B,CACjD,GAAM,CAAEC,QAAAA,CAAO,EAAKD,EAEhBC,EAAQC,OACLD,EAAQC,KAAKC,WAAW,GAAA,GAC3BC,EAAOC,MACL,kEAAA,EAIAJ,EAAQC,OAAS,KAAOD,EAAQC,KAAKI,SAAS,GAAA,GAChDF,EAAOC,MACL,kEAAA,EAIA,OAAOJ,EAAQC,MAAS,UAC1BE,EAAOC,MACL,6DAAA,EAIR,CAtBSN,EAAAA,GAAAA,gBCHT,OAAOQ,OAAwB,uCAC/B,OAAOC,OAAuB,sBAC9B,OAAOC,MAA0B,0BACjC,OAAOC,OAAU,YACjB,OAASC,0BAAAA,OAA8B,4BAEvC,OAAOC,OAAa,UACpB,OAAOC,OAAgB,aCPhB,IAAMC,EAAmB,CAC9B,QACA,YACA,mBACA,YACA,0BACA,eACA,qBACA,wBACA,wBACA,iBACA,gBCNK,IAAMC,GAAiBC,EAAiBC,OAAO,CAACC,EAAKC,KAC1DD,EAAI,GAAGC,IAAM,EAAIC,EAAQC,QAAQF,CAAAA,EAC1BD,GACN,CAAC,CAAA,EFIJ,SAASI,GAAiBC,EAAa,CACrC,OAAKA,EAIDA,IAAS,KAINA,EAAKC,SAAS,GAAA,EAHZD,EAG0B,GAAGA,KAP7B,OAQX,CAVSD,EAAAA,GAAAA,oBAYF,SAASG,EAAiB,CAC/BC,MAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,IAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,UAAAA,EAAY,OAAO,EACD,CAClB,IAAMC,EAASJ,IAAQ,aAEjBK,EAAUC,EAAa,CAC3BN,IAAAA,EACAO,QAASN,GAAAA,YAAAA,EAASM,QAClBb,KAAMO,GAAAA,YAAAA,EAASP,IACjB,CAAA,EAEMc,EAAaf,GAAiBQ,GAAAA,YAAAA,EAASP,IAAAA,EAEvCe,EAAiBL,EACnB,CACE,IAAIM,EAAqB,CACvBC,SAAU,yBACVC,cAAe,wBACjB,CAAA,EACA,IAAIC,GAAW,CACbC,MAAOX,IAAc,UACrBY,MAAOZ,IAAc,OACvB,CAAA,GAEF,CAAC,IAAIO,GAET,MAAO,CACLM,KAAMhB,EACNiB,KAAM,CAAC,CAACb,EACRc,QAASd,EAAS,GAAQ,kBAC1BP,MAAO,CAACA,GACRsB,OAAQ,CACNzB,KAAMI,EACNa,SAAUP,EAAS,4BAA8B,mBACjDQ,cAAeR,EACX,kCACA,iBACN,EACAgB,aAAc,CACZC,SAAU,GACVC,UAAW,CAAC,IAAIC,IAChBC,UAAW,gBACXC,aAAc,EAChB,EACAC,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,UACNC,QAAS,eACTC,QAAS,CAAC/B,GACVgC,IAAK,CACHC,OAAQ,aACR/B,QAAS,CACPgC,IAAK,CACHC,OAAQ,CACNC,OAAQ,aACRC,IAAK,EACP,EACAC,UAAW,CACTC,MAAO,CACLC,QAAS,WACX,CACF,CACF,CACF,CACF,CACF,EACA,CACEX,KAAM,UACNC,QAAS,eACTC,QAAS,CAAC/B,GACVgC,IAAK,CACHC,OAAQ,aACR/B,QAAS,CACPgC,IAAK,CACHC,OAAQ,CACNC,OAAQ,aACRC,IAAK,EACP,EACAC,UAAW,CACTC,MAAO,CACLC,QAAS,WACX,CACF,CACF,CACF,CACF,CACF,EACA,CACEX,KAAM,SACNG,IAAK,CAACrB,EAAqBsB,OAAQ,aAAc,iBACnD,EACA,CACEJ,KAAM,SACNY,MAAO,CACL,CACEC,KAAM,iBACNC,cAAe,KACjB,EACA,CACED,KAAM,eACNC,cAAe,QACjB,EACA,CACEC,OAAQ,aACRZ,IAAK,CAAC,gBACR,GAEFa,UAAW,CACTjC,SAAU,UAAUP,EAAS,qBAAuB,eACtD,CACF,EACA,CACEwB,KAAM,8BACNa,KAAM,gBACR,EACA,CACEb,KAAM,sBACNiB,QAAS,MACTd,IAAK,CAAC,oBACR,EACA,CACEH,KAAM,YACNkB,QAAS,CACPC,eAAgB,EAClB,CACF,EAEJ,EACAD,QAAS,CACPE,MAAOC,GACPC,SAAU,GACVC,WAAY,CAAC,MAAO,OAAQ,MAAO,QACnCC,WAAY,CAAC,UAAW,SAAU,QAClCC,QAAS,CAAC,eAAgB3D,GAAKoD,QAAQQ,UAAW,KAAM,cAAA,GACxDC,SAAU,CACRC,SAAU,GACV9D,KAAM,EACR,CACF,EACA+D,QAAS,CACP,IAAIC,GAAkB,CACpBC,OAAQ,GACRzD,SAAUA,GAAYR,GAAKoD,QAAQQ,UAAW,KAAM,KAAM,YAAA,EAC1D9C,WAAYA,CACd,CAAA,EAEA,IAAIoD,GAAQC,aAAaxD,CAAAA,EAEzB,CAACD,GAAU,IAAI0D,MAEZrD,GACHsD,OAAOC,OAAAA,CACX,CACF,CAhKgBpE,EAAAA,EAAAA,oBFfhB,eAAsBqE,EACpBC,EACAC,EAA6B,CAE7BC,GAAaD,CAAAA,EAEb,IAAIE,EAASC,EAAiBH,CAAAA,EAExBI,EAAkBC,GAAKC,KAAKP,EAAQ,MAAO,QAAS,mBAAA,EAI1D,GAFmB,MAAMQ,GAAIC,WAAWJ,CAAAA,EAExB,CACd,IAAIK,EAEJ,GAAI,CACFA,EAAqBC,EAAQN,CAAAA,CAC/B,OAASO,EAAP,CACAC,EAAOC,MACL,qGACA,CACEC,MAAOH,CACT,CAAA,CAEJ,CAEI,OAAOF,GAAuB,aAC5BT,EAAKe,YACPb,EAAOa,UAAYf,EAAKe,WAG1Bb,EAASO,EAAmBP,EAAQc,EAAAA,EAE/Bd,GACHU,EAAOC,MACL,6DAAA,GAMR,OAAOX,CACT,CA1CsBJ,EAAAA,EAAAA,0BKHf,SAASmB,GACdC,EAGkB,CAElB,MAAO,CAACC,EAAuBC,IACtBF,EAASC,EAAQC,CAAAA,CAE5B,CATgBH,EAAAA,GAAAA,2BdIhB,eAAsBI,GAAM,CAC1BC,OAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,UAAAA,EAAY,OAAO,EACT,CACV,MAAMC,EAAe,CAAEL,OAAAA,EAAQE,QAAAA,CAAQ,CAAA,EAEvC,IAAMI,EAAWC,EAAKC,QAAQR,EAAQ,QAAA,EAChCS,EAAQF,EAAKC,QAAQF,EAAU,QAAS,MAAO,UAAA,EAC/CI,EAAOH,EAAKC,QAAQR,EAAQC,CAAAA,EAG5BU,EAAS,MAAMC,EAAuBZ,EAAQ,CAClDS,MAAAA,EACAC,KAAAA,EACAJ,SAAAA,EACAO,IANU,aAOVV,QAAAA,EACAC,UAAAA,CACF,CAAA,EAEMU,EAAWC,GAAQJ,CAAAA,EAEzB,OAAO,IAAIK,QAAQ,CAACR,EAASS,IAAAA,CAC3BH,EAASI,IAAI,CAACC,EAAmBC,IAAAA,CAC3BD,IACEA,EAAIE,SACNC,EAAOC,MAAMJ,EAAIE,OAAO,EAG1BJ,EAAOE,CAAAA,GAGT,IAAMK,EAAOJ,EAAMK,OAAM,EAEzB,OAAIL,EAAMM,UAAS,GACjBJ,EAAOC,MAAMI,KAAKC,UAAUJ,EAAKK,MAAM,CAAA,EAGlCrB,EAAQ,CACbY,MAAAA,EACAU,SAAUN,EAAKM,QACjB,CAAA,CACF,CAAA,CACF,CAAA,CACF,CA/CsB/B,EAAAA,GAAAA,SeVtB,OAAOgC,OAAS,WAChB,OAAOC,OAAU,YAUjB,eAAsBC,GAAM,CAAEC,OAAAA,EAAQC,OAAAA,CAAM,EAAa,CACvD,IAAMC,EAAWC,GAAKC,QAAQJ,EAAQ,SAAU,OAAA,EAC1CK,EAAWF,GAAKC,QAAQJ,EAAQC,CAAAA,EAEtC,MAAMK,GAAIC,OAAOF,CAAAA,EACjB,MAAMC,GAAIC,OAAOL,CAAAA,CACnB,CANsBH,EAAAA,GAAAA,SCXtB,OAAOS,OAAU,YACjB,OAAOC,OAAiB,8BACxB,OAAOC,OAAa,UACpB,OAAOC,OAEA,qBAUP,eAAsBC,GAAQ,CAC5BC,OAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,QAAAA,EAAU,CACRC,KAAM,IACNC,QAASC,QAAQC,IAAIC,QAAU,wBAC/BT,QAAS,CACPU,KAAM,GACNC,KAAM,KACNC,SAAU,QACVC,MAAO,QACT,CACF,CAAC,EACW,CACZ,GAAM,CAAEC,SAAAA,CAAQ,EAAK,MAAMC,EAAe,CACxCd,OAAAA,EACAE,QAAAA,CACF,CAAA,EAEMa,EAAQX,GAAKY,QAAQH,EAAU,QAAS,MAAO,UAAA,EAC/CI,EAAOb,GAAKY,QAAQhB,EAAQC,CAAAA,EAG5BiB,EAAS,MAAMC,EAAuBnB,EAAQ,CAClDe,MAAAA,EACAE,KAAAA,EACAJ,SAAAA,EACAN,IANU,cAOVJ,QAAAA,CACF,CAAA,EAEMiB,EAAWC,GAAQ,CACvB,GAAGH,EACHI,sBAAuB,CAAEC,MAAOpB,EAAQJ,QAAQY,QAAS,EACzDC,MAAOT,EAAQJ,QAAQa,QAAU,SAAW,cAAgBY,MAC9D,CAAA,EAEMC,EAAwC,CAC5Cf,KAAMP,EAAQJ,QAAQW,KACtBgB,OAAQ,CACNC,QAAS,OACTC,QAAS,CACPC,OAAQ,GACRC,SAAU,EACZ,CACF,EACArB,KAAM,GACNsB,YAAa5B,EAAQJ,QAAQU,KACzB,SAAUuB,EAAS,CACZA,GACHC,EAAOC,KAAK,yBAAA,EAGdC,GACE,oBAAoBhC,EAAQJ,QAAQW,OAClCP,EAAQC,KAAOD,EAAQC,KAAO,IAC9B,CAEN,EACAoB,OACJY,cAAe,CACbC,WAAYlC,EAAQC,KACpBQ,MAAOT,EAAQJ,QAAQa,QAAU,SAAW,GAAQY,MACtD,EACAc,mBAAoB,CAClBC,MAAOpC,EAAQC,KACfoC,eAAgB,EAClB,EACAC,IAAK,EACP,EAEMC,EAAS,IAAIC,GAAiBlB,EAAeL,CAAAA,EAYnD,MAVkBwB,EAAA,SAAA,CAChBX,EAAOY,KACL,kDAAkD1C,EAAQJ,QAAQW,OAChEP,EAAQC,KAAOD,EAAQC,KAAO,IAC9B,EAGJ,MAAMsC,EAAOI,MAAK,CACpB,EARkB,aAUZC,EAEN,MAAMC,EAAsBhD,EAAQa,EAAUX,CAAAA,CAChD,CAvFsBH,EAAAA,GAAAA","names":["forbiddenRoutes","injectionZones","path","webpack","fse","path","fse","copyFilter","src","fse","lstatSync","isDirectory","includes","isFile","fse","path","dedent","colors","readline","prefix","clearScreen","repeatCount","process","stdout","rows","blank","repeat","console","log","readline","cursorTo","clearScreenDown","canClearScreen","isTTY","env","CI","clear","createLogger","output","__name","type","msg","options","method","format","tag","colors","cyan","bold","yellow","red","dim","Date","toLocaleTimeString","error","info","warn","panic","exit","logger","normalizePath","path","separator","process","platform","regex","RegExp","replace","parse","traverse","fse","path","isValidInjectionZone","zone","injectionZones","includes","validateWidgetConfigExport","properties","zoneProperty","find","p","type","key","name","zoneIsValid","value","elements","every","validateRouteConfigExport","linkProperty","linkValue","labelIsValid","some","validateSettingConfigExport","cardProperty","cardValue","hasLabel","hasDescription","validateConfigExport","path","hasValidConfigExport","declaration","node","configDeclaration","declarations","d","id","init","validateDefaultExport","ast","hasComponentExport","exportName","traverse","VariableDeclarator","scope","isDefaultExport","ReturnStatement","_a","_b","argument","e","logger","error","validateWidget","file","content","fse","readFile","parserOptions","sourceType","plugins","endsWith","push","parse","hasConfigExport","ExportDefaultDeclaration","ExportNamedDeclaration","createPath","filePath","normalizedPath","normalizePath","regex","replace","isForbiddenRoute","forbiddenRoutes","validatePath","origin","valid","specialChars","i","length","currentChar","test","validateRoute","basePath","cleanPath","hasConfig","validateSetting","findAllValidSettings","dir","settingsFiles","pathExists","paths","readdir","hasSubDirs","pa","join","stat","isDirectory","files","fileStat","isFile","warn","Promise","all","map","filter","findAllValidWidgets","jsxAndTsxFiles","traverseDirectory","currentPath","promises","findAllValidRoutes","pageFiles","FILE_EXT_REGEX","copyLocalExtensions","src","dest","fse","copy","filter","copyFilter","err","logger","error","createLocalExtensionsEntry","appDir","localAdminDir","path","resolve","pathExists","localWidgets","localRoutes","localSettings","Promise","all","findAllValidWidgets","findAllValidRoutes","findAllValidSettings","widgetsArray","map","file","index","relativePath","normalizePath","relative","replace","importStatement","extension","routesArray","route","hasConfig","settingsArray","setting","extensionsArray","extensionsEntry","dedent","join","outputFile","panic","findPluginsWithExtensions","plugins","pluginsWithExtensions","plugin","pluginDir","dirname","require","paths","process","cwd","entrypoint","existsSync","push","warn","writeTailwindContentFile","tailwindContent","createMainExtensionsEntry","hasLocalExtensions","length","emptyEntry","createEntry","adminPlugins","copyAdmin","dest","adminDir","path","resolve","__dirname","destDir","fse","copy","filter","copyFilter","err","logger","panic","error","createCacheDir","appDir","plugins","cacheDir","createEntry","dotenv","fse","path","MEDUSA_ADMIN","ENV_FILE_NAME","process","env","NODE_ENV","fse","existsSync","dotenv","config","path","resolve","cwd","getClientEnv","__name","args","raw","Object","keys","filter","key","test","reduce","acc","current","ADMIN_PATH","MEDUSA_BACKEND_URL","backend","JSON","stringify","chokidar","fse","path","watchLocalAdminFolder","appDir","cacheDir","plugins","adminDir","path","resolve","watcher","chokidar","watch","ignored","ignoreInitial","on","event","file","removeUnlinkedFile","createEntry","dest","logger","info","process","close","srcDir","relativePath","relative","destDir","fileToDelete","fse","removeSync","error","fse","path","webpack","validateArgs","args","options","path","startsWith","logger","panic","endsWith","ReactRefreshPlugin","HtmlWebpackPlugin","MiniCssExtractPlugin","path","SwcMinifyWebpackPlugin","webpack","WebpackBar","ALIASED_PACKAGES","webpackAliases","ALIASED_PACKAGES","reduce","acc","pkg","require","resolve","formatPublicPath","path","endsWith","getWebpackConfig","entry","dest","cacheDir","env","options","template","reporting","isProd","envVars","getClientEnv","backend","publicPath","webpackPlugins","MiniCssExtractPlugin","filename","chunkFilename","WebpackBar","basic","fancy","mode","bail","devtool","output","optimization","minimize","minimizer","SwcMinifyWebpackPlugin","moduleIds","runtimeChunk","module","rules","test","exclude","include","use","loader","jsc","parser","syntax","jsx","transform","react","runtime","oneOf","type","resourceQuery","issuer","generator","enforce","resolve","fullySpecified","alias","webpackAliases","symlinks","extensions","mainFields","modules","__dirname","fallback","readline","plugins","HtmlWebpackPlugin","inject","webpack","DefinePlugin","ReactRefreshPlugin","filter","Boolean","getCustomWebpackConfig","appDir","args","validateArgs","config","getWebpackConfig","adminConfigPath","path","join","fse","pathExists","webpackAdminConfig","require","e","logger","panic","error","devServer","webpack","withCustomWebpackConfig","callback","config","webpackInstance","build","appDir","buildDir","plugins","options","reporting","createCacheDir","cacheDir","path","resolve","entry","dest","config","getCustomWebpackConfig","env","compiler","webpack","Promise","reject","run","err","stats","details","logger","error","info","toJson","hasErrors","JSON","stringify","errors","warnings","fse","path","clean","appDir","outDir","cacheDir","path","resolve","buildDir","fse","remove","path","openBrowser","webpack","WebpackDevDerver","develop","appDir","buildDir","plugins","options","path","backend","process","env","BE_URL","open","port","logLevel","stats","cacheDir","createCacheDir","entry","resolve","dest","config","getCustomWebpackConfig","compiler","webpack","infrastructureLogging","level","undefined","devServerArgs","client","logging","overlay","errors","warnings","onListening","devServer","logger","warn","openBrowser","devMiddleware","publicPath","historyApiFallback","index","disableDotRule","hot","server","WebpackDevDerver","__name","info","start","runServer","watchLocalAdminFolder"]}