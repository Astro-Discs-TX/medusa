{
	"id": 0,
	"name": "js-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "admin",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 1900,
					"name": "ApiKey",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1904,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1901,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1902,
									"name": "ApiKey",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1903,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1900,
										"name": "ApiKey",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1905,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1906,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This methods retrieves a paginated list of API keys. It sends a request to the \n[List API Keys](https://docs.medusajs.com/api/admin#api-keys_getapikeys) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of API keys."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of API keys:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list()\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each API key:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  fields: \"id,*sales_channels\"\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1907,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1908,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyListResponse"
												},
												"name": "AdminApiKeyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1909,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1910,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an API key. It sends a request to the [Create API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeys)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created API key"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.create({\n  title: \"Development\",\n  type: \"publishable\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1911,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminCreateApiKey"
												},
												"name": "AdminCreateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1912,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the created API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1913,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1914,
							"name": "revoke",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1915,
									"name": "revoke",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method revokes an API key. It sends a request to the \n[Revoke API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysidrevoke) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.revoke(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1916,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1917,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1918,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 147,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1919,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an API key's details. It sends a request to the \n[Get API key](https://docs.medusajs.com/api/admin#api-keys_getapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.retrieve(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 147,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1920,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1921,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1922,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 174,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1923,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an API key's details. It sends a request to the \n[Update API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.update(\"apk_123\", {\n  title: \"Development\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 174,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1924,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1925,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminUpdateApiKey"
												},
												"name": "AdminUpdateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1926,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1927,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1928,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 205,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1929,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an API key by its ID. It sends a request to the \n[Delete API Key](https://docs.medusajs.com/api/admin#api-keys_deleteapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.delete(\"apk_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 205,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1930,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1931,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyDeleteResponse"
												},
												"name": "AdminApiKeyDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1932,
							"name": "batchSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1933,
									"name": "batchSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the sales channels associated with a publishable API key to either add\nor remove associations. It sends a request to the [Manage Sales Channels](https://docs.medusajs.com/api/admin#api-keys_postapikeysidsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.batchSalesChannels(\"apk_123\", {\n  add: [\"sc_123\"],\n  remove: [\"sc_321\"]\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 234,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1934,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1935,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The sales channels to add or remove from the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1936,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1901
							]
						},
						{
							"title": "Properties",
							"children": [
								1904
							]
						},
						{
							"title": "Methods",
							"children": [
								1905,
								1909,
								1914,
								1918,
								1922,
								1928,
								1932
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/api-key.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 2075,
					"name": "Campaign",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2079,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2076,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2077,
									"name": "Campaign",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2078,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2075,
										"name": "Campaign",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2080,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2081,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a campaign by its ID. It sends a request to the \n[Get Campaign](https://docs.medusajs.com/api/admin#campaigns_getcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a campaign by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\")\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\", {\n  fields: \"id,*budget\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2082,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2083,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignParams"
												},
												"name": "AdminGetCampaignParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2084,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2085,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2086,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of campaigns. It sends a request to the \n[List Campaigns](https://docs.medusajs.com/api/admin#campaigns_getcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of campaigns."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of campaigns:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list()\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  fields: \"id,*budget\"\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2087,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignsParams"
												},
												"name": "AdminGetCampaignsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2088,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignListResponse"
												},
												"name": "AdminCampaignListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2089,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2090,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a campaign. It sends a request to the \n[Create Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.create({\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2091,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the campaign to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminCreateCampaign"
												},
												"name": "AdminCreateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2092,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2093,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2094,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a campaign. It sends a request to the \n[Update Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.update(\"procamp_123\", {\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2095,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2096,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCampaign"
												},
												"name": "AdminUpdateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2097,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2098,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 198,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2099,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a campaign by its ID. It sends a request to the\n[Delete Campaign](https://docs.medusajs.com/api/admin#campaigns_deletecampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.delete(\"procamp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 198,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2100,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2101,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "campaign"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2102,
							"name": "batchPromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 227,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2103,
									"name": "batchPromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the promotions of a campaign to either add or remove the association between them.\nIt sends a request to the [Manage Promotions](https://docs.medusajs.com/api/admin#campaigns_postcampaignsidpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.batchPromotions(\"procamp_123\", {\n  add: [\"prom_123\", \"prom_456\"],\n  remove: [\"prom_789\"]\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 227,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2104,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2105,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotions to add or remove associations to them."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2106,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2076
							]
						},
						{
							"title": "Properties",
							"children": [
								2079
							]
						},
						{
							"title": "Methods",
							"children": [
								2080,
								2085,
								2089,
								2093,
								2098,
								2102
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/campaign.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1448,
					"name": "Claim",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1452,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1449,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1450,
									"name": "Claim",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1451,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1448,
										"name": "Claim",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1453,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1454,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of claims. It sends a request to the \n[List Claims](https://docs.medusajs.com/api/admin#claims_getclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of claims."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of claims:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list()\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each claim:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  fields: \"id,*additional_items\"\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1455,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
													"qualifiedName": "AdminClaimListParams"
												},
												"name": "AdminClaimListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1456,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimListResponse"
												},
												"name": "AdminClaimListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1457,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 106,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1458,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a claim. It sends a request to the\n[Get Claim](https://docs.medusajs.com/api/admin#claims_getclaimsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a claim by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\", {\n  fields: \"id,*additional_items\"\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 106,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1459,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1460,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1461,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1462,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1463,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a claim. It sends a request to the \n[Create Claim](https://docs.medusajs.com/api/admin#claims_postclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim and order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.create({\n  type: \"refund\",\n  order_id: \"order_123\",\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1464,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminCreateClaim"
												},
												"name": "AdminCreateClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1465,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1466,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimOrderResponse"
												},
												"name": "AdminClaimOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1467,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1468,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a claim. It sends a request to the\n[Cancel Claim](https://docs.medusajs.com/api/admin#claims_postclaimsidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancel(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1469,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1470,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1471,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1472,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1473,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to the claim. It sends a request to the\n[Add Items](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitems) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addItems(\"claim_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1474,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1475,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimItems"
												},
												"name": "AdminAddClaimItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1476,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1477,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1478,
							"name": "updateItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 250,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1479,
									"name": "updateItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a claim item by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action. It\nsends a request to the [Update Claim Item](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitemsaction_id) API route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 250,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1480,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1481,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1482,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimItem"
												},
												"name": "AdminUpdateClaimItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1483,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1484,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1485,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 291,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1486,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a claim item from a claim by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Claim Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidclaimitemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 291,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1487,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1488,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1489,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1490,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1491,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 335,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1492,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to the claim. These inbound items will have a "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundItems(\n  \"claim_123\", \n  {\n    items: [\n      {\n        id: \"orli_123\",\n        quantity: 1\n      }\n    ]\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 335,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1493,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the inbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1494,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inbound items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimInboundItems"
												},
												"name": "AdminAddClaimInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1495,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1496,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1497,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 379,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1498,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 379,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1499,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1500,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1501,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the inbound item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimInboundItem"
												},
												"name": "AdminUpdateClaimInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1502,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1503,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1504,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 420,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1505,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 420,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1506,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1507,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1508,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1509,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1510,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 461,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1511,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to a claim. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 461,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1512,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1513,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddInboundShipping"
												},
												"name": "AdminClaimAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1514,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1515,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1516,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 505,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1517,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 505,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1518,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1519,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1520,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the shipping method"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateInboundShipping"
												},
												"name": "AdminClaimUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1521,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1522,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1523,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 546,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1524,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 546,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1525,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1526,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1527,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1528,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1529,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 587,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1530,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to a claim. These outbound items will have an "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addOutboundItems(\n  \"claim_123\", \n  {\n    items: [{\n      id: \"orli_123\",\n      quantity: 1\n    }]\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 587,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1531,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the outbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1532,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimOutboundItems"
												},
												"name": "AdminAddClaimOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1533,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1534,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1535,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 631,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1536,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 631,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1537,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1538,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1539,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimOutboundItem"
												},
												"name": "AdminUpdateClaimOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1540,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1541,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1542,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 672,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1543,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Outbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 672,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1544,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1545,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1546,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1547,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1548,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 714,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1549,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound an outbound shipping method to a claim. \nThe outbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the \n[Add Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addOutboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 714,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1550,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1551,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddOutboundShipping"
												},
												"name": "AdminClaimAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1552,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1553,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1554,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 758,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1555,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in a claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 758,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1556,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1557,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1558,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateOutboundShipping"
												},
												"name": "AdminClaimUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1559,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1560,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1561,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 797,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1562,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes the shipping method for delivering outbound items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 797,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1563,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1564,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1565,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1566,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1567,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 833,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1568,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a claim request, applying its changes on the associated order.\nIt sends a request to the [Confirm Claim Request](https://docs.medusajs.com/api/admin#claims_postclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim and its associated return, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.request(\n  \"claim_123\", \n  {},\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 833,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1569,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1570,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminRequestClaim"
												},
												"name": "AdminRequestClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1571,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1572,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimRequestResponse"
												},
												"name": "AdminClaimRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1573,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 868,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1574,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested claim. It sends a request to the\n[Cancel Claim Request](https://docs.medusajs.com/api/admin#claims_deleteclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancelRequest(\n  \"claim_123\", \n)\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 868,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1575,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1576,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1577,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimDeleteResponse"
												},
												"name": "AdminClaimDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1449
							]
						},
						{
							"title": "Properties",
							"children": [
								1452
							]
						},
						{
							"title": "Methods",
							"children": [
								1453,
								1457,
								1462,
								1467,
								1472,
								1478,
								1485,
								1491,
								1497,
								1504,
								1510,
								1516,
								1523,
								1529,
								1535,
								1542,
								1548,
								1554,
								1561,
								1567,
								1573
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/claim.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 1818,
					"name": "Currency",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1822,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1819,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1820,
									"name": "Currency",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1821,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1818,
										"name": "Currency",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1823,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1824,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of currencies. It sends a request to the\n[List Currencies](https://docs.medusajs.com/api/admin#currencies_getcurrencies)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of currencies."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of currencies:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list()\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each currency:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  fields: \"code,symbol\"\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1825,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyListParams"
												},
												"name": "AdminCurrencyListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1826,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyListResponse"
												},
												"name": "AdminCurrencyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1827,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1828,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a currency by its code. It sends a request to the\n[Get Currency](https://docs.medusajs.com/api/admin#currencies_getcurrenciescode) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The currency's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a currency by its code:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\")\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\", {\n  fields: \"code,symbol\"\n})\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1829,
											"name": "code",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The currency's code."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1830,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyParams"
												},
												"name": "AdminCurrencyParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1831,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyResponse"
												},
												"name": "AdminCurrencyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1819
							]
						},
						{
							"title": "Properties",
							"children": [
								1822
							]
						},
						{
							"title": "Methods",
							"children": [
								1823,
								1827
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/currency.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1979,
					"name": "CustomerGroup",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1983,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1980,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1981,
									"name": "CustomerGroup",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1982,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1979,
										"name": "CustomerGroup",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1984,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1985,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer group by its ID. It sends a request to the\n[Get Customer Group](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroupsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer group by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\")\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\", {\n  fields: \"id,*customer\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1986,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1987,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1988,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1989,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1990,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer groups. It sends a request to the\n[List Customer Groups](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customer groups:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list()\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer group:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  fields: \"id,*customer\"\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1991,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupsParams"
												},
												"name": "AdminGetCustomerGroupsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1992,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupListResponse"
												},
												"name": "AdminCustomerGroupListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1993,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 143,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1994,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer group. It sends a request to the\n[Create Customer Group](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.create({\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 143,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1995,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomerGroup"
												},
												"name": "AdminCreateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1996,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1997,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1998,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1999,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer group's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.update(\"cusgroup_123\", {\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2000,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2001,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomerGroup"
												},
												"name": "AdminUpdateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2002,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2003,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2004,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2005,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer group. This method sends a request to the\n[Delete Customer Group](https://docs.medusajs.com/api/admin#customer-groups_deletecustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.delete(\"cusgroup_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2006,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2007,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupDeleteResponse"
												},
												"name": "AdminCustomerGroupDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2008,
							"name": "batchCustomers",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 239,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2009,
									"name": "batchCustomers",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customers of a group to add or remove them from the group.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsidcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.batchCustomers(\"cusgroup_123\", {\n  add: [\"cus_123\"],\n  remove: [\"cus_321\"]\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 239,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2010,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2011,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customers to add or remove from the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2012,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1980
							]
						},
						{
							"title": "Properties",
							"children": [
								1983
							]
						},
						{
							"title": "Methods",
							"children": [
								1984,
								1989,
								1993,
								1998,
								2004,
								2008
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 365,
					"name": "Customer",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 369,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 366,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 367,
									"name": "Customer",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 368,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 365,
										"name": "Customer",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 370,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer. It sends a request to the\n[Create Customer](https://docs.medusajs.com/api/admin#customers_postcustomers) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.create({\n  email: \"customer@gmail.com\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 34,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 372,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomer"
												},
												"name": "AdminCreateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 373,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 374,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 375,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 68,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 376,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customers_postcustomersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.update(\"cus_123\", {\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 68,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 377,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 378,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update of the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomer"
												},
												"name": "AdminUpdateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 379,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 380,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 381,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 132,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 382,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customers. It sends a request to the\n[List Customers](https://docs.medusajs.com/api/admin#customers_getcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list()\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  fields: \"id,*groups\"\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 132,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 383,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/queries.ts",
													"qualifiedName": "AdminCustomerFilters"
												},
												"name": "AdminCustomerFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 384,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerListResponse"
												},
												"name": "AdminCustomerListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 385,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 386,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer by its ID. It sends a request to the\n[Get Customer](https://docs.medusajs.com/api/admin#customers_getcustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\", {\n  fields: \"id,*groups\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 387,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 388,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 389,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 390,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 203,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 391,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer by its ID. It sends a request to the\n[Delete Customer](https://docs.medusajs.com/api/admin#customers_deletecustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.delete(\"cus_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 203,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 392,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 393,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerDeleteResponse"
												},
												"name": "AdminCustomerDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "batchCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 232,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "batchCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customer groups for a customer.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customers_postcustomersidcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customers details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.batchCustomerGroups(\"cus_123\", {\n  add: [\"cusgroup_123\"],\n  remove: [\"cusgroup_321\"]\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 232,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 396,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 397,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The groups to add customer to or remove customer from."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 398,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 399,
							"name": "createAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 268,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 400,
									"name": "createAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer address. It sends a request to the\n[Create Customer Address](https://docs.medusajs.com/api/admin#customers_postcustomersidaddresses)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.createAddress(\"cus_123\", {\n  address_1: \"123 Main St\",\n  city: \"Anytown\",\n  country_code: \"US\",\n  postal_code: \"12345\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 268,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 401,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 402,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomerAddress"
												},
												"name": "AdminCreateCustomerAddress",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 403,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 404,
							"name": "updateAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 405,
									"name": "updateAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer address. It sends a request to the\n[Update Customer Address](https://docs.medusajs.com/api/admin#customers_postcustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.updateAddress(\"cus_123\", \"cus_addr_123\", {\n  address_1: \"123 Main St\",\n  city: \"Anytown\",\n  country_code: \"US\",\n  postal_code: \"12345\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 406,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 407,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 408,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomerAddress"
												},
												"name": "AdminUpdateCustomerAddress",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 409,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 410,
							"name": "deleteAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 337,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 411,
									"name": "deleteAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer address. It sends a request to the\n[Delete Customer Address](https://docs.medusajs.com/api/admin#customers_deletecustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.deleteAddress(\"cus_123\", \"cus_addr_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 337,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 412,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 413,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 414,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 415,
							"name": "retrieveAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 363,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 416,
									"name": "retrieveAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer address by its ID. It sends a request to the\n[Get Customer Address](https://docs.medusajs.com/api/admin#customers_getcustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieveAddress(\"cus_123\", \"cus_addr_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 363,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 417,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 418,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 419,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 420,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 391,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 421,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of customer addresses. It sends a request to the\n[List Customer Addresses](https://docs.medusajs.com/api/admin#customers_getcustomersidaddresses)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customer addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.listAddresses(\"cus_123\")\n.then(({ addresses }) => {\n  console.log(addresses)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 391,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 422,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 423,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								366
							]
						},
						{
							"title": "Properties",
							"children": [
								369
							]
						},
						{
							"title": "Methods",
							"children": [
								370,
								375,
								381,
								385,
								390,
								394,
								399,
								404,
								410,
								415,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/customer.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1158,
					"name": "DraftOrder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1162,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1159,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1160,
									"name": "DraftOrder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1161,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1158,
										"name": "DraftOrder",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1163,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1164,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a draft order by its ID. It sends a request to the\n[Get Draft Order](https://docs.medusajs.com/api/admin#draft-orders_getdraftordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a draft order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"order_123\")\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1165,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1166,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1167,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1168,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1169,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of draft orders. It sends a request to the\n[List Draft Orders](https://docs.medusajs.com/api/admin#draft-orders_getdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of draft orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of draft orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list()\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each draft order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  fields: \"id,*items\"\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1170,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderListParams"
												},
												"name": "AdminDraftOrderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1171,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderListResponse"
												},
												"name": "AdminDraftOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1172,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 149,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1173,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a draft order. It sends a request to the\n[Create Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.create({\n  email: \"test@test.com\",\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1,\n    },\n  ],\n  region_id: \"region_123\",\n  sales_channel_id: \"sc_123\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 149,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1174,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to create the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminCreateDraftOrder"
												},
												"name": "AdminCreateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1175,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1176,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1177,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 183,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1178,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a draft order. It sends a request to the\n[Update Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.update(\"order_123\", {\n  email: \"test@test.com\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 183,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1179,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1180,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrder"
												},
												"name": "AdminUpdateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1181,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1182,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1183,
							"name": "convertToOrder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 215,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1184,
									"name": "convertToOrder",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method converts a draft order to an order. It sends a request to the\n[Convert Draft Order to Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidconverttoorder) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.convertToOrder(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 215,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1185,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1186,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1187,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1188,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 252,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1189,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to a draft order. It sends a request to the\n[Add Draft Order Items](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititems) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addItems(\"order_123\", {\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1,\n    },\n  ],\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 252,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1190,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1191,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the items to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderItems"
												},
												"name": "AdminAddDraftOrderItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1192,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1193,
							"name": "updateActionItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 285,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1194,
									"name": "updateActionItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item that is part of an action in a draft order. It sends a request to the\n[Update Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititemsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateActionItem(\"order_123\", \"action_123\", {\n  quantity: 2,\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 285,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1195,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1196,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1197,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderItem"
												},
												"name": "AdminUpdateDraftOrderItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1198,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1199,
							"name": "removeActionItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 316,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1200,
									"name": "removeActionItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an item that is part of an action in a draft order. It sends a request to the\n[Remove Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersidedititemsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeActionItem(\"order_123\", \"action_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 316,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1201,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1202,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1203,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1204,
							"name": "updateItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 348,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1205,
									"name": "updateItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item in a draft order. It sends a request to the\n[Update Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititemsitemitem_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateItem(\"order_123\", \"item_123\", {\n  quantity: 2,\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 348,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1206,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1207,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1208,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderItem"
												},
												"name": "AdminUpdateDraftOrderItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1209,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1210,
							"name": "addPromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 381,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1211,
									"name": "addPromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds promotions to a draft order. It sends a request to the\n[Add Draft Order Promotions](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditpromotions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addPromotions(\"order_123\", {\n  promo_codes: [\"PROMO_CODE_1\", \"PROMO_CODE_2\"],\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 381,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1212,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1213,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the promotions to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderPromotions"
												},
												"name": "AdminAddDraftOrderPromotions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1214,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1215,
							"name": "removePromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 410,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1216,
									"name": "removePromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes promotions from a draft order. It sends a request to the\n[Remove Draft Order Promotions](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditpromotions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removePromotions(\"order_123\", {\n  promo_codes: [\"PROMO_CODE_1\", \"PROMO_CODE_2\"],\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 410,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1217,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1218,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to remove the promotions from the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminRemoveDraftOrderPromotions"
												},
												"name": "AdminRemoveDraftOrderPromotions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1219,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1220,
							"name": "addShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 442,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1221,
									"name": "addShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a shipping method to a draft order. It sends a request to the\n[Add Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethods) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addShippingMethod(\"order_123\", {\n  shipping_option_id: \"shipping_option_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 442,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1222,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1223,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the shipping method to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderShippingMethod"
												},
												"name": "AdminAddDraftOrderShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1224,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1225,
							"name": "updateActionShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 475,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1226,
									"name": "updateActionShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a draft order. It sends a request to the\n[Update Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethodsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateShippingMethod(\"order_123\", \"action_123\", {\n  shipping_option_id: \"shipping_option_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 475,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1227,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1228,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1229,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderActionShippingMethod"
												},
												"name": "AdminUpdateDraftOrderActionShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1230,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1231,
							"name": "removeActionShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 506,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1232,
									"name": "removeActionShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from a draft order. It sends a request to the\n[Remove Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditshippingmethodsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeShippingMethod(\"order_123\", \"action_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 506,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1233,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1234,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1235,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1236,
							"name": "removeShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 538,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1237,
									"name": "removeShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from an edited draft order. It sends a request to the\n[Remove Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditshippingmethodsmethodmethod_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeShippingMethod(\n  \"order_123\", \n  \"shipping_method_123\"\n)\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 538,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1238,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1239,
											"name": "shippingMethodId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1240,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1241,
							"name": "updateShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 570,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1242,
									"name": "updateShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a draft order. It sends a request to the\n[Update Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethodsmethodmethod_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateShippingMethod(\"order_123\", \"sm_123\", {\n shipping_option_id: \"so_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 570,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1243,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1244,
											"name": "methodId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1245,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderShippingMethod"
												},
												"name": "AdminUpdateDraftOrderShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1246,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1247,
							"name": "beginEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 598,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1248,
									"name": "beginEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method begins an edit to a draft order. It sends a request to the\n[Begin Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedit) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.beginEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 598,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1249,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1250,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1251,
							"name": "cancelEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 622,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1252,
									"name": "cancelEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an edit to a draft order. It sends a request to the\n[Cancel Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersidedit) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.cancelEdit(\"order_123\")\n.then(({ id, object, deleted }) => {\n  console.log(id, object, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 622,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1253,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1254,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "draft-order-edit"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1255,
							"name": "requestEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 645,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1256,
									"name": "requestEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests an edit to a draft order. It sends a request to the\n[Request Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditrequest) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.requestEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 645,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1257,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1258,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1259,
							"name": "confirmEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 669,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1260,
									"name": "confirmEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an edit to a draft order. It sends a request to the\n[Confirm Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditconfirm) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.confirmEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 669,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1261,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1262,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1159
							]
						},
						{
							"title": "Properties",
							"children": [
								1162
							]
						},
						{
							"title": "Methods",
							"children": [
								1163,
								1168,
								1172,
								1177,
								1183,
								1188,
								1193,
								1199,
								1204,
								1210,
								1215,
								1220,
								1225,
								1231,
								1236,
								1241,
								1247,
								1251,
								1255,
								1259
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 1578,
					"name": "Exchange",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1582,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1579,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1580,
									"name": "Exchange",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1581,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1578,
										"name": "Exchange",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1583,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1584,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of exchanges. It sends a request to the\n[List Exchanges](https://docs.medusajs.com/api/admin#exchanges_getexchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of exchanges."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of exchanges:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list()\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each exchange:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  fields: \"id,*order\"\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1585,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
													"qualifiedName": "AdminExchangeListParams"
												},
												"name": "AdminExchangeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1586,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeListResponse"
												},
												"name": "AdminExchangeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1587,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1588,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an exchange by its ID. It sends a request to the \n[Get Exchange](https://docs.medusajs.com/api/admin#exchanges_getexchangesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an exchange by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\", {\n  fields: \"id,*order\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1589,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1590,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1591,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1592,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 142,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1593,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an admin exchange. It sends a request to the\n[Create Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchanges) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.create({\n  order_id: \"order_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 142,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1594,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminCreateExchange"
												},
												"name": "AdminCreateExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1595,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1596,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1597,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 173,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1598,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange. It sends a request to the\n[Cancel Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 173,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1599,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1600,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1601,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1602,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 212,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1603,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to an exchange. These inbound items will \nhave the action "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundItems(\"exchange_123\", {\n  items: [{\n    id: \"orli_123\",\n    quantity: 1\n  }]\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 212,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1604,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1605,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeInboundItems"
												},
												"name": "AdminAddExchangeInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1606,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1607,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1608,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 258,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1609,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item from an exchange using the ID of \nthe item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can \ncheck the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 258,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1610,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1611,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1612,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeInboundItem"
												},
												"name": "AdminUpdateExchangeInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1613,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1614,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1615,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1616,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from an exchange using the ID of the \nitem's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1617,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1618,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1619,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1620,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1621,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 341,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1622,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to an exchange. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 341,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1623,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1624,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddInboundShipping"
												},
												"name": "AdminExchangeAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1625,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1626,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1627,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 387,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1628,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n   {\n    custom_amount: 10\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 387,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1629,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1630,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1631,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateInboundShipping"
												},
												"name": "AdminExchangeUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1632,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1633,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1634,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 430,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1635,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 430,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1636,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1637,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1638,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1639,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1640,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 470,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1641,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to an exchange. \nThese outbound items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundItems(\"exchange_123\", {\n  items: [{\n    id: \"variant_123\",\n    quantity: 1\n  }]\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 470,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1642,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1643,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeOutboundItems"
												},
												"name": "AdminAddExchangeOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1644,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1645,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1646,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 516,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1647,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 516,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1648,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1649,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1650,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeOutboundItem"
												},
												"name": "AdminUpdateExchangeOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1651,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1652,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1653,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 559,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1654,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 559,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1655,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1656,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1657,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1658,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1659,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 596,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1660,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an outbound shipping method to an exchange. The outbound shipping method \nwill have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 596,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1661,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1662,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddOutboundShipping"
												},
												"name": "AdminExchangeAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1663,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1664,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1665,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 642,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1666,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 642,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1667,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1668,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1669,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateOutboundShipping"
												},
												"name": "AdminExchangeUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1670,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1671,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1672,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 685,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1673,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 685,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1674,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1675,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1676,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1677,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1678,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 719,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1679,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an exchange request, applying its changes on the associated order.\n\nThis method sends a request to the [Confirm Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange and associated return's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.request(\"exchange_123\", {})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 719,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1680,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1681,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminRequestExchange"
												},
												"name": "AdminRequestExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1682,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1683,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeRequestResponse"
												},
												"name": "AdminExchangeRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1684,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 752,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1685,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange request. It sends a request to the\n[Cancel Exchange Request](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 752,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1686,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1687,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1688,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeDeleteResponse"
												},
												"name": "AdminExchangeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1579
							]
						},
						{
							"title": "Properties",
							"children": [
								1582
							]
						},
						{
							"title": "Methods",
							"children": [
								1583,
								1587,
								1592,
								1597,
								1602,
								1608,
								1615,
								1621,
								1627,
								1634,
								1640,
								1646,
								1653,
								1659,
								1665,
								1672,
								1678,
								1684
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/exchange.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 929,
					"name": "FulfillmentProvider",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 933,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 930,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 931,
									"name": "FulfillmentProvider",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 932,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 929,
										"name": "FulfillmentProvider",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 934,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 935,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of fulfillment providers. It sends a request to the\n[List Fulfillment Providers](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of fulfillment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list()\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each fulfillment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  fields: \"id\"\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 936,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
													"qualifiedName": "AdminFulfillmentProviderListParams"
												},
												"name": "AdminFulfillmentProviderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 937,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderListResponse"
												},
												"name": "AdminFulfillmentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 938,
							"name": "listFulfillmentOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 939,
									"name": "listFulfillmentOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of fulfillment options for a given fulfillment provider. It sends a request to the\n[List Fulfillment Options](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentprovidersidoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of fulfillment options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.listFulfillmentOptions(\"fp_123\")\n.then(({ fulfillment_options }) => {\n  console.log(fulfillment_options)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 940,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment provider."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 941,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderOptionsListResponse"
												},
												"name": "AdminFulfillmentProviderOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								930
							]
						},
						{
							"title": "Properties",
							"children": [
								933
							]
						},
						{
							"title": "Methods",
							"children": [
								934,
								938
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 875,
					"name": "FulfillmentSet",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 879,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 876,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 877,
									"name": "FulfillmentSet",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 878,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 875,
										"name": "FulfillmentSet",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 880,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 881,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a fulfillment set. It sends a request to the\n[Delete Fulfillment Set](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.delete(\"fset_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 882,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 883,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetDeleteResponse"
												},
												"name": "AdminFulfillmentSetDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 884,
							"name": "createServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 885,
									"name": "createServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a service zone to a fulfillment set. It uses the \n[Add Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezones)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.createServiceZone(\"fset_123\", {\n  name: \"Europe Service Zone\",\n  geo_zones: [{\n    type: \"country\",\n    country_code: \"us\"\n  }]\n})\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 886,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 887,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
												},
												"name": "AdminCreateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 888,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 889,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 890,
							"name": "retrieveServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 891,
									"name": "retrieveServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a fulfillment set's service zone's details. It sends a request to the\n[Get Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_getfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a fulfillment set's service zone by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\"\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\",\n  {\n    fields: \"id,*geo_zones\"\n  }\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 892,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 893,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 894,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 895,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneResponse"
												},
												"name": "AdminServiceZoneResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 896,
							"name": "updateServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 163,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 897,
									"name": "updateServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a service zone in a fulfillment set. It sends a request to the\n[Update Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.updateServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n  {\n    name: \"Europe Service Zone\",\n  }\n)\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 163,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 898,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 899,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 900,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
												},
												"name": "AdminUpdateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 901,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 902,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 903,
							"name": "deleteServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 200,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 904,
									"name": "deleteServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a service zone in a fulfillment set. It sends a request to the\n[Remove Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.deleteServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n)\n.then(({ deleted, parent: fulfillmentSet }) => {\n  console.log(deleted, fulfillmentSet)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 200,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 905,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfullment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 906,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 907,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneDeleteResponse"
												},
												"name": "AdminServiceZoneDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								876
							]
						},
						{
							"title": "Properties",
							"children": [
								879
							]
						},
						{
							"title": "Methods",
							"children": [
								880,
								884,
								890,
								896,
								903
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 908,
					"name": "Fulfillment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 912,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 909,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 910,
									"name": "Fulfillment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 911,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 908,
										"name": "Fulfillment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 913,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 914,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment. It sends a request to the \n[Create Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.create({\n  location_id: \"sloc_123\",\n  provider_id: \"my_fulfillment\",\n  delivery_address: {\n    country_code: \"us\"\n  },\n  items: [\n    {\n      title: \"Shirt\",\n      sku: \"SHIRT\",\n      quantity: 1,\n      barcode: \"123\"\n    }\n  ],\n  labels: [],\n  order: {},\n  order_id: \"order_123\"\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 915,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillment"
												},
												"name": "AdminCreateFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 916,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 917,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 918,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 82,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 919,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.cancel(\"ful_123\")\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 82,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 920,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 921,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 922,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 923,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 924,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for a fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidshipment)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.createShipment(\"ful_123\", {\n  labels: [\n    {\n      tracking_number: \"123\",\n      tracking_url: \"example.com\",\n      label_url: \"example.com\"\n    }\n  ]\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 925,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 926,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentShipment"
												},
												"name": "AdminCreateFulfillmentShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 927,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 928,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								909
							]
						},
						{
							"title": "Properties",
							"children": [
								912
							]
						},
						{
							"title": "Methods",
							"children": [
								913,
								918,
								923
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 2,
					"name": "Admin",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 6,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 50,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": 331,
								"name": "Invite",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 7,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L54"
								}
							],
							"type": {
								"type": "reference",
								"target": 365,
								"name": "Customer",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 8,
							"name": "productCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 58,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": 424,
								"name": "ProductCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 9,
							"name": "productCategory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 62,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L62"
								}
							],
							"type": {
								"type": "reference",
								"target": 458,
								"name": "ProductCategory",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 10,
							"name": "priceList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 66,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L66"
								}
							],
							"type": {
								"type": "reference",
								"target": 493,
								"name": "PriceList",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 11,
							"name": "pricePreference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 70,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"target": 534,
								"name": "PricePreference",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 12,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 74,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"target": 563,
								"name": "Product",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 13,
							"name": "productType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 78,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L78"
								}
							],
							"type": {
								"type": "reference",
								"target": 685,
								"name": "ProductType",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 14,
							"name": "upload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 82,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L82"
								}
							],
							"type": {
								"type": "reference",
								"target": 714,
								"name": "Upload",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 15,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 86,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L86"
								}
							],
							"type": {
								"type": "reference",
								"target": 733,
								"name": "Region",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 16,
							"name": "returnReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 90,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L90"
								}
							],
							"type": {
								"type": "reference",
								"target": 762,
								"name": "ReturnReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 17,
							"name": "stockLocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "stock location"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 94,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L94"
								}
							],
							"type": {
								"type": "reference",
								"target": 792,
								"name": "StockLocation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 18,
							"name": "salesChannel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "sales channel"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 98,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L98"
								}
							],
							"type": {
								"type": "reference",
								"target": 836,
								"name": "SalesChannel",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 19,
							"name": "fulfillmentSet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 102,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L102"
								}
							],
							"type": {
								"type": "reference",
								"target": 875,
								"name": "FulfillmentSet",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 20,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 106,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L106"
								}
							],
							"type": {
								"type": "reference",
								"target": 908,
								"name": "Fulfillment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 21,
							"name": "fulfillmentProvider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 110,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L110"
								}
							],
							"type": {
								"type": "reference",
								"target": 929,
								"name": "FulfillmentProvider",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 22,
							"name": "shippingOption",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 114,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L114"
								}
							],
							"type": {
								"type": "reference",
								"target": 942,
								"name": "ShippingOption",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 23,
							"name": "shippingProfile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 118,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L118"
								}
							],
							"type": {
								"type": "reference",
								"target": 976,
								"name": "ShippingProfile",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 24,
							"name": "inventoryItem",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 122,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L122"
								}
							],
							"type": {
								"type": "reference",
								"target": 1005,
								"name": "InventoryItem",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 25,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "notification"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 126,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L126"
								}
							],
							"type": {
								"type": "reference",
								"target": 1066,
								"name": "Notification",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 26,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 130,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": 1080,
								"name": "Order",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 27,
							"name": "draftOrder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 134,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L134"
								}
							],
							"type": {
								"type": "reference",
								"target": 1158,
								"name": "DraftOrder",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 28,
							"name": "orderEdit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 138,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L138"
								}
							],
							"type": {
								"type": "reference",
								"target": 1263,
								"name": "OrderEdit",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 29,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 142,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L142"
								}
							],
							"type": {
								"type": "reference",
								"target": 1314,
								"name": "Return",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 30,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 146,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L146"
								}
							],
							"type": {
								"type": "reference",
								"target": 1448,
								"name": "Claim",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 31,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 150,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L150"
								}
							],
							"type": {
								"type": "reference",
								"target": 1578,
								"name": "Exchange",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 32,
							"name": "taxRate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 154,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L154"
								}
							],
							"type": {
								"type": "reference",
								"target": 1689,
								"name": "TaxRate",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 33,
							"name": "taxRegion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 158,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L158"
								}
							],
							"type": {
								"type": "reference",
								"target": 1718,
								"name": "TaxRegion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 34,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "store"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 162,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L162"
								}
							],
							"type": {
								"type": "reference",
								"target": 1741,
								"name": "Store",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 35,
							"name": "productTag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 166,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L166"
								}
							],
							"type": {
								"type": "reference",
								"target": 1761,
								"name": "ProductTag",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 36,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 170,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L170"
								}
							],
							"type": {
								"type": "reference",
								"target": 1790,
								"name": "User",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 37,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "currency"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 174,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L174"
								}
							],
							"type": {
								"type": "reference",
								"target": 1818,
								"name": "Currency",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 38,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 178,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L178"
								}
							],
							"type": {
								"type": "reference",
								"target": 1832,
								"name": "Payment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39,
							"name": "productVariant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 182,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L182"
								}
							],
							"type": {
								"type": "reference",
								"target": 1862,
								"name": "ProductVariant",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40,
							"name": "refundReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 186,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L186"
								}
							],
							"type": {
								"type": "reference",
								"target": 1871,
								"name": "RefundReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41,
							"name": "paymentCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 190,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L190"
								}
							],
							"type": {
								"type": "reference",
								"target": 1880,
								"name": "PaymentCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 42,
							"name": "apiKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "api key"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 194,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L194"
								}
							],
							"type": {
								"type": "reference",
								"target": 1900,
								"name": "ApiKey",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43,
							"name": "workflowExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "workflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 198,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L198"
								}
							],
							"type": {
								"type": "reference",
								"target": 1937,
								"name": "WorkflowExecution",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 202,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L202"
								}
							],
							"type": {
								"type": "reference",
								"target": 1950,
								"name": "Reservation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45,
							"name": "customerGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 206,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L206"
								}
							],
							"type": {
								"type": "reference",
								"target": 1979,
								"name": "CustomerGroup",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 46,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 210,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L210"
								}
							],
							"type": {
								"type": "reference",
								"target": 2013,
								"name": "Promotion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 47,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 214,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L214"
								}
							],
							"type": {
								"type": "reference",
								"target": 2075,
								"name": "Campaign",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 48,
							"name": "plugin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "plugin"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 218,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L218"
								}
							],
							"type": {
								"type": "reference",
								"target": 2107,
								"name": "Plugin",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 3,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 220,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L220"
								}
							],
							"signatures": [
								{
									"id": 4,
									"name": "Admin",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "admin/index.ts",
											"line": 220,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L220"
										}
									],
									"parameters": [
										{
											"id": 5,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2,
										"name": "Admin",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3
							]
						},
						{
							"title": "Properties",
							"children": [
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								24,
								25,
								26,
								27,
								28,
								29,
								30,
								31,
								32,
								33,
								34,
								35,
								36,
								37,
								38,
								39,
								40,
								41,
								42,
								43,
								44,
								45,
								46,
								47,
								48
							]
						}
					],
					"sources": [
						{
							"fileName": "admin/index.ts",
							"line": 46,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L46"
						}
					]
				},
				{
					"id": 1005,
					"name": "InventoryItem",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1009,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1006,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1007,
									"name": "InventoryItem",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1008,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1005,
										"name": "InventoryItem",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1010,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1011,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item. It sends a request to the\n[Create Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.create({\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1012,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminCreateInventoryItem"
												},
												"name": "AdminCreateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1013,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1014,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1015,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1016,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inventory level. It sends a request to the\n[Update Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.update(\"iitem_123\", {\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1017,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1018,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryItem"
												},
												"name": "AdminUpdateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1019,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1020,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1021,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 134,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1022,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items. It sends a request to the\n[List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list()\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory item:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 134,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1023,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
													"qualifiedName": "AdminInventoryItemParams"
												},
												"name": "AdminInventoryItemParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1024,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemListResponse"
												},
												"name": "AdminInventoryItemListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1025,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1026,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID. It sends a request to the\n[Get Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitemsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\")\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\", {\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1027,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1028,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1029,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1030,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1031,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory item. This sends a request to the\n[Delete Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.delete(\"iitem_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1032,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1033,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemDeleteResponse"
												},
												"name": "AdminInventoryItemDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1034,
							"name": "listLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 262,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1035,
									"name": "listLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels that belong to an inventory item.\nIt sends a request to the [List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\")\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory level:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  fields: \"id,*inventory_item\"\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 262,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1036,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1037,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
													"qualifiedName": "AdminInventoryLevelFilters"
												},
												"name": "AdminInventoryLevelFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1038,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelListResponse"
												},
												"name": "AdminInventoryLevelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1039,
							"name": "updateLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 303,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1040,
									"name": "updateLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the inventory level of the specified inventory item and\nstock location.\n\nThis method sends a request to the\n[Update Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.updateLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n  {\n    stocked_quantity: 10\n  }\n)\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 303,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1041,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1042,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1043,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryLevel"
												},
												"name": "AdminUpdateInventoryLevel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1044,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1045,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1046,
							"name": "deleteLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 343,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1047,
									"name": "deleteLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level associated with an inventory item\nand a stock location.\n\nThis method sends a request to the\n[Remove Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.deleteLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n)\n.then(({ deleted, parent: inventoryItem }) => {\n  console.log(deleted, inventoryItem)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 343,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1048,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1049,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1050,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelDeleteResponse"
												},
												"name": "AdminInventoryLevelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1051,
							"name": "batchUpdateLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 378,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1052,
									"name": "batchUpdateLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "code",
														"text": "`batchInventoryItemLocationLevels`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchUpdateLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 378,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1053,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1054,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1055,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1056,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1057,
							"name": "batchInventoryItemLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 417,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1058,
									"name": "batchInventoryItemLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemLocationLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 417,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1059,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1060,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1061,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1062,
							"name": "batchInventoryItemsLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 452,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1063,
									"name": "batchInventoryItemsLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of multiple inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemsLocationLevels({\n  create: [{\n    inventory_item_id: \"iitem_123\",\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 452,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1064,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevels"
												},
												"name": "AdminBatchInventoryItemsLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1065,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemsLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1006
							]
						},
						{
							"title": "Properties",
							"children": [
								1009
							]
						},
						{
							"title": "Methods",
							"children": [
								1010,
								1015,
								1021,
								1025,
								1030,
								1034,
								1039,
								1046,
								1051,
								1057,
								1062
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 331,
					"name": "Invite",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 335,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 332,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 333,
									"name": "Invite",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 17,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 334,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 331,
										"name": "Invite",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 336,
							"name": "accept",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 337,
									"name": "accept",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method accepts an invite. It requires sending a previous request to\nthe "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Auth.register"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Accept Invite]\n(https://docs.medusajs.com/api/admin#invites_postinvitesaccept)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.register(\"user\", \"emailpass\", {\n  email: \"user@gmail.com\",\n  password: \"supersecret\"\n})\n\n// all subsequent requests will use the token in the header\nconst { user } = await sdk.admin.invite.accept(\n  {\n    email: \"user@gmail.com\",\n    first_name: \"John\",\n    last_name: \"Smith\",\n    invite_token: \"12345...\"\n  },\n)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 338,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the user to create."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
															"qualifiedName": "AdminAcceptInvite"
														},
														"name": "AdminAcceptInvite",
														"package": "@medusajs/types"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 339,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 340,
																	"name": "invite_token",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The invite's token."
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
																			"line": 55,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		340
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
																	"line": 51,
																	"character": 41
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 341,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 342,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminAcceptInviteResponse"
												},
												"name": "AdminAcceptInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 343,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 90,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 344,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an invite. It sends a request to the\n[Create Invite](https://docs.medusajs.com/api/admin#invites_postinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.create({\n  email: \"user@gmail.com\",\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 90,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 345,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
													"qualifiedName": "AdminCreateInvite"
												},
												"name": "AdminCreateInvite",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 346,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 347,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 348,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an invite by its ID. It sends a request to the\n[Get Invite](https://docs.medusajs.com/api/admin#invites_getinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an invite its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\", {\n  fields: \"id,email\"\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 139,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 350,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 351,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 352,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 353,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 196,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 354,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of invites. It sends a request to the\n[List Invites](https://docs.medusajs.com/api/admin#invites_getinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of invites."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of invites:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list()\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each invite:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  fields: \"id,email\"\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 196,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 355,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 356,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteListResponse"
												},
												"name": "AdminInviteListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 357,
							"name": "resend",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 220,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 358,
									"name": "resend",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes the token of an invite. It sends a request to the\n[Refresh Invite Token](https://docs.medusajs.com/api/admin#invites_postinvitesidresend)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.resend(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 220,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 359,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 360,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 361,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 245,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 362,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an invite. It sends a request to the\n[Delete Invite](https://docs.medusajs.com/api/admin#invites_deleteinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.delete(\"invite_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 245,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 363,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 364,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteDeleteResponse"
												},
												"name": "AdminInviteDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								332
							]
						},
						{
							"title": "Properties",
							"children": [
								335
							]
						},
						{
							"title": "Methods",
							"children": [
								336,
								343,
								348,
								353,
								357,
								361
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/invite.ts",
							"line": 9,
							"character": 13
						}
					]
				},
				{
					"id": 1066,
					"name": "Notification",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1070,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1067,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1068,
									"name": "Notification",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1069,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1066,
										"name": "Notification",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1071,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1072,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a notification's details. It sends a request to the \n[Get Notification](https://docs.medusajs.com/api/admin#notifications_getnotificationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The notification's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\")\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\", {\n  fields: \"id,to\"\n})\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1073,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1074,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationParams"
												},
												"name": "AdminNotificationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1075,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationResponse"
												},
												"name": "AdminNotificationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1076,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1077,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of notifications. It sends a request to the \n[List Notifications](https://docs.medusajs.com/api/admin#notifications_getnotifications)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list()\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each notification:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  fields: \"id,to\"\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1078,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationListParams"
												},
												"name": "AdminNotificationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1079,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationListResponse"
												},
												"name": "AdminNotificationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1067
							]
						},
						{
							"title": "Properties",
							"children": [
								1070
							]
						},
						{
							"title": "Methods",
							"children": [
								1071,
								1076
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/notification.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1263,
					"name": "OrderEdit",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1267,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1264,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1265,
									"name": "OrderEdit",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1266,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1263,
										"name": "OrderEdit",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1268,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1269,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an order edit request. It sends a HTTP request to the\n[Create Order Edit](https://docs.medusajs.com/api/admin#order-edits_postorderedits)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.initiateRequest({\n  order_id: \"order_123\"\n})\n.then(({ order_change }) => {\n  console.log(order_change)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1270,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminInitiateOrderEditRequest"
												},
												"name": "AdminInitiateOrderEditRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1271,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order edit."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1272,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditResponse"
												},
												"name": "AdminOrderEditResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1273,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 67,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1274,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method changes an order edit to requested. It sends a request to the\n[Request Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.request(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 67,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1275,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1276,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1277,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1278,
							"name": "confirm",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1279,
									"name": "confirm",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an order edit and applies it on the order. It sends a request\nto the [Confirm Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.confirm(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1280,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1281,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1282,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1283,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1284,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested order edit. It sends a request to the\n[Cancel Order Edit](https://docs.medusajs.com/api/admin#order-edits_deleteordereditsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.cancelRequest(\"ordch_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 129,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1285,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1286,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1287,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditDeleteResponse"
												},
												"name": "AdminOrderEditDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1288,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1289,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to an order edit. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe method sends a request to the [Add Items](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.addItems(\"ordch_123\", {\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1290,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1291,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminAddOrderEditItems"
												},
												"name": "AdminAddOrderEditItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1292,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1293,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1294,
							"name": "updateOriginalItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1295,
									"name": "updateOriginalItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the quantity and other details of an item in an order. It sends a request to the\n[Update Item Quantity](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsitemitem_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateOriginalItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1296,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1297,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's ID in the order."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1298,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to edit in the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1299,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1300,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1301,
							"name": "updateAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 257,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1302,
									"name": "updateAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nIt sends a request\nto the [Update Item](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 257,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1303,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1304,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1305,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1306,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1307,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1308,
							"name": "removeAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 296,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1309,
									"name": "removeAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.removeAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 296,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1310,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1311,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1312,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1313,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1264
							]
						},
						{
							"title": "Properties",
							"children": [
								1267
							]
						},
						{
							"title": "Methods",
							"children": [
								1268,
								1273,
								1278,
								1283,
								1288,
								1294,
								1301,
								1308
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1080,
					"name": "Order",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1084,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1081,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 21,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1082,
									"name": "Order",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 21,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1083,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1080,
										"name": "Order",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1085,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 58,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1086,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/admin#orders_getordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 58,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1087,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1088,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1089,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1090,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 94,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1091,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an order. It sends a request to the\n[Update Order Email](https://docs.medusajs.com/api/admin#orders_postordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.update(\n  \"order_123\",\n  {\n    email: \"new_email@example.com\",\n    shipping_address: {\n      first_name: \"John\",\n      last_name: \"Doe\",\n      address_1: \"123 Main St\",\n    }\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 94,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1092,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1093,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The update details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminUpdateOrder"
												},
												"name": "AdminUpdateOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1094,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1095,
							"name": "retrievePreview",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 124,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1096,
									"name": "retrievePreview",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the preview of an order based on its last associated change. It sends a request to the\n[Get Order Preview](https://docs.medusajs.com/api/admin#orders_getordersidpreview) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrievePreview(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 124,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1097,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1098,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1099,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderPreviewResponse"
												},
												"name": "AdminOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1100,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 184,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1101,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of orders. It sends a request to the\n[List Orders](https://docs.medusajs.com/api/admin#orders_getorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list()\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 184,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1102,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1103,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderListResponse"
												},
												"name": "AdminOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1104,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 212,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1105,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order. It sends a request to the\n[Cancel Order](https://docs.medusajs.com/api/admin#orders_postordersidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancel(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 212,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1106,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1107,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1108,
							"name": "requestTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 241,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1109,
									"name": "requestTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests an order transfer. It sends a request to the\n[Request Order Transfer](https://docs.medusajs.com/api/admin#orders_postordersidrequesttransfer)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.requestTransfer(\"order_123\", {\n  customer_id: \"cus_123\",\n  internal_note: \"Internal note\",\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 241,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1110,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1111,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transfer's details - the id of the next owner."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminRequestOrderTransfer"
												},
												"name": "AdminRequestOrderTransfer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1112,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1113,
							"name": "cancelTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 271,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1114,
									"name": "cancelTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order transfer request. It sends a request to the\n[Cancel Order Transfer Request](https://docs.medusajs.com/api/admin#orders_postordersidcanceltransferrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelTransfer(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 271,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1115,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1116,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1117,
							"name": "createFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1118,
									"name": "createFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment for an order. It sends a request to the\n[Create Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createFulfillment(\"order_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1119,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1120,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderFulfillment"
												},
												"name": "AdminCreateOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1121,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1122,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1123,
							"name": "cancelFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 345,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1124,
									"name": "cancelFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order's fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelFulfillment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    no_notification: false\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 345,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1125,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1126,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1127,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCancelOrderFulfillment"
												},
												"name": "AdminCancelOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1128,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1129,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 390,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1130,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for an order's fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idshipments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createShipment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    items: [\n      {\n        id: \"fulit_123\",\n        quantity: 1\n      }\n    ]\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 390,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1131,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1132,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1133,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderShipment"
												},
												"name": "AdminCreateOrderShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1134,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1135,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1136,
							"name": "markAsDelivered",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 428,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1137,
									"name": "markAsDelivered",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks an order's fulfillment as delivered. It sends a request to the\n[Mark Delivered ](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idmarkasdelivered)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.markAsDelivered(\n  \"order_123\",\n  \"ful_123\",\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 428,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1138,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1139,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1140,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1141,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1142,
							"name": "listChanges",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 461,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1143,
									"name": "listChanges",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of changes made on an order, including returns, exchanges, etc...\n\nThis method sends a request to the [List Changes](https://docs.medusajs.com/api/admin#orders_getordersidchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of order changes."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listChanges(\"order_123\")\n.then(({ order_changes }) => {\n  console.log(order_changes)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 461,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1144,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1145,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each order change."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderChangesFilters"
														},
														"name": "AdminOrderChangesFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 1146,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "PaginatedResponse"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
															"qualifiedName": "AdminOrderChangesResponse"
														},
														"name": "AdminOrderChangesResponse",
														"package": "@medusajs/types"
													}
												],
												"name": "PaginatedResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1147,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 490,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1148,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the order's line items. It sends a request to the\n[List Line Items](https://docs.medusajs.com/api/admin#orders_getordersidlineitems)\nAPI routes."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of line items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listLineItems(\"order_123\")\n.then(({ order_items }) => {\n  console.log(order_items)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 490,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1149,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1150,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each line item."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderItemsFilters"
														},
														"name": "AdminOrderItemsFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 1151,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderLineItemsListResponse"
												},
												"name": "AdminOrderLineItemsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1152,
							"name": "createCreditLine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 527,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1153,
									"name": "createCreditLine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a credit line for an order. It sends a request to the\n[Create Credit Line](https://docs.medusajs.com/api/admin#orders_postordersidcredit-lines) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createCreditLine(\n  \"order_123\",\n  {\n    amount: 100,\n    reference: \"order\",\n    reference_id: \"order_123\",\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 527,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1154,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1155,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The credit line's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
															"qualifiedName": "CreateOrderCreditLineDTO"
														},
														"name": "CreateOrderCreditLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": "order_id"
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										},
										{
											"id": 1156,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1157,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1081
							]
						},
						{
							"title": "Properties",
							"children": [
								1084
							]
						},
						{
							"title": "Methods",
							"children": [
								1085,
								1090,
								1095,
								1100,
								1104,
								1108,
								1113,
								1117,
								1123,
								1129,
								1136,
								1142,
								1147,
								1152
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/order.ts",
							"line": 13,
							"character": 13
						}
					]
				},
				{
					"id": 1880,
					"name": "PaymentCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1884,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1881,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1882,
									"name": "PaymentCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1883,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1880,
										"name": "PaymentCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1885,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1886,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a payment collection. It sends a request to the\n[Create Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.create({\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1887,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the payment collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCreatePaymentCollection"
												},
												"name": "AdminCreatePaymentCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1888,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1889,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1890,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 66,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1891,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a payment collection. It sends a request to the\n[Delete Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_deletepaymentcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.delete(\"paycol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 66,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1892,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1893,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminDeletePaymentCollectionResponse"
												},
												"name": "AdminDeletePaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1894,
							"name": "markAsPaid",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1895,
									"name": "markAsPaid",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks a payment collection as paid. It sends a request to the \n[Mark as Paid](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollectionsidmarkaspaid)\nAPI route.\n\nThe API route creates and authorizes a payment session, then capture its payment, \nusing the manual payment provider."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.markAsPaid(\"paycol_123\", {\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1896,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection to mark as paid."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1897,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to mark the payment collection as paid."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminMarkPaymentCollectionAsPaid"
												},
												"name": "AdminMarkPaymentCollectionAsPaid",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1898,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1899,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1881
							]
						},
						{
							"title": "Properties",
							"children": [
								1884
							]
						},
						{
							"title": "Methods",
							"children": [
								1885,
								1890,
								1894
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1832,
					"name": "Payment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1836,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1833,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1834,
									"name": "Payment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1835,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1832,
										"name": "Payment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1837,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1838,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payments. It sends a request to the \n[List Payments](https://docs.medusajs.com/api/admin#payments_getpayments) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payments."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payments:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list()\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  fields: \"id,*payment_collection\"\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1839,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminPaymentFilters"
												},
												"name": "AdminPaymentFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1840,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentsResponse"
												},
												"name": "AdminPaymentsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1841,
							"name": "listPaymentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1842,
									"name": "listPaymentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payment providers. It sends a request to the \n[List Payment Providers](https://docs.medusajs.com/api/admin#payments_getpaymentspaymentproviders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payment providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders()\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  fields: \"id,is_enabled\"\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1843,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminGetPaymentProvidersParams"
												},
												"name": "AdminGetPaymentProvidersParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1844,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentProviderListResponse"
												},
												"name": "AdminPaymentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1845,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 165,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1846,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a payment's details. It sends a request to the \n[Get Payment](https://docs.medusajs.com/api/admin#payments_getpaymentsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a payment by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\")\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\", {\n  fields: \"id,*payment_collection\"\n})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 165,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1847,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1848,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1849,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1850,
							"name": "capture",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 197,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1851,
									"name": "capture",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method captures a payment. It sends a request to the\n[Capture Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidcapture) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`capturePayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.capture(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 197,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1852,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1853,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The capture's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCapturePayment"
												},
												"name": "AdminCapturePayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1854,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1855,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1856,
							"name": "refund",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 232,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1857,
									"name": "refund",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refunds a payment. It sends a request to the\n[Refund Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidrefund) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`refundPayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.refund(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 232,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1858,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1859,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The refund's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminRefundPayment"
												},
												"name": "AdminRefundPayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1860,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1861,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1833
							]
						},
						{
							"title": "Properties",
							"children": [
								1836
							]
						},
						{
							"title": "Methods",
							"children": [
								1837,
								1841,
								1845,
								1850,
								1856
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/payment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 2107,
					"name": "Plugin",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2111,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2108,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2109,
									"name": "Plugin",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2110,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2107,
										"name": "Plugin",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2112,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 30,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2113,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the list of plugins installed in a Medusa application."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of plugins."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.plugin.list()\n.then(({ plugins }) => {\n  console.log(plugins)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
											"line": 30,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2114,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/plugins/admin/responses.ts",
													"qualifiedName": "AdminPluginsListResponse"
												},
												"name": "AdminPluginsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2108
							]
						},
						{
							"title": "Properties",
							"children": [
								2111
							]
						},
						{
							"title": "Methods",
							"children": [
								2112
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/plugin.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 493,
					"name": "PriceList",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 497,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 494,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 495,
									"name": "PriceList",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 496,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 493,
										"name": "PriceList",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 498,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 499,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price list. It sends a request to the\n[Get Price List](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price list by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\")\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\", {\n  fields: \"id,*prices\"\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 500,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 501,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 502,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 503,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 504,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price lists. It sends a request to the \n[List Price Lists](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelists) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price lists."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price lists:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list()\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price list:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  fields: \"id,*prices\"\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 505,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListListParams"
												},
												"name": "AdminPriceListListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 506,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListListResponse"
												},
												"name": "AdminPriceListListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 507,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 156,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 508,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price list. It sends a request to the\n[Create Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelists)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.create({\n  title: \"My Price List\",\n  status: \"active\",\n  type: \"sale\",\n  prices: [\n    {\n      variant_id: \"variant_123\",\n      amount: 10,\n      currency_code: \"usd\",\n      rules: {\n        region_id: \"reg_123\"\n      }\n    }\n  ]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 156,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 509,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price list to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminCreatePriceList"
												},
												"name": "AdminCreatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 510,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 511,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 512,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 191,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 513,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price list. It sends a request to the \n[Update Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.update(\"plist_123\", {\n  title: \"My Price List\",\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 191,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 514,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 515,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePriceList"
												},
												"name": "AdminUpdatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 516,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 517,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 518,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 519,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price list. It sends a request to the\n[Delete Price List](https://docs.medusajs.com/v2/api/admin#price-lists_deletepricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.delete(\"plist_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 520,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 521,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListDeleteResponse"
												},
												"name": "AdminPriceListDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 522,
							"name": "batchPrices",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 265,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 523,
									"name": "batchPrices",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the prices of a price list to create, update, or delete them.\nIt sends a request to the [Manage Prices](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidpricesbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.batchPrices(\"plist_123\", {\n  create: [{\n    variant_id: \"variant_123\",\n    currency_code: \"usd\",\n    amount: 10,\n    rules: {\n      region_id: \"reg_123\"\n    }\n  }],\n  update: [{\n    id: \"price_123\",\n    variant_id: \"variant_123\",\n    amount: 20,\n  }],\n  delete: [\"price_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 265,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 524,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 525,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The prices to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminBatchPriceListPrice"
												},
												"name": "AdminBatchPriceListPrice",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 526,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 527,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListBatchResponse"
												},
												"name": "AdminPriceListBatchResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 528,
							"name": "linkProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 529,
									"name": "linkProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes products from a price list. It sends a request to the\n[Remove Product](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.linkProducts(\"plist_123\", {\n  remove: [\"prod_123\"]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 530,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 531,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminLinkPriceListProducts"
												},
												"name": "AdminLinkPriceListProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 532,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 533,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								494
							]
						},
						{
							"title": "Properties",
							"children": [
								497
							]
						},
						{
							"title": "Methods",
							"children": [
								498,
								503,
								507,
								512,
								518,
								522,
								528
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-list.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 534,
					"name": "PricePreference",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 538,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 535,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 536,
									"name": "PricePreference",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 537,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 534,
										"name": "PricePreference",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 539,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 540,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price preference. It sends a request to the\n[Get Price Preference](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price preference by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\")\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\", {\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 541,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 542,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 543,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 544,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 545,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price preferences. It sends a request to the \n[List Price Preferences](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferences) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price preferences."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price preferences:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list()\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price preference:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 546,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceListParams"
												},
												"name": "AdminPricePreferenceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 547,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceListResponse"
												},
												"name": "AdminPricePreferenceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 548,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 549,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price preference. It sends a request to the\n[Create Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferences)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.create({\n  attribute: \"region_id\",\n  value: \"region_123\",\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 550,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price preference to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminCreatePricePreference"
												},
												"name": "AdminCreatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 551,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 552,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 553,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 554,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price preference. It sends a request to the\n[Update Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.update(\"prpref_123\", {\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 555,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 556,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePricePreference"
												},
												"name": "AdminUpdatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 557,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 558,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 559,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 560,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price preference. It sends a request to the\n[Delete Price Preference](https://docs.medusajs.com/api/admin#price-preferences_deletepricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.delete(\"prpref_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 561,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 562,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceDeleteResponse"
												},
												"name": "AdminPricePreferenceDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								535
							]
						},
						{
							"title": "Properties",
							"children": [
								538
							]
						},
						{
							"title": "Methods",
							"children": [
								539,
								544,
								548,
								553,
								559
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 458,
					"name": "ProductCategory",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 462,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 459,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 460,
									"name": "ProductCategory",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 461,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 458,
										"name": "ProductCategory",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 463,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 464,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product category. It sends a request to the\n[Create Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategories)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.create({\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 465,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the category to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductCategory"
												},
												"name": "AdminCreateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 466,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 467,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product category. It sends a request to the\n[Update Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.update(\"pcat_123\", {\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 470,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 471,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategory"
												},
												"name": "AdminUpdateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 472,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 473,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 474,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 475,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product categories. It sends a request to the \n[List Product Categories](https://docs.medusajs.com/api/admin#product-categories_getproductcategories) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product categories."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product categories:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list()\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product category:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  fields: \"id,*products\"\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 476,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryListParams"
												},
												"name": "AdminProductCategoryListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 477,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryListResponse"
												},
												"name": "AdminProductCategoryListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 478,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 479,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product category by its ID. It sends a request to the \n[Get Product Category](https://docs.medusajs.com/api/admin#product-categories_getproductcategoriesid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product category by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 480,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 481,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 482,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 483,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 484,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product category. It sends a request to the\n[Delete Product Category](https://docs.medusajs.com/api/admin#product-categories_deleteproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.delete(\"pcat_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 485,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 486,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryDeleteResponse"
												},
												"name": "AdminProductCategoryDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 487,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 488,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manaes the products of a category to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.updateProducts(\"pcat_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 489,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 490,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create or update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategoryProducts"
												},
												"name": "AdminUpdateProductCategoryProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 491,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 492,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								459
							]
						},
						{
							"title": "Properties",
							"children": [
								462
							]
						},
						{
							"title": "Methods",
							"children": [
								463,
								468,
								474,
								478,
								483,
								487
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-category.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 424,
					"name": "ProductCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 428,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 425,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 426,
									"name": "ProductCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 427,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 424,
										"name": "ProductCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 429,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 430,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product collection. It sends a request to the \n[Create Collection](https://docs.medusajs.com/api/admin#collections_postcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.create({\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 431,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminCreateCollection"
												},
												"name": "AdminCreateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 432,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 433,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 434,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 435,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a collection. It sends a request to the\n[Update Collection](https://docs.medusajs.com/api/admin#collections_postcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.update(\"pcol_123\", {\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 436,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the collection."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 437,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollection"
												},
												"name": "AdminUpdateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 438,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 439,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 440,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 441,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of collections. It sends a request to the \n[List Collections](https://docs.medusajs.com/api/admin#collections_getcollections) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of collections."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of collections:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  fields: \"id,*products\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 442,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionListParams"
												},
												"name": "AdminCollectionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 443,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionListResponse"
												},
												"name": "AdminCollectionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 444,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 445,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a collection by its ID. It sends a request to the \n[Get Collection](https://docs.medusajs.com/api/admin#collections_getcollectionsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a collection by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\", {\n  fields: \"id,*products\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 446,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 447,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 448,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 449,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 450,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product collection. It sends a request to the\n[Delete Collection](https://docs.medusajs.com/api/admin#collections_deletecollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.delete(\"pcol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 451,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 452,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionDeleteResponse"
												},
												"name": "AdminCollectionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 453,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 236,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 454,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products of a collection to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#collections_postcollectionsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.updateProducts(\"pcol_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 236,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 455,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 456,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to add or remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollectionProducts"
												},
												"name": "AdminUpdateCollectionProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 457,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								425
							]
						},
						{
							"title": "Properties",
							"children": [
								428
							]
						},
						{
							"title": "Methods",
							"children": [
								429,
								434,
								440,
								444,
								449,
								453
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1761,
					"name": "ProductTag",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1765,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1762,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1763,
									"name": "ProductTag",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1764,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1761,
										"name": "ProductTag",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1766,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1767,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product tag. It sends a request to the \n[Create Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttags)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.create({\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1768,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductTag"
												},
												"name": "AdminCreateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1769,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1770,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1771,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1772,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tag's details. It sends a request to the\n[Update Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.update(\"ptag_123\", {\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1773,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1774,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductTag"
												},
												"name": "AdminUpdateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1775,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1776,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1777,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1778,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product tags. It sends a request to the \n[List Product Tags](https://docs.medusajs.com/api/admin#product-tags_getproducttags) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product tags."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product tags:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list()\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product tag:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  fields: \"id,*products\"\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1779,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagListParams"
												},
												"name": "AdminProductTagListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1780,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagListResponse"
												},
												"name": "AdminProductTagListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1781,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1782,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product tag by its ID. It sends a request to the \n[Get Product Tag](https://docs.medusajs.com/api/admin#product-tags_getproducttagsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product tag by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\")\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1783,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1784,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1785,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1786,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1787,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product tag. It sends a request to the\n[Delete Product Tag](https://docs.medusajs.com/api/admin#product-tags_deleteproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.delete(\"ptag_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1788,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1789,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagDeleteResponse"
												},
												"name": "AdminProductTagDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1762
							]
						},
						{
							"title": "Properties",
							"children": [
								1765
							]
						},
						{
							"title": "Methods",
							"children": [
								1766,
								1771,
								1777,
								1781,
								1786
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 685,
					"name": "ProductType",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 689,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 686,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 687,
									"name": "ProductType",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 688,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 685,
										"name": "ProductType",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 690,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 691,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product type. It sends a request to the\n[Create Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypes)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.create({\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 692,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductType"
												},
												"name": "AdminCreateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 693,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 694,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 695,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 696,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product type. It sends a request to the\n[Update Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.update(\"ptyp_123\", {\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 697,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 698,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductType"
												},
												"name": "AdminUpdateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 699,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 700,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 701,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 702,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product types. It sends a request to the \n[List Product Types](https://docs.medusajs.com/api/admin#product-types_getproducttypes) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product types."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product types:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list()\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product type:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  fields: \"id,*products\"\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 703,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeListParams"
												},
												"name": "AdminProductTypeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 704,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeListResponse"
												},
												"name": "AdminProductTypeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 705,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 706,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product type by its ID. It sends a request to the \n[Get Product Type](https://docs.medusajs.com/api/admin#product-types_getproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product type by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\")\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 707,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 708,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeParams"
												},
												"name": "AdminProductTypeParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 709,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 710,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 208,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product type. It sends a request to the \n[Delete Product Type](https://docs.medusajs.com/api/admin#product-types_deleteproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.delete(\"ptyp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 208,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 712,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 713,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeDeleteResponse"
												},
												"name": "AdminProductTypeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								686
							]
						},
						{
							"title": "Properties",
							"children": [
								689
							]
						},
						{
							"title": "Methods",
							"children": [
								690,
								695,
								701,
								705,
								710
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-type.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1862,
					"name": "ProductVariant",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1866,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1863,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1864,
									"name": "ProductVariant",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1865,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1862,
										"name": "ProductVariant",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1867,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1868,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product variants. It sends a request to the\n[List Product Variants](https://docs.medusajs.com/api/admin#product-variants_getproductvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list()\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  fields: \"id,products\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1869,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1870,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1863
							]
						},
						{
							"title": "Properties",
							"children": [
								1866
							]
						},
						{
							"title": "Methods",
							"children": [
								1867
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 563,
					"name": "Product",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 567,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 564,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 565,
									"name": "Product",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 566,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 563,
										"name": "Product",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 568,
							"name": "import",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 569,
									"name": "import",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product import. The products are only imported after\nthe import is confirmed using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "confirmImport",
												"target": 574
											},
											{
												"kind": "text",
												"text": " method.\n\nThis method sends a request to the \n[Create Product Import](https://docs.medusajs.com/api/admin#products_postproductsimport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.import({\n  file // uploaded File instance\n})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 38,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 570,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminImportProductRequest"
												},
												"name": "AdminImportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 571,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 572,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 573,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminImportProductResponse"
												},
												"name": "AdminImportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 574,
							"name": "confirmImport",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 575,
									"name": "confirmImport",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a product import created using the method "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "import",
												"target": 568
											},
											{
												"kind": "text",
												"text": ".\nIt sends a request to the \n[Confirm Product Import](https://docs.medusajs.com/api/admin#products_postproductsimporttransaction_idconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.confirmImport(\"transaction_123\")\n.then(() => {\n  console.log(\"Import confirmed\")\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 78,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 576,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the transaction of the created product import. This is returned\nby the API route used to create the product import."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 577,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 578,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 579,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 580,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 581,
							"name": "export",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 582,
									"name": "export",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method starts a product export process to retrieve a CSV of exported products.\n\nYou'll receive in the response the transaction ID of the workflow generating the CSV file. \nTo check the status of the execution, send a "
											},
											{
												"kind": "code",
												"text": "`GET`"
											},
											{
												"kind": "text",
												"text": " request to \n"
											},
											{
												"kind": "code",
												"text": "`/admin/workflows-executions/export-products/:transaction-id`"
											},
											{
												"kind": "text",
												"text": ". \n\nOnce the execution finishes successfully, a notification is created for the export. \nYou can retrieve the notifications using the "
											},
											{
												"kind": "code",
												"text": "`/admin/notification`"
											},
											{
												"kind": "text",
												"text": " API route to \nretrieve the file's download URL.\n\nThis method sends a request to the [Export Product](https://docs.medusajs.com/api/admin#products_postproductsexport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.export({})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 583,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminExportProductRequest"
												},
												"name": "AdminExportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 584,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters to specify which products to export."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 585,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminExportProductResponse"
												},
												"name": "AdminExportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 586,
							"name": "batch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 175,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "batch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages products to create, update, or delete them. It sends a request to the \n[Manage Products](https://docs.medusajs.com/api/admin#products_postproductsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The batch operations details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batch({\n  create: [\n    {\n      title: \"Shirt\",\n      options: [{\n        title: \"Default\",\n        values: [\"Default Option\"]\n      }],\n      variants: [\n        {\n          title: \"Default\",\n          options: {\n            Default: \"Default Option\"\n          },\n          prices: []\n        }\n      ]\n    }\n  ],\n  update: [{\n    id: \"prod_123\",\n    title: \"Pants\"\n  }],\n  delete: [\"prod_321\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 175,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 588,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductRequest"
												},
												"name": "AdminBatchProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 589,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the products."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 590,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductResponse"
												},
												"name": "AdminBatchProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 591,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 592,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product. It sends a request to the \n[Create Product](https://docs.medusajs.com/api/admin#products_postproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.create({\n  title: \"Shirt\",\n  options: [{\n    title: \"Default\",\n    values: [\"Default Option\"]\n  }],\n  variants: [\n    {\n      title: \"Default\",\n      options: {\n        Default: \"Default Option\"\n      },\n      prices: []\n    }\n  ],\n  shipping_profile_id: \"sp_123\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 593,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProduct"
												},
												"name": "AdminCreateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 594,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 595,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 596,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 258,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 597,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product. It sends a request to the\n[Update Product](https://docs.medusajs.com/api/admin#products_postproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.update(\"prod_123\", {\n  title: \"Shirt\",\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 258,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 598,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 599,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProduct"
												},
												"name": "AdminUpdateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 600,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 601,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 602,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 321,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the \n[List Products](https://docs.medusajs.com/api/admin#products_getproducts) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of products."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list()\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  fields: \"id,*variants\"\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 321,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 604,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 605,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductListResponse"
												},
												"name": "AdminProductListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 606,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 367,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 607,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product by its ID. It sends a request to the \n[Get Product](https://docs.medusajs.com/api/admin#products_getproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\", {\n  fields: \"id,*variants\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 367,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 608,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 609,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 610,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 611,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 392,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 612,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product. It sends a request to the\n[Delete Product](https://docs.medusajs.com/api/admin#products_deleteproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.delete(\"prod_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 392,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 613,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 614,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductDeleteResponse"
												},
												"name": "AdminProductDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 615,
							"name": "batchVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 436,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 616,
									"name": "batchVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the variants of a product. It sends a request to the\n[Manage Variants](https://docs.medusajs.com/api/admin#products_postproductsidvariantsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variants' details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariants(\"prod_123\", {\n  create: [\n    {\n      title: \"Blue Shirt\",\n      options: {\n        Color: \"Blue\"\n      },\n      prices: []\n    }\n  ],\n  update: [\n    {\n      id: \"variant_123\",\n      title: \"Pants\"\n    }\n  ],\n  delete: [\"variant_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 436,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 617,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 618,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variants to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantRequest"
												},
												"name": "AdminBatchProductVariantRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 619,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variants."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 620,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantResponse"
												},
												"name": "AdminBatchProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 621,
							"name": "createVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 481,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 622,
									"name": "createVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a variant for a product. It sends a request to the\n[Create Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createVariant(\"prod_123\", {\n  title: \"Blue Shirt\",\n  options: {\n    Color: \"Blue\"\n  },\n  prices: [\n    {\n      amount: 10,\n      currency_code: \"usd\"\n    }\n  ]\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 481,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 623,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 624,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductVariant"
												},
												"name": "AdminCreateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 625,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 626,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 627,
							"name": "updateVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 522,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 628,
									"name": "updateVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a variant of a product. It sends a request to the\n[Update Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateVariant(\n  \"prod_123\", \n  \"variant_123\",\n    {\n    title: \"Blue Shirt\",\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 522,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 629,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 630,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 631,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductVariant"
												},
												"name": "AdminUpdateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 632,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 633,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 634,
							"name": "listVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 587,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 635,
									"name": "listVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the \n[List Products](https://docs.medusajs.com/api/admin#products_getproductsidvariants) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\")\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product variant:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  fields: \"id,*product\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 587,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 636,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its variants."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 637,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 638,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 639,
							"name": "retrieveVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 642,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 640,
									"name": "retrieveVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's variant. It sends a request to the\n[Retrieve Variant](https://docs.medusajs.com/api/admin#products_getproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variant's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product variant by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\"\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\",\n  {\n    fields: \"id, *product\"\n  }\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 642,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 641,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 642,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 643,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 644,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantResponse"
												},
												"name": "AdminProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 645,
							"name": "deleteVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 673,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 646,
									"name": "deleteVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's variant. It sends a request to the\n[Delete Variant](https://docs.medusajs.com/api/admin#products_deleteproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteVariant(\"prod_123\", \"variant_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 673,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 647,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 648,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the variant."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 649,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantDeleteResponse"
												},
												"name": "AdminProductVariantDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 650,
							"name": "batchVariantInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 727,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 651,
									"name": "batchVariantInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages a product's variant's inventories to associate them with inventory items, \nupdate their inventory items, or delete their association with inventory items.\n\nIt sends a request to the \n[Manage Variant Inventory](https://docs.medusajs.com/api/admin#products_postproductsidvariantsinventoryitemsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the created, updated, or deleted inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariantInventoryItems(\n  \"prod_123\", \n  {\n    create: [\n      {\n        inventory_item_id: \"iitem_123\",\n        variant_id: \"variant_123\",\n        required_quantity: 10\n      }\n    ],\n    update: [\n      {\n        inventory_item_id: \"iitem_1234\",\n        variant_id: \"variant_1234\",\n        required_quantity: 20\n      }\n    ],\n    delete: [\n      {\n        inventory_item_id: \"iitem_321\",\n        variant_id: \"variant_321\"\n      }\n    ]\n  }\n)\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 727,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 652,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product that the variant belongs to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 653,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemRequest"
												},
												"name": "AdminBatchProductVariantInventoryItemRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 654,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Pass query parameters in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 655,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemResponse"
												},
												"name": "AdminBatchProductVariantInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 656,
							"name": "createOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 767,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 657,
									"name": "createOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an option in a product. It sends a request to the\n[Create Option](https://docs.medusajs.com/api/admin#products_postproductsidoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createOption(\n  \"prod_123\", \n  {\n    title: \"Color\",\n    values: [\"Green\", \"Blue\"]\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 767,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 658,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 659,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductOption"
												},
												"name": "AdminCreateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 660,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 661,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 662,
							"name": "updateOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 808,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 663,
									"name": "updateOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product's option. It sends a request to the\n[Update Option](https://docs.medusajs.com/api/admin#products_postproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateOption(\n  \"prod_123\", \n  \"prodopt_123\",\n  {\n    title: \"Color\"\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 808,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 664,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 665,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the option to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 666,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductOption"
												},
												"name": "AdminUpdateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 667,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 668,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 669,
							"name": "listOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 873,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 670,
									"name": "listOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product options. It sends a request to the \n[List Options](https://docs.medusajs.com/api/admin#products_getproductsidoptions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\")\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  fields: \"id,title\"\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 873,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 671,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 672,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductOptionParams"
												},
												"name": "AdminProductOptionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 673,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionListResponse"
												},
												"name": "AdminProductOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 674,
							"name": "retrieveOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 928,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 675,
									"name": "retrieveOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's option. It sends a request to the\n[Get Option](https://docs.medusajs.com/api/admin#products_getproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product option by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\"\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\",\n  {\n    fields: \"id,title\"\n  }\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 928,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 676,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 677,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 678,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 679,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionResponse"
												},
												"name": "AdminProductOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 680,
							"name": "deleteOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 959,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 681,
									"name": "deleteOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's option. It sends a request to the \n[Delete Option](https://docs.medusajs.com/api/admin#products_deleteproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteOption(\"prod_123\", \"prodopt_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 959,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 682,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 683,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 684,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionDeleteResponse"
												},
												"name": "AdminProductOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								564
							]
						},
						{
							"title": "Properties",
							"children": [
								567
							]
						},
						{
							"title": "Methods",
							"children": [
								568,
								574,
								581,
								586,
								591,
								596,
								602,
								606,
								611,
								615,
								621,
								627,
								634,
								639,
								645,
								650,
								656,
								662,
								669,
								674,
								680
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/product.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 2013,
					"name": "Promotion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2017,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2014,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2015,
									"name": "Promotion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2016,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2013,
										"name": "Promotion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2018,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2019,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a promotion by its ID. It sends a request to the \n[Retrieve Promotion](https://docs.medusajs.com/api/admin#promotions_getpromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a promotion by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.retrieve(\"promo_123\")\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.retrieve(\"promo_123\", {\n  fields: \"id,*application_method\"\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2020,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2021,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the promotion."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionParams"
												},
												"name": "AdminGetPromotionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2022,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2023,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2024,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of promotions. It sends a request to the \n[List Promotions](https://docs.medusajs.com/api/admin#promotions_getpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of promotions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of promotions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list()\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each promotion:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list({\n  fields: \"id,*application_method\"\n})\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2025,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsParams"
												},
												"name": "AdminGetPromotionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2026,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionListResponse"
												},
												"name": "AdminPromotionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2027,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 145,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2028,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new promotion. It sends a request to the \n[Create Promotion](https://docs.medusajs.com/api/admin#promotions_postpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.create({ \n  name: \"My Promotion\",\n  description: \"This is a test promotion\",\n  code: \"PROMO123\",\n  starts_at: \"2021-01-01\",\n  ends_at: \"2021-01-01\",\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 145,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2029,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminCreatePromotion"
												},
												"name": "AdminCreatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2030,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2031,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 177,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2032,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a promotion. It sends a request to the \n[Update Promotion](https://docs.medusajs.com/api/admin#promotions_postpromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.update(\"promo_123\", {\n  code: \"PROMO123\",\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 177,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2033,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2034,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the promotion."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePromotion"
												},
												"name": "AdminUpdatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2035,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2036,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2037,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a promotion. It sends a request to the \n[Delete Promotion](https://docs.medusajs.com/api/admin#promotions_deletepromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deleted promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.delete(\"promo_123\")\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2038,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2039,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "promotion"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2040,
							"name": "addRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 249,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2041,
									"name": "addRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates and adds rules to a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.addRules(\"promo_123\", \"rules\", {\n  rules: [\n    {\n      operator: \"eq\",\n      attribute: \"product_id\",\n      values: [\"prod_123\"]\n    }\n  ]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 249,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2042,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2043,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to create."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2044,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchAddPromotionRulesReq"
												},
												"name": "BatchAddPromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2045,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2046,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 296,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2047,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the rules of a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.updateRules(\"promo_123\", \"rules\", {\n  rules: [\n    {\n      id: \"rule_123\",\n      operator: \"ne\",\n    }\n  ]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 296,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2048,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2049,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2050,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchUpdatePromotionRulesReq"
												},
												"name": "BatchUpdatePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2051,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2052,
							"name": "removeRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 338,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2053,
									"name": "removeRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes rules from a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the \n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.removeRules(\"promo_123\", \"rules\", {\n  rule_ids: [\"rule_123\"]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 338,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2054,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2055,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to remove."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2056,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchRemovePromotionRulesReq"
												},
												"name": "BatchRemovePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2057,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2058,
							"name": "listRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 374,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2059,
									"name": "listRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the rules of a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\nThis method sends a request to the\n[List Rules of a Promotion API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsidrule_type)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's rules."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRules(\"promo_123\", \"rules\")\n.then(({ rules }) => {\n  console.log(rules)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 374,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2060,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2061,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2062,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the rules."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionRuleParams"
												},
												"name": "AdminGetPromotionRuleParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2063,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionRuleListResponse"
												},
												"name": "AdminPromotionRuleListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2064,
							"name": "listRuleAttributes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 411,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2065,
									"name": "listRuleAttributes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a list of potential rule attributes for the promotion and application method types specified in the query parameters. Only the attributes of the rule type specified in the path parameter are retrieved:\n\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the attributes of the promotion's type are retrieved.\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the target rules' attributes of the application method's type are retrieved.\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the buy rules' attributes of the application method's type are retrieved.\n\nThis method sends a request to the\n[List Rule Attribute Options API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsruleattributeoptionsrule_type)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of rule attributes."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRuleAttributes(\"rules\", \"standard\")\n.then(({ attributes }) => {\n  console.log(attributes)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 411,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2066,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve the attributes for. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2067,
											"name": "promotionType",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of promotion to retrieve the attributes for. It can be "
													},
													{
														"kind": "code",
														"text": "`standard`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`buyget`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2068,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleAttributeOptionsListResponse"
												},
												"name": "AdminRuleAttributeOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2069,
							"name": "listRuleValues",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 446,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2070,
									"name": "listRuleValues",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve all potential values for promotion rules and target and buy rules based on the specified rule attribute and type. \nFor example, if you provide the ID of the "
											},
											{
												"kind": "code",
												"text": "`currency_code`"
											},
											{
												"kind": "text",
												"text": " rule attribute, and set "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " to rules, \na list of currencies are retrieved in label-value pairs.\n \nThis method sends a request to the\n[List Rule Values API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsrulevalueoptionsrule_typerule_attribute_id)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of rule values."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRuleValues(\"rules\", \"attr_123\")\n.then(({ values }) => {\n  console.log(values)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 446,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2071,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve the values for. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2072,
											"name": "ruleValue",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the rule attribute to retrieve the values for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2073,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the rule values."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsRuleValueParams"
												},
												"name": "AdminGetPromotionsRuleValueParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 2074,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleValueOptionsListResponse"
												},
												"name": "AdminRuleValueOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2014
							]
						},
						{
							"title": "Properties",
							"children": [
								2017
							]
						},
						{
							"title": "Methods",
							"children": [
								2018,
								2023,
								2027,
								2031,
								2036,
								2040,
								2046,
								2052,
								2058,
								2064,
								2069
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/promotion.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1871,
					"name": "RefundReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1875,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1872,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1873,
									"name": "RefundReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1874,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1871,
										"name": "RefundReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1876,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1877,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of refund reasons. It sends a request to the \n[List Refund Reasons](https://docs.medusajs.com/api/admin#refund-reasons_getrefundreasons)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of refund reasons."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of refund reasons:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list()\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each refund reason:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list({\n  fields: \"id,name\"\n})\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1878,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "RefundReasonFilters"
												},
												"name": "RefundReasonFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1879,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "RefundReasonsResponse"
												},
												"name": "RefundReasonsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1872
							]
						},
						{
							"title": "Properties",
							"children": [
								1875
							]
						},
						{
							"title": "Methods",
							"children": [
								1876
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 733,
					"name": "Region",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 737,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 734,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 735,
									"name": "Region",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 17,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 736,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 733,
										"name": "Region",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 738,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 40,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 739,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new region. It sends a request to the \n[Create Region](https://docs.medusajs.com/api/admin#regions_postregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.create({\n  name: \"United States\",\n  currency_code: \"usd\",\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 40,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 740,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the region to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminCreateRegion"
												},
												"name": "AdminCreateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 741,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 742,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 743,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 75,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 744,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a region. It sends a request to the \n[Update Region](https://docs.medusajs.com/api/admin#regions_postregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.update(\"region_123\", {\n  name: \"United States\",\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 75,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 745,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 746,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the region to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminUpdateRegion"
												},
												"name": "AdminUpdateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 747,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 748,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 749,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 750,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of regions. It sends a request to the \n[List Regions](https://docs.medusajs.com/api/admin#regions_getregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of regions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of regions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list()\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each region:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list({\n  fields: \"id,*countries\"\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 139,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 751,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/region/admin/queries.ts",
															"qualifiedName": "AdminRegionFilters"
														},
														"name": "AdminRegionFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 752,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionListResponse"
												},
												"name": "AdminRegionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 753,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 185,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 754,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a region by ID. It sends a request to the \n[Get Region](https://docs.medusajs.com/api/admin#regions_getregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a region by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.retrieve(\"region_123\")\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.retrieve(\"region_123\", {\n  fields: \"id,*countries\"\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 185,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 755,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 756,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 757,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 758,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 759,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a region by ID. It sends a request to the \n[Delete Region](https://docs.medusajs.com/api/admin#regions_deleteregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.delete(\"region_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 760,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 761,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionDeleteResponse"
												},
												"name": "AdminRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								734
							]
						},
						{
							"title": "Properties",
							"children": [
								737
							]
						},
						{
							"title": "Methods",
							"children": [
								738,
								743,
								749,
								753,
								758
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/region.ts",
							"line": 9,
							"character": 13
						}
					]
				},
				{
					"id": 1950,
					"name": "Reservation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1954,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1951,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1952,
									"name": "Reservation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1953,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1950,
										"name": "Reservation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1955,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1956,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation by ID. It sends a request to the\n[Get Reservation](https://docs.medusajs.com/api/admin#reservations_getreservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a reservation by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.retrieve(\"res_123\")\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.retrieve(\"res_123\", {\n  fields: \"id,name\"\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1957,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1958,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminReservationParams"
												},
												"name": "AdminReservationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1959,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1960,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1961,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of reservations. It sends a request to the\n[List Reservations](https://docs.medusajs.com/api/admin#reservations_getreservations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of reservations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list()\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each reservation:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list({\n  fields: \"id,*inventory_item\"\n})\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1962,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1963,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationListResponse"
												},
												"name": "AdminReservationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1964,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1965,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation. It sends a request to the\n[Create Reservation](https://docs.medusajs.com/api/admin#reservations_postreservations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.create({\n  inventory_item_id: \"iitem_123\",\n  location_id: \"sloc_123\",\n  quantity: 10,\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1966,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminCreateReservation"
												},
												"name": "AdminCreateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1967,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1968,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1969,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1970,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a reservation. It sends a request to the\n[Update Reservation](https://docs.medusajs.com/api/admin#reservations_postreservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.update(\"res_123\", {\n  quantity: 20,\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1971,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1972,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReservation"
												},
												"name": "AdminUpdateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1973,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1974,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1975,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1976,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation by ID. It sends a request to the\n[Delete Reservation](https://docs.medusajs.com/api/admin#reservations_deletereservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.delete(\"res_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1977,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1978,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationDeleteResponse"
												},
												"name": "AdminReservationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1951
							]
						},
						{
							"title": "Properties",
							"children": [
								1954
							]
						},
						{
							"title": "Methods",
							"children": [
								1955,
								1960,
								1964,
								1969,
								1975
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/reservation.ts",
							"line": 5,
							"character": 6
						}
					]
				},
				{
					"id": 762,
					"name": "ReturnReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 766,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 763,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 764,
									"name": "ReturnReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 765,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 762,
										"name": "ReturnReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 767,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 768,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of return reasons. It sends a request to the\n[List Return Reasons](https://docs.medusajs.com/api/admin#return-reasons_returnreason_schema)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of return reasons."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of return reasons:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list()\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each return reason:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list({\n  fields: \"id,value\"\n})\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 769,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonListParams"
												},
												"name": "AdminReturnReasonListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 770,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonListResponse"
												},
												"name": "AdminReturnReasonListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 771,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 772,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a return reason by ID. It sends a request to the\n[Get Return Reason](https://docs.medusajs.com/api/admin#return-reasons_getreturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a return reason by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.retrieve(\"ret_123\")\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.retrieve(\"ret_123\", {\n  fields: \"id,value\"\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 773,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 774,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 775,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 776,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 777,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a return reason. It sends a request to the\n[Create Return Reason](https://docs.medusajs.com/api/admin#return-reasons_postreturnreasons)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.create({\n  value: \"refund\",\n  label: \"Refund\",\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 144,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 778,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return reason to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminCreateReturnReason"
												},
												"name": "AdminCreateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 779,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 780,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 781,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 180,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 782,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a return reason. It sends a request to the\n[Update Return Reason](https://docs.medusajs.com/api/admin#return-reasons_postreturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.update(\"ret_123\", {\n  value: \"refund\",\n  label: \"Refund\",\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 180,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 783,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 784,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return reason to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnReason"
												},
												"name": "AdminUpdateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 785,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 786,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 787,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 788,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a return reason. It sends a request to the\n[Delete Return Reason](https://docs.medusajs.com/api/admin#return-reasons_deletereturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.delete(\"ret_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 789,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 790,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 791,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonDeleteResponse"
												},
												"name": "AdminReturnReasonDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								763
							]
						},
						{
							"title": "Properties",
							"children": [
								766
							]
						},
						{
							"title": "Methods",
							"children": [
								767,
								771,
								776,
								781,
								787
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 1314,
					"name": "Return",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1318,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1315,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1316,
									"name": "Return",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1317,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1314,
										"name": "Return",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1319,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1320,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of returns. It sends a request to the\n[List Returns](https://docs.medusajs.com/api/admin#returns_getreturns)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of returns."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of returns:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list()\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each return:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list({\n  fields: \"id,*items\"\n})\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1321,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
													"qualifiedName": "AdminReturnFilters"
												},
												"name": "AdminReturnFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1322,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnsResponse"
												},
												"name": "AdminReturnsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1323,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 108,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1324,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a return by ID. It sends a request to the\n[Get Return](https://docs.medusajs.com/api/admin#returns_getreturnsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a return by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.retrieve(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.retrieve(\"return_123\", {\n  fields: \"id,*items\"\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 108,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1325,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1326,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1327,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1328,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 136,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1329,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method initiates a return request by creating a return. It sends a request to the\n[Create Return](https://docs.medusajs.com/api/admin#returns_postreturns)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.initiateRequest({\n  order_id: \"order_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 136,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1330,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReturnRequest"
												},
												"name": "AdminInitiateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1331,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1332,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1333,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 168,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1334,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return. It sends a request to the\n[Cancel Return](https://docs.medusajs.com/api/admin#returns_postreturnsidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancel(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 168,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1335,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1336,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1337,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1338,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 199,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1339,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return request. It sends a request to the\n[Cancel Return Request](https://docs.medusajs.com/api/admin#returns_deletereturnsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancelRequest(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 199,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1340,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1341,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1342,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1343,
							"name": "addReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1344,
									"name": "addReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an item to a return request. It sends a request to the\n[Add Return Item](https://docs.medusajs.com/api/admin#returns_postreturnsidrequestitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.addReturnItem(\"return_123\", {\n  id: \"orlitem_123\",\n  quantity: 1,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 234,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1345,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the item to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1346,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the item to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnItems"
												},
												"name": "AdminAddReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1347,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1348,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1349,
							"name": "updateReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 276,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1350,
									"name": "updateReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item in a return request by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property. For example, \n"
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is the ID of an item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Requested Return Item](https://docs.medusajs.com/api/admin#returns_postreturnsidrequestitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReturnItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 276,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1351,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1352,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1353,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnItems"
												},
												"name": "AdminUpdateReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1354,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1355,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1356,
							"name": "removeReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 317,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1357,
									"name": "removeReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an item from a return request by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property. For example, \n"
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is the ID of an item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Item from Return](https://docs.medusajs.com/api/admin#returns_deletereturnsidrequestitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeReturnItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 317,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1358,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1359,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1360,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1361,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1362,
							"name": "addReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 352,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1363,
									"name": "addReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a shipping method to a return request. It sends a request to the\n[Add Shipping Method to Return](https://docs.medusajs.com/api/admin#returns_postreturnsidshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.addReturnShipping(\"return_123\", {\n  shipping_option_id: \"so_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 352,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1364,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the shipping method to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1365,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping method to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnShipping"
												},
												"name": "AdminAddReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1366,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1367,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1368,
							"name": "updateReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 397,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1369,
									"name": "updateReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a return request by the ID of the shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`shipping_method.actions.find((action) => action.action === \"SHIPPING_ADD\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Shipping Method in Return](https://docs.medusajs.com/api/admin#returns_postreturnsidshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReturnShipping(\"return_123\", \"orchach_123\", {\n  custom_amount: 100,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 397,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1370,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the shipping method in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1371,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1372,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping method to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnShipping"
												},
												"name": "AdminUpdateReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1373,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1374,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1375,
							"name": "deleteReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 440,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1376,
									"name": "deleteReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from a return request by the ID of the shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`shipping_method.actions.find((action) => action.action === \"SHIPPING_ADD\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Shipping Method from Return](https://docs.medusajs.com/api/admin#returns_deletereturnsidshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.deleteReturnShipping(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 440,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1377,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the shipping method from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1378,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1379,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1380,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1381,
							"name": "updateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 475,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1382,
									"name": "updateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a return request. It sends a request to the\n[Update Return](https://docs.medusajs.com/api/admin#returns_postreturnsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateRequest(\"return_123\", {\n  location_id: \"sloc_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 475,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1383,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1384,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnRequest"
												},
												"name": "AdminUpdateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1385,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1386,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1387,
							"name": "confirmRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 516,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1388,
									"name": "confirmRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a return request. The return's changes are applied on the inventory quantity of the return\nitems and the order only after the return has been confirmed as received using the\n[Confirm Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveconfirm)\nAPI route.\n\nThis method sends a request to the\n[Confirm Return Request](https://docs.medusajs.com/api/admin#returns_postreturnsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.confirmRequest(\"return_123\", {\n  no_notification: true,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 516,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1389,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to confirm."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1390,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to confirm."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReturnRequest"
												},
												"name": "AdminConfirmReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1391,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1392,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1393,
							"name": "initiateReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 552,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1394,
									"name": "initiateReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method starts the return receival process. It sends a request to the\n[Start Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceive)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.initiateReceive(\"return_123\", {\n  internal_note: \"Return received by the customer\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 552,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1395,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to start the receival process."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1396,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to start the receival process."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReceiveReturn"
												},
												"name": "AdminInitiateReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1397,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1398,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1399,
							"name": "receiveItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 592,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1400,
									"name": "receiveItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds received items to a return. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe method sends a request to the\n[Add Received Items](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.receiveItems(\"return_123\", {\n  items: [\n    { id: \"item_123\", quantity: 1 },\n  ],\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 592,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1401,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the received items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1402,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the received items to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminReceiveItems"
												},
												"name": "AdminReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1403,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1404,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1405,
							"name": "updateReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 637,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1406,
									"name": "updateReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a received item in the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`received_item.actions.find((action) => action.action === \"RECEIVE_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a received item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Received Item](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReceiveItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 637,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1407,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the received item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1408,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the received item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1409,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the received item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReceiveItems"
												},
												"name": "AdminUpdateReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1410,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1411,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1412,
							"name": "removeReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 680,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1413,
									"name": "removeReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a received item from the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`received_item.actions.find((action) => action.action === \"RECEIVE_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a received item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Received Item](https://docs.medusajs.com/api/admin#returns_deletereturnsidreceiveitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeReceiveItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 680,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1414,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the received item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1415,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the received item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1416,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1417,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1418,
							"name": "dismissItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 722,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1419,
									"name": "dismissItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds damaged items to the return. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nA damaged item's quantity is not added back to the associated inventory item's quantity in the\nstock location where the return is initiated from.\n\nThe method sends a request to the\n[Add Damaged Items](https://docs.medusajs.com/api/admin#returns_postreturnsiddismissitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.dismissItems(\"return_123\", {\n  items: [\n    { id: \"orli_123\", quantity: 1 },\n  ],\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 722,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1420,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the damaged items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1421,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the damaged items to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminDismissItems"
												},
												"name": "AdminDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1422,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1423,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1424,
							"name": "updateDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 767,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1425,
									"name": "updateDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a damaged item in the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RECEIVE_DAMAGED_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a damaged item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Damaged Item](https://docs.medusajs.com/api/admin#returns_postreturnsiddismissitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateDismissItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 767,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1426,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the damaged item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1427,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the damaged item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1428,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the damaged item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDismissItems"
												},
												"name": "AdminUpdateDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1429,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1430,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1431,
							"name": "removeDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 810,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1432,
									"name": "removeDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a damaged item from the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RECEIVE_DAMAGED_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a damaged item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Damaged Item](https://docs.medusajs.com/api/admin#returns_deletereturnsiddismissitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeDismissItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 810,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1433,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the damaged item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1434,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the damaged item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1435,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1436,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1437,
							"name": "confirmReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 845,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1438,
									"name": "confirmReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms the return receival. It sends a request to the\n[Confirm Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.confirmReceive(\"return_123\", {\n  no_notification: true,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 845,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1439,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to confirm the receival of."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1440,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the receival confirmation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReceiveReturn"
												},
												"name": "AdminConfirmReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1441,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1442,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1443,
							"name": "cancelReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 878,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1444,
									"name": "cancelReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return receival. It sends a request to the\n[Cancel Return Receival](https://docs.medusajs.com/api/admin#returns_deletereturnsidreceive)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancelReceive(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 878,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1445,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel the receival of."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1446,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1447,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1315
							]
						},
						{
							"title": "Properties",
							"children": [
								1318
							]
						},
						{
							"title": "Methods",
							"children": [
								1319,
								1323,
								1328,
								1333,
								1338,
								1343,
								1349,
								1356,
								1362,
								1368,
								1375,
								1381,
								1387,
								1393,
								1399,
								1405,
								1412,
								1418,
								1424,
								1431,
								1437,
								1443
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/return.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 836,
					"name": "SalesChannel",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 840,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 837,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 838,
									"name": "SalesChannel",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 839,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 836,
										"name": "SalesChannel",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 841,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 842,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new sales channel. It sends a request to the\n[Create Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.create({\n  name: \"Storefront\",\n})\n.then(({ salesChannel }) => {\n  console.log(salesChannel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 843,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channel to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminCreateSalesChannel"
												},
												"name": "AdminCreateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 844,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 845,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 846,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 73,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 847,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a sales channel. It sends a request to the\n[Update Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.update(\n  \"sc_123\",\n  {\n    name: \"Storefront\",\n  }\n)\n.then(({ salesChannel }) => {\n  console.log(salesChannel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 73,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 848,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 849,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channel to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannel"
												},
												"name": "AdminUpdateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 850,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 851,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 852,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 105,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 853,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a sales channel. It sends a request to the\n[Delete Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_deletesaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.delete(\"sc_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 105,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 854,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 855,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelDeleteResponse"
												},
												"name": "AdminSalesChannelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 856,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 857,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a sales channel. It sends a request to the\n[Retrieve Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_getsaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a sales channel by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.retrieve(\"sc_123\")\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.retrieve(\"sc_123\", {\n  fields: \"id,*products\"\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 148,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 858,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 859,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 860,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 861,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 862,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of sales channels. It sends a request to the\n[List Sales Channels](https://docs.medusajs.com/api/admin#sales-channels_getsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of sales channels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list()\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each sales channel:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list({\n  fields: \"id,*products\"\n})\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 863,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/queries.ts",
													"qualifiedName": "AdminSalesChannelListParams"
												},
												"name": "AdminSalesChannelListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 864,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelListResponse"
												},
												"name": "AdminSalesChannelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 865,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 245,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 866,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products in a sales channel to add or remove them. It sends a request to the\n[Manage Products in Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.updateProducts(\"sc_123\", {\n  add: [\"prod_123\", \"prod_456\"],\n  remove: [\"prod_789\"]\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "batchProducts",
														"target": 870
													},
													{
														"kind": "text",
														"text": " instead"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 245,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 867,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to manage the products for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 868,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to add or remove from the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannelProducts"
												},
												"name": "AdminUpdateSalesChannelProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 869,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 870,
							"name": "batchProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 279,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 871,
									"name": "batchProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products in a sales channel to add or remove them. It sends a request to the\n[Manage Products in Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.batchProducts(\"sc_123\", {\n  add: [\"prod_123\", \"prod_456\"],\n  remove: [\"prod_789\"]\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 279,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 872,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to manage the products for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 873,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to add or remove from the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannelProducts"
												},
												"name": "AdminUpdateSalesChannelProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 874,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								837
							]
						},
						{
							"title": "Properties",
							"children": [
								840
							]
						},
						{
							"title": "Methods",
							"children": [
								841,
								846,
								852,
								856,
								861,
								865,
								870
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 942,
					"name": "ShippingOption",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 946,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 943,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 944,
									"name": "ShippingOption",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 945,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 942,
										"name": "ShippingOption",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 947,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 948,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipping option. It sends a request to the\n[Create Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.create({\n  name: \"Standard Shipping\",\n  profile_id: \"shp_123\",\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 949,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingOption"
												},
												"name": "AdminCreateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 950,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 951,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 952,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 84,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 953,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a shipping option. It sends a request to the\n[Get Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_getshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a shipping option by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.retrieve(\"so_123\")\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.retrieve(\"so_123\", {\n  fields: \"id,*service_zone\"\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 84,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 954,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 955,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 956,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 957,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 118,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 958,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping option. It sends a request to the\n[Update Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.update(\"so_123\", {\n  name: \"Standard Shipping\",\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 118,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 959,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 960,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOption"
												},
												"name": "AdminUpdateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 961,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 962,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 963,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 150,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 964,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping option. It sends a request to the\n[Delete Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_deleteshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.delete(\"so_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 150,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 965,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 966,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionDeleteResponse"
												},
												"name": "AdminShippingOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 967,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 968,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of shipping options. It sends a request to the\n[List Shipping Options](https://docs.medusajs.com/api/admin#shipping-options_getshippingoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of shipping options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of shipping options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list()\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each shipping option:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list({\n  fields: \"id,*service_zone\"\n})\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 969,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
													"qualifiedName": "AdminShippingOptionListParams"
												},
												"name": "AdminShippingOptionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 970,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionListResponse"
												},
												"name": "AdminShippingOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 971,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 239,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 972,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the rules of a shipping option to create, update, or remove them. It sends a request to the\n[Manage Rules of a Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptionsidrulesbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.updateRules(\"so_123\", {\n  create: [{ attribute: \"enabled_in_store\", operator: \"eq\", value: \"true\" }],\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 239,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 973,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to manage the rules for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 974,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option rules to manage."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOptionRules"
												},
												"name": "AdminUpdateShippingOptionRules",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 975,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
												},
												"name": "AdminUpdateShippingOptionRulesResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								943
							]
						},
						{
							"title": "Properties",
							"children": [
								946
							]
						},
						{
							"title": "Methods",
							"children": [
								947,
								952,
								957,
								963,
								967,
								971
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 976,
					"name": "ShippingProfile",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 980,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 977,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 978,
									"name": "ShippingProfile",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 979,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 976,
										"name": "ShippingProfile",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 981,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 982,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new shipping profile. It sends a request to the\n[Create Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_postshippingprofiles)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.create({\n  name: \"Default Shipping Profile\",\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 983,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping profile to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingProfile"
												},
												"name": "AdminCreateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 984,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 985,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 986,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 987,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping profile. It sends a request to the\n[Update Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_postshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.update(\"sp_123\", {\n  name: \"Updated Shipping Profile\",\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 988,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 989,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping profile to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingProfile"
												},
												"name": "AdminUpdateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 990,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 991,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 992,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 102,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 993,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping profile. It sends a request to the\n[Delete Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_deleteshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.delete(\"sp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 102,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 994,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 995,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileDeleteResponse"
												},
												"name": "AdminShippingProfileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 996,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 159,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 997,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of shipping profiles. It sends a request to the\n[List Shipping Profiles](https://docs.medusajs.com/api/admin#shipping-profiles_getshippingprofiles)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of shipping profiles."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of shipping profiles:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list()\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each shipping profile:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list({\n  fields: \"id,name\"\n})\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 159,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 998,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
													"qualifiedName": "AdminShippingProfileListParams"
												},
												"name": "AdminShippingProfileListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 999,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileListResponse"
												},
												"name": "AdminShippingProfileListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1000,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 206,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1001,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a shipping profile. It sends a request to the\n[Get Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_getshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a shipping profile by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.retrieve(\"sp_123\")\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.retrieve(\"sp_123\", {\n  fields: \"id,name\"\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 206,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1002,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1003,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1004,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								977
							]
						},
						{
							"title": "Properties",
							"children": [
								980
							]
						},
						{
							"title": "Methods",
							"children": [
								981,
								986,
								992,
								996,
								1000
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 792,
					"name": "StockLocation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 796,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 793,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 794,
									"name": "StockLocation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 795,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 792,
										"name": "StockLocation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 797,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 36,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 798,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new stock location. It sends a request to the\n[Create Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.create({\n  name: \"Main Warehouse\",\n  address_id: \"addr_123\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 36,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 799,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocation"
												},
												"name": "AdminCreateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 800,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 801,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 802,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 71,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 803,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a stock location. It sends a request to the\n[Update Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.update(\"sloc_123\", {\n  name: \"European Warehouse\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 71,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 804,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 805,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the stock location to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocation"
												},
												"name": "AdminUpdateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 806,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 807,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 808,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 103,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 809,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location. It sends a request to the\n[Delete Stock Location](https://docs.medusajs.com/api/admin#stock-locations_deletestocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.delete(\"sloc_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 103,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 810,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 811,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationDeleteResponse"
												},
												"name": "AdminStockLocationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 812,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 813,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location. It sends a request to the\n[Get Stock Location](https://docs.medusajs.com/api/admin#stock-locations_getstocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a stock location by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.retrieve(\"sloc_123\")\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.retrieve(\"sloc_123\", {\n  fields: \"id,*sales_channels\"\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 814,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 815,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 816,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 817,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 818,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of stock locations. It sends a request to the\n[List Stock Locations](https://docs.medusajs.com/api/admin#stock-locations_getstocklocations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list()\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each stock location:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list({\n  fields: \"id,*sales_channels\"\n})\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 819,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
													"qualifiedName": "AdminStockLocationListParams"
												},
												"name": "AdminStockLocationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 820,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationListResponse"
												},
												"name": "AdminStockLocationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 821,
							"name": "updateSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 822,
									"name": "updateSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the sales channels of a stock location by adding or removing them. It sends a request to the\n[Manage Stock Location Sales Channels](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.updateSalesChannels(\"sloc_123\", {\n  add: [\"sc_123\"],\n  remove: [\"sc_456\"],\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 823,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to update the sales channels for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 824,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channels to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocationSalesChannels"
												},
												"name": "AdminUpdateStockLocationSalesChannels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 825,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 826,
							"name": "createFulfillmentSet",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 271,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 827,
									"name": "createFulfillmentSet",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a new fulfillment set to a stock location. It sends a request to the\n[Add Fulfillment Set to Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidfulfillmentsets)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.createFulfillmentSet(\"sloc_123\", {\n  name: \"Shipping\",\n  type: \"shipping\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 271,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 828,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to add the fulfillment set to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 829,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the fulfillment set to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
												},
												"name": "AdminCreateStockLocationFulfillmentSet",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 830,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 831,
							"name": "updateFulfillmentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 832,
									"name": "updateFulfillmentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the fulfillment providers of a stock location by adding or removing them. It sends a request to the\n[Manage Fulfillment Providers of Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidfulfillmentproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.updateFulfillmentProviders(\"sloc_123\", {\n  add: [\"fp_manual_manual\"],\n  remove: [\"fp_shipstation_shipstation\"],\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 833,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to manage the fulfillment providers for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 834,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the fulfillment providers to manage."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 835,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								793
							]
						},
						{
							"title": "Properties",
							"children": [
								796
							]
						},
						{
							"title": "Methods",
							"children": [
								797,
								802,
								808,
								812,
								817,
								821,
								826,
								831
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1741,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1745,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1742,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1743,
									"name": "Store",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1744,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1741,
										"name": "Store",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1746,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1747,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a store by its ID. It sends a request to the\n[Get Store](https://docs.medusajs.com/api/admin#stores_getstoresid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The store's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a store by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.retrieve(\"store_123\")\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.retrieve(\"store_123\", {\n  fields: \"id,*supported_currencies\"\n})\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1748,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the store to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1749,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreParams"
												},
												"name": "AdminStoreParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1750,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1751,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1752,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of stores. It sends a request to the\n[List Stores](https://docs.medusajs.com/api/admin#stores_getstores)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of stores:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list()\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each store:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list({\n  fields: \"id,*supported_currencies\"\n})\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1753,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreListParams"
												},
												"name": "AdminStoreListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1754,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreListResponse"
												},
												"name": "AdminStoreListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1755,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 142,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1756,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a store. It sends a request to the\n[Update Store](https://docs.medusajs.com/api/admin#stores_poststoresid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The store's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.update(\"store_123\", {\n  name: \"My Store\",\n})\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 142,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1757,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the store to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1758,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the store to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStore"
												},
												"name": "AdminUpdateStore",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1759,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1760,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1742
							]
						},
						{
							"title": "Properties",
							"children": [
								1745
							]
						},
						{
							"title": "Methods",
							"children": [
								1746,
								1751,
								1755
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/store.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1689,
					"name": "TaxRate",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1693,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1690,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1691,
									"name": "TaxRate",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 15,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1692,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1689,
										"name": "TaxRate",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1694,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 40,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1695,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a tax rate. It sends a request to the\n[Create Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_posttaxrates)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.create({\n  name: \"VAT\",\n  tax_region_id: \"txreg_123\",\n  code: \"VAT\",\n  rate: 2, // 2%\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 40,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1696,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax rate to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRate"
												},
												"name": "AdminCreateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1697,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1698,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1699,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 73,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1700,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tax rate. It sends a request to the\n[Update Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_posttaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.update(\"txrat_123\", {\n  name: \"VAT\",\n  code: \"VAT\",\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 73,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1701,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1702,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax rate to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminUpdateTaxRate"
												},
												"name": "AdminUpdateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1703,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1704,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1705,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 105,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1706,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a tax rate. It sends a request to the\n[Delete Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_deletetaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.delete(\"txrat_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 105,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1707,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1708,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateDeleteResponse"
												},
												"name": "AdminTaxRateDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1709,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1710,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a tax rate. It sends a request to the\n[Get Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_gettaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a tax rate by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.retrieve(\"txrat_123\")\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.retrieve(\"txrat_123\", {\n  fields: \"id,*tax_region\"\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 148,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1711,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1712,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1713,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1714,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1715,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of tax rates. It sends a request to the\n[List Tax Rates](https://docs.medusajs.com/api/admin#tax-rates_gettaxrates)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of tax rates."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of tax rates:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list()\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each tax rate:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list({\n  fields: \"id,*tax_region\"\n})\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1716,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
													"qualifiedName": "AdminTaxRateListParams"
												},
												"name": "AdminTaxRateListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1717,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateListResponse"
												},
												"name": "AdminTaxRateListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1690
							]
						},
						{
							"title": "Properties",
							"children": [
								1693
							]
						},
						{
							"title": "Methods",
							"children": [
								1694,
								1699,
								1705,
								1709,
								1714
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
							"line": 7,
							"character": 13
						}
					]
				},
				{
					"id": 1718,
					"name": "TaxRegion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1722,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1719,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 20,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1720,
									"name": "TaxRegion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 20,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1721,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1718,
										"name": "TaxRegion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1723,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1724,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a tax region. It sends a request to the\n[Create Tax Region](https://docs.medusajs.com/api/admin#tax-regions_posttaxregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.create({\n  country_code: \"us\",\n  province_code: \"ca\",\n  default_tax_rate: {\n    code: \"VAT\",\n    name: \"VAT\",\n    rate: 20, // 20%\n    is_combinable: true,\n  },\n})\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1725,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax region to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRegion"
												},
												"name": "AdminCreateTaxRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1726,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1727,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1728,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 80,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1729,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a tax region. It sends a request to the\n[Delete Tax Region](https://docs.medusajs.com/api/admin#tax-regions_deletetaxregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.delete(\"txreg_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 80,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1730,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax region to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1731,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionDeleteResponse"
												},
												"name": "AdminTaxRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1732,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1733,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a tax region. It sends a request to the\n[Get Tax Region](https://docs.medusajs.com/api/admin#tax-regions_gettaxregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a tax region by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.retrieve(\"txreg_123\")\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.retrieve(\"txreg_123\", {\n  fields: \"id,*tax_rates\"\n})\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1734,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax region to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1735,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1736,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1737,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 185,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1738,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of tax regions. It sends a request to the\n[List Tax Regions](https://docs.medusajs.com/api/admin#tax-regions_gettaxregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of tax regions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of tax regions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list()\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each tax region:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list({\n  fields: \"id,*tax_rates\"\n})\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 185,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1739,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
													"qualifiedName": "AdminTaxRegionListParams"
												},
												"name": "AdminTaxRegionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1740,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionListResponse"
												},
												"name": "AdminTaxRegionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1719
							]
						},
						{
							"title": "Properties",
							"children": [
								1722
							]
						},
						{
							"title": "Methods",
							"children": [
								1723,
								1728,
								1732,
								1737
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
							"line": 12,
							"character": 13
						}
					]
				},
				{
					"id": 714,
					"name": "Upload",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 718,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 715,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 716,
									"name": "Upload",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 717,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 714,
										"name": "Upload",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 719,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 720,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new upload. It sends a request to the\n[Upload Files](https://docs.medusajs.com/api/admin#uploads_postuploads)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The upload files' details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.create(\n  {\n    files: [\n       // file uploaded as a base64 string\n      {\n        name: \"test.txt\",\n        content: \"test\", // Should be the base64 content of the file\n      },\n      // file uploaded as a File object\n      new File([\"test\"], \"test.txt\", { type: \"text/plain\" })\n    ],\n  }\n)\n.then(({ files }) => {\n  console.log(files)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 721,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the files to upload."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
													"qualifiedName": "BaseUploadFile"
												},
												"name": "BaseUploadFile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 722,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the uploaded files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 723,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileListResponse"
												},
												"name": "AdminFileListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 724,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 104,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 725,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file's details by its ID. It sends a request to the\n[Get File](https://docs.medusajs.com/api/admin#uploads_getuploadsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The file's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.retrieve(\"test.txt\")\n.then(({ file }) => {\n  console.log(file)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 104,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 726,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 727,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 728,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileResponse"
												},
												"name": "AdminFileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 729,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 730,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID from the configured File Module Provider. It sends a request to the\n[Delete File](https://docs.medusajs.com/api/admin#uploads_deleteuploadsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.delete(\"test.txt\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 129,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 731,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 732,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileDeleteResponse"
												},
												"name": "AdminFileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								715
							]
						},
						{
							"title": "Properties",
							"children": [
								718
							]
						},
						{
							"title": "Methods",
							"children": [
								719,
								724,
								729
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/upload.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1790,
					"name": "User",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1794,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1791,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1792,
									"name": "User",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1793,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1790,
										"name": "User",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1795,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 37,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1796,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a user. It sends a request to the\n[Update User](https://docs.medusajs.com/api/admin#users_postusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.update(\"user_123\", {\n  first_name: \"John\",\n  last_name: \"Doe\",\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 37,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1797,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1798,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the user to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/payloads.ts",
													"qualifiedName": "AdminUpdateUser"
												},
												"name": "AdminUpdateUser",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1799,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1800,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1801,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 101,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1802,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of users. It sends a request to the\n[List Users](https://docs.medusajs.com/api/admin#users_getusers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of users."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of users:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list()\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each user:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list({\n  fields: \"id,email\"\n})\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 101,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1803,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserListParams"
												},
												"name": "AdminUserListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1804,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserListResponse"
												},
												"name": "AdminUserListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1805,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1806,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a user. It sends a request to the\n[Get User](https://docs.medusajs.com/api/admin#users_getusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a user by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.retrieve(\"user_123\")\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.retrieve(\"user_123\", {\n  fields: \"id,email\"\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 144,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1807,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1808,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1809,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1810,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 173,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1811,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a user. It sends a request to the\n[Delete User](https://docs.medusajs.com/api/admin#users_deleteusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.delete(\"user_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 173,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1812,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1813,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserDeleteResponse"
												},
												"name": "AdminUserDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1814,
							"name": "me",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 215,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1815,
									"name": "me",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the currently authenticated user. It sends a request to the\n[Get Logged-In User](https://docs.medusajs.com/api/admin#users_getusersme)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the currently authenticated user:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.me()\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.me({\n  fields: \"id,email\"\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 215,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1816,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1817,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1791
							]
						},
						{
							"title": "Properties",
							"children": [
								1794
							]
						},
						{
							"title": "Methods",
							"children": [
								1795,
								1801,
								1805,
								1810,
								1814
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/user.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 1937,
					"name": "WorkflowExecution",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 1941,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2115,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 1938,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1939,
									"name": "WorkflowExecution",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 1940,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1937,
										"name": "WorkflowExecution",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 1942,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1943,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of workflow executions. It sends a request to the\n[List Workflow Executions](https://docs.medusajs.com/api/admin#workflows-executions_getworkflowsexecutions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of workflow executions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of workflow executions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list()\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each workflow execution:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list({\n  fields: \"id,name\"\n})\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1944,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
													"qualifiedName": "AdminGetWorkflowExecutionsParams"
												},
												"name": "AdminGetWorkflowExecutionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 1945,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionListResponse"
												},
												"name": "AdminWorkflowExecutionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1946,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 92,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1947,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a workflow execution by its ID. It sends a request to the\n[Get Workflow Execution](https://docs.medusajs.com/api/admin#workflows-executions_getworkflowsexecutionsworkflow_idtransaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow execution's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.retrieve(\"wrk_123\")\n.then(({ workflow_execution }) => {\n  console.log(workflow_execution)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 92,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 1948,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the workflow execution to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1949,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionResponse"
												},
												"name": "AdminWorkflowExecutionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								1938
							]
						},
						{
							"title": "Properties",
							"children": [
								1941
							]
						},
						{
							"title": "Methods",
							"children": [
								1942,
								1946
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 2115,
					"name": "Client",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2119,
							"name": "fetch_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 108,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"target": 2188,
								"name": "ClientFetch",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2120,
							"name": "config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2173,
								"name": "Config",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2121,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 110,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 2193,
								"name": "Logger",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 2122,
							"name": "DEFAULT_JWT_STORAGE_KEY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 112,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"medusa_auth_token\""
						},
						{
							"id": 2123,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 113,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 2116,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 115,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2117,
									"name": "Client",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 115,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2118,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2173,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2115,
										"name": "Client",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2124,
							"name": "fetch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 144,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2125,
									"name": "fetch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " closely follows (and uses under the hood) the native "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " API. There are, however, few key differences:\n- Non 2xx statuses throw a "
											},
											{
												"kind": "code",
												"text": "`FetchError`"
											},
											{
												"kind": "text",
												"text": " with the status code as the "
											},
											{
												"kind": "code",
												"text": "`status`"
											},
											{
												"kind": "text",
												"text": " property, rather than resolving the promise\n- You can pass "
											},
											{
												"kind": "code",
												"text": "`body`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`query`"
											},
											{
												"kind": "text",
												"text": " as objects, and they will be encoded and stringified.\n- The response gets parsed as JSON if the "
											},
											{
												"kind": "code",
												"text": "`accept`"
											},
											{
												"kind": "text",
												"text": " header is set to "
											},
											{
												"kind": "code",
												"text": "`application/json`"
											},
											{
												"kind": "text",
												"text": ", otherwise the raw Response object is returned\n\nSince the response is dynamically determined, we cannot know if it is JSON or not. Therefore, it is important to pass "
											},
											{
												"kind": "code",
												"text": "`Response`"
											},
											{
												"kind": "text",
												"text": " as the return type"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Promise<T>"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 144,
											"character": 2
										}
									],
									"typeParameters": [
										{
											"id": 2126,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 2127,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2128,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2211,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2126,
												"name": "T",
												"package": "@medusajs/js-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2129,
							"name": "fetchStream",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 158,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2130,
									"name": "fetchStream",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetchStream`"
											},
											{
												"kind": "text",
												"text": " is a helper method to deal with server-sent events. It returns an object with a stream and an abort function.\nIt follows a very similar interface to "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": ", with the return value being an async generator.\nThe stream is an async generator that yields "
											},
											{
												"kind": "code",
												"text": "`ServerSentEventMessage`"
											},
											{
												"kind": "text",
												"text": " objects, which contains the event name, stringified data, and few other properties.\nThe caller is responsible for handling "
											},
											{
												"kind": "code",
												"text": "`disconnect`"
											},
											{
												"kind": "text",
												"text": " events and aborting the stream. The caller is also responsible for parsing the data field."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "FetchStreamResponse"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 158,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2131,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2132,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2211,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2216,
												"name": "FetchStreamResponse",
												"package": "@medusajs/js-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2133,
							"name": "setToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2134,
									"name": "setToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2135,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2136,
							"name": "clearToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 182,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2137,
									"name": "clearToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 182,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2138,
							"name": "clearToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 186,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2139,
									"name": "clearToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 186,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2140,
							"name": "initClient",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 208,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2141,
									"name": "initClient",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 208,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"target": 2188,
										"name": "ClientFetch",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2142,
							"name": "getApiKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 271,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2143,
									"name": "getApiKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 271,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2144,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2145,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2146,
															"name": "Authorization",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 271,
																	"character": 37
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2146
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
															"line": 271,
															"character": 35
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 2147,
							"name": "getPublishableKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 277,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2148,
									"name": "getPublishableKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 277,
											"character": 39
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2149,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2150,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2151,
															"name": "x-publishable-api-key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 278,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2151
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
															"line": 278,
															"character": 6
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 2152,
							"name": "getJwtHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 285,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2153,
									"name": "getJwtHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 285,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2154,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2155,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2156,
																	"name": "Authorization",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
																			"line": 285,
																			"character": 45
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2156
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 285,
																	"character": 43
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2157,
							"name": "setToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 295,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2158,
									"name": "setToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 295,
											"character": 18
										}
									],
									"parameters": [
										{
											"id": 2159,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2160,
							"name": "getToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 317,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2161,
									"name": "getToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 317,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2162,
							"name": "getTokenStorageInfo_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 337,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2163,
									"name": "getTokenStorageInfo_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 337,
											"character": 35
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2164,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2165,
													"name": "storageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
															"line": 359,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 2166,
													"name": "storageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
															"line": 360,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2165,
														2166
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
													"line": 358,
													"character": 11
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2167,
							"name": "throwError_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
									"line": 364,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2168,
									"name": "throwError_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
											"line": 364,
											"character": 12
										}
									],
									"parameters": [
										{
											"id": 2169,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2116
							]
						},
						{
							"title": "Properties",
							"children": [
								2119,
								2120,
								2121,
								2122,
								2123
							]
						},
						{
							"title": "Methods",
							"children": [
								2124,
								2129,
								2133,
								2136,
								2138,
								2140,
								2142,
								2147,
								2152,
								2157,
								2160,
								2162,
								2167
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/client.ts",
							"line": 107,
							"character": 13
						}
					]
				},
				{
					"id": 2193,
					"name": "Logger",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 1,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2195,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 2,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2196,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 2,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 2197,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2198,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 2199,
									"name": "warn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 3,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2200,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 3,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 2201,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2202,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 2203,
									"name": "info",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2204,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 4,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 2205,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2206,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 2207,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 5,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2208,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 5,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 2209,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2210,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2195,
										2199,
										2203,
										2207
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 1,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 2173,
					"name": "Config",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2174,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2175,
									"name": "baseUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 9,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2176,
									"name": "globalHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 10,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 2170,
										"name": "ClientHeaders",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 2177,
									"name": "publishableKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 11,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2178,
									"name": "apiKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 12,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2179,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 13,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2180,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2181,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "jwt"
															},
															{
																"type": "literal",
																"value": "session"
															}
														]
													}
												},
												{
													"id": 2182,
													"name": "jwtTokenStorageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 15,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2183,
													"name": "jwtTokenStorageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 16,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 2184,
													"name": "fetchCredentials",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 17,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "include"
															},
															{
																"type": "literal",
																"value": "omit"
															},
															{
																"type": "literal",
																"value": "same-origin"
															}
														]
													}
												},
												{
													"id": 2185,
													"name": "storage",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 18,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 2221,
														"name": "CustomStorage",
														"package": "@medusajs/js-sdk"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2181,
														2182,
														2183,
														2184,
														2185
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 13,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 2186,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 20,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 2193,
										"name": "Logger",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 2187,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 21,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2175,
										2176,
										2177,
										2178,
										2179,
										2186,
										2187
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 8,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 2239,
					"name": "Awaitable",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 24,
							"character": 12
						}
					],
					"typeParameters": [
						{
							"id": 2240,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 2240,
								"name": "T",
								"package": "@medusajs/js-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2240,
										"name": "T",
										"package": "@medusajs/js-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 2221,
					"name": "CustomStorage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2222,
							"name": "getItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 27,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2223,
									"name": "getItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 27,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2224,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2239,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2225,
							"name": "setItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 28,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2226,
									"name": "setItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 28,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2227,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2228,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2239,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 2229,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 29,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2230,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 29,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 2231,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2239,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2222,
								2225,
								2229
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 26,
							"character": 17
						}
					]
				},
				{
					"id": 2241,
					"name": "FetchParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 32,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Parameters"
						},
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "fetch"
									},
									"name": "fetch",
									"package": "typescript",
									"preferValues": true
								}
							}
						],
						"name": "Parameters",
						"package": "typescript"
					}
				},
				{
					"id": 2170,
					"name": "ClientHeaders",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2171,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2172,
													"name": "tags",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Tags to cache data under for Next.js applications.\n\nLearn more in [Next.js's documentation](https://nextjs.org/docs/app/building-your-application/caching#fetch-optionsnexttags-and-revalidatetag)."
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
															"line": 44,
															"character": 6
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2172
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 38,
													"character": 4
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 2232,
					"name": "FetchInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 0
						},
						"objectType": {
							"type": "reference",
							"target": 2241,
							"name": "FetchParams",
							"package": "@medusajs/js-sdk"
						}
					}
				},
				{
					"id": 2211,
					"name": "FetchArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "RequestInit"
										},
										"name": "RequestInit",
										"package": "typescript"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "body"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2212,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2213,
											"name": "query",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 51,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 2214,
											"name": "headers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 52,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": 2170,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 2215,
											"name": "body",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 53,
													"character": 2
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "body"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "RequestInit"
															},
															"name": "RequestInit",
															"package": "typescript"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2213,
												2214,
												2215
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 50,
											"character": 64
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2188,
					"name": "ClientFetch",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2189,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 56,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 2190,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2191,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2232,
												"name": "FetchInput",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 2192,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2211,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2233,
					"name": "ServerSentEventMessage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2234,
							"name": "comment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ignored by the client."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2235,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A string identifying the type of event described."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2236,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data field for the message. Split by new lines."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2237,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event ID to set the "
									},
									{
										"kind": "inline-tag",
										"tag": "@linkcode",
										"text": "EventSource",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventSource"
										}
									},
									{
										"kind": "text",
										"text": " object's last event ID value."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2238,
							"name": "retry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reconnection time."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2234,
								2235,
								2236,
								2237,
								2238
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 62,
							"character": 17
						}
					]
				},
				{
					"id": 2216,
					"name": "FetchStreamResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2217,
							"name": "stream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts",
											"qualifiedName": "AsyncGenerator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2233,
												"name": "ServerSentEventMessage",
												"package": "@medusajs/js-sdk"
											},
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "AsyncGenerator",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2218,
							"name": "abort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2219,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
											"line": 77,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 2220,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
													"line": 77,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2217,
								2218
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/js-sdk/src/types.ts",
							"line": 75,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						1900,
						2075,
						1448,
						1818,
						1979,
						365,
						1158,
						1578,
						929,
						875,
						908,
						2,
						1005,
						331,
						1066,
						1263,
						1080,
						1880,
						1832,
						2107,
						493,
						534,
						458,
						424,
						1761,
						685,
						1862,
						563,
						2013,
						1871,
						733,
						1950,
						762,
						1314,
						836,
						942,
						976,
						792,
						1741,
						1689,
						1718,
						714,
						1790,
						1937,
						2115
					]
				},
				{
					"title": "Interfaces",
					"children": [
						2221,
						2233,
						2216
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2193,
						2173,
						2239,
						2241,
						2170,
						2232,
						2211,
						2188
					]
				}
			],
			"sources": [
				{
					"fileName": "admin/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/admin/index.ts#L1"
				}
			]
		},
		{
			"id": 49,
			"name": "auth",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 50,
					"name": "Auth",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 51,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 52,
									"name": "Auth",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 53,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2115,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 54,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2173,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 50,
										"name": "Auth",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 57,
							"name": "register",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "register",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a registration JWT token for a user, customer, or custom actor type. It sends a request to the\n[Retrieve Registration Token API route](https://docs.medusajs.com/api/store#auth_postactor_typeauth_provider_register).\n\nThen, it stores the returned token and passes it in the header of subsequent requests. So, you can call the\n[store.customer.create](https://docs.medusajs.com/resources/references/js-sdk/store/customer#create) method,\nfor example, after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The JWT token used for registration later."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.register(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n)\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.create({\n  email: \"customer@gmail.com\",\n  password: \"supersecret\"\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 48,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L48"
										}
									],
									"parameters": [
										{
											"id": 59,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 61,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
													"qualifiedName": "AdminSignUpWithEmailPassword"
												},
												"name": "AdminSignUpWithEmailPassword",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 62,
							"name": "login",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L126"
								}
							],
							"signatures": [
								{
									"id": 63,
									"name": "login",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the JWT authenticated token for an admin user, customer, or custom\nactor type. It sends a request to the [Authenticate API Route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_provider).\n\n### Third-Party Authentication\n\nIf the API route returns a "
											},
											{
												"kind": "code",
												"text": "`location`"
											},
											{
												"kind": "text",
												"text": " property, it means that the authentication requires additional steps,\ntypically in a third-party service. The "
											},
											{
												"kind": "code",
												"text": "`location`"
											},
											{
												"kind": "text",
												"text": " property is returned so that you\ncan redirect the user to the appropriate page.\n\n:::note\n\nFor an example of implementing third-party authentication, refer to the\n[Third-Party Login in Storefront](https://docs.medusajs.com/resources/storefront-development/customers/third-party-login) guide.\n\n:::\n\n### Session Authentication\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`auth.type`"
											},
											{
												"kind": "text",
												"text": " of the SDK is set to "
											},
											{
												"kind": "code",
												"text": "`session`"
											},
											{
												"kind": "text",
												"text": ", this method will also send a request to the\n[Set Authentication Session API route](https://docs.medusajs.com/api/admin#auth_postsession).\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide.\n\n### Automatic Authentication\n\nIf the authentication was successful, subsequent requests using the SDK will automatically have the necessary authentication headers / session\nset, based on your JS SDK authentication configurations.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst result = await sdk.auth.login(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n)\n\nif (typeof result !== \"string\") {\n  alert(\"Authentication requires additional steps\")\n  // replace with the redirect logic of your application\n  window.location.href = result.location\n  return\n}\n\n// customer is now authenticated\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.retrieve()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 126,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L126"
										}
									],
									"parameters": [
										{
											"id": 64,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 66,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
															"qualifiedName": "AdminSignInWithEmailPassword"
														},
														"name": "AdminSignInWithEmailPassword",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 67,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 68,
																	"name": "location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "auth/index.ts",
																			"line": 143,
																			"character": 15,
																			"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L143"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		68
																	]
																}
															],
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 143,
																	"character": 13,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L143"
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 69,
							"name": "callback",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L188"
								}
							],
							"signatures": [
								{
									"id": 70,
									"name": "callback",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to validate an Oauth callback from a third-party service, such as Google, for an admin user, customer, or custom actor types.\nIt sends a request to the [Validate Authentication Callback](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providercallback).\n\nThe method stores the returned token and passes it in the header of subsequent requests. So, you can call the\n[store.customer.create](https://docs.medusajs.com/resources/references/js-sdk/store/customer#create) or "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "refresh",
												"target": 74
											},
											{
												"kind": "text",
												"text": " methods,\nfor example, after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.callback(\n  \"customer\",\n  \"google\",\n  {\n    code: \"123\",\n    state: \"456\"\n  }\n)\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.create({\n  email: \"customer@gmail.com\",\n  password: \"supersecret\"\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 188,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L188"
										}
									],
									"parameters": [
										{
											"id": 71,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 72,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 73,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The query parameters from the Oauth callback, which should be passed to the API route. This includes query parameters like\n"
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`state`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 74,
							"name": "refresh",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 228,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L228"
								}
							],
							"signatures": [
								{
									"id": 75,
									"name": "refresh",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes a JWT authentication token, which is useful after validating the Oauth callback\nwith "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "callback",
												"target": 69
											},
											{
												"kind": "text",
												"text": ". It sends a request to the [Refresh Authentication Token API route](https://docs.medusajs.com/api/admin#auth_postadminauthtokenrefresh).\n\nThe method stores the returned token and passes it in the header of subsequent requests. So, you can call other\nmethods that require authentication after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide.\n\nFor an example of implementing third-party authentication, refer to the\n[Third-Party Login in Storefront](https://docs.medusajs.com/resources/storefront-development/customers/third-party-login) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The refreshed JWT authentication token."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst token = await sdk.auth.refresh()\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.retrieve()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 228,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L228"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "logout",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 260,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L260"
								}
							],
							"signatures": [
								{
									"id": 77,
									"name": "logout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method logs out the currently authenticated user based on your JS SDK authentication configurations.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`auth.type`"
											},
											{
												"kind": "text",
												"text": " of the SDK is set to "
											},
											{
												"kind": "code",
												"text": "`session`"
											},
											{
												"kind": "text",
												"text": ", this method will also send a request to the\n[Delete Authentication Session API route](https://docs.medusajs.com/api/admin#auth_deletesession).\n\nThe method also clears any stored tokens or sessions, based on your JS SDK authentication configurations.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.logout()\n\n// user is now logged out\n// you can't send any requests that require authentication\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 260,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L260"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 78,
							"name": "resetPassword",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 296,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L296"
								}
							],
							"signatures": [
								{
									"id": 79,
									"name": "resetPassword",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests a reset password token for an admin user, customer, or custom actor type.\nIt sends a request to the [Generate Reset Password Token API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerresetpassword).\n\nTo reset the password later using the token delivered to the user, use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "updateProvider",
												"target": 85
											},
											{
												"kind": "text",
												"text": " method.\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.resetPassword(\n  \"customer\",\n  \"emailpass\",\n  {\n    identifier: \"customer@gmail.com\"\n  }\n)\n.then(() => {\n  // user receives token\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 296,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L296"
										}
									],
									"parameters": [
										{
											"id": 80,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 81,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 82,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data required to identify the user."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 83,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 84,
															"name": "identifier",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The user's identifier. For example, when using the "
																	},
																	{
																		"kind": "code",
																		"text": "`emailpass`"
																	},
																	{
																		"kind": "text",
																		"text": " provider,\nthis would be the user's email."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 304,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L304"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																84
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/index.ts",
															"line": 299,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L299"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 85,
							"name": "updateProvider",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 344,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L344"
								}
							],
							"signatures": [
								{
									"id": 86,
									"name": "updateProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to update user-related data authentication data.\n\nMore specifically, use this method when updating the password of an admin user, customer, or\ncustom actor type after requesting to reset their password with "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "resetPassword",
												"target": 78
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to [this API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerupdate).\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.updateProvider(\n  \"customer\",\n  \"emailpass\",\n  {\n    password: \"supersecret\"\n  },\n  token\n)\n.then(() => {\n  // password updated\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 344,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L344"
										}
									],
									"parameters": [
										{
											"id": 87,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 88,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 89,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data necessary to update the user's authentication data. When resetting the user's password,\nsend the "
													},
													{
														"kind": "code",
														"text": "`password`"
													},
													{
														"kind": "text",
														"text": " property."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
													"qualifiedName": "AdminUpdateProvider"
												},
												"name": "AdminUpdateProvider",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 90,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								51
							]
						},
						{
							"title": "Methods",
							"children": [
								57,
								62,
								69,
								74,
								76,
								78,
								85
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						50
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/auth/index.ts#L1"
				}
			]
		},
		{
			"id": 94,
			"name": "store",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 95,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 100,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 21,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 101,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 102,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the paginated list of regions in the store. It sends a request to the\n[List Regions API route](https://docs.medusajs.com/api/store#regions_getregions).\n\nRelated guide: [How to list regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list()\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  fields: \"id,*countries\"\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L70"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 103,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 70,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L70"
														}
													],
													"signatures": [
														{
															"id": 104,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of regions."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 70,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L70"
																}
															],
															"parameters": [
																{
																	"id": 105,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/region/store/queries.ts",
																					"qualifiedName": "StoreRegionFilters"
																				},
																				"name": "StoreRegionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 106,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionListResponse"
																		},
																		"name": "StoreRegionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 107,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a region by its ID. It sends a request to the [Get Region](https://docs.medusajs.com/api/store#regions_getregionsid)\nAPI route.\n\nRelated guide: [Store and retrieve regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/store-retrieve-region)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a region by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\"reg_123\")\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\n  \"reg_123\",\n  {\n    fields: \"id,*countries\"\n  }\n)\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L119"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 108,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 119,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L119"
														}
													],
													"signatures": [
														{
															"id": 109,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The region."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 119,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L119"
																}
															],
															"parameters": [
																{
																	"id": 110,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The region's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 111,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the region."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 112,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionResponse"
																		},
																		"name": "StoreRegionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												102,
												107
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 21,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L21"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 113,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 137,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L137"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 114,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 115,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product collections. It sends a request to the\n[List Collections](https://docs.medusajs.com/api/store#collections_getcollections) API route.\n\nRelated guide: [How to retrieve collections in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  fields: \"id,handle\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 186,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L186"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 116,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 186,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L186"
														}
													],
													"signatures": [
														{
															"id": 117,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of collections."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 186,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L186"
																}
															],
															"parameters": [
																{
																	"id": 118,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/collection/store/queries.ts",
																					"qualifiedName": "StoreCollectionFilters"
																				},
																				"name": "StoreCollectionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 119,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionListResponse"
																		},
																		"name": "StoreCollectionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 120,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a collection by its ID. It sends a request to the [Get Collection](https://docs.medusajs.com/api/store#collections_getcollectionsid)\nAPI route.\n\nRelated guide: [How to retrieve a collection in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a collection by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\", {\n  fields: \"id,handle\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 232,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L232"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 121,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 232,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L232"
														}
													],
													"signatures": [
														{
															"id": 122,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The collection."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 232,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L232"
																}
															],
															"parameters": [
																{
																	"id": 123,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the collection to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 124,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 125,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionResponse"
																		},
																		"name": "StoreCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												115,
												120
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 137,
											"character": 22,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L137"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 126,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 250,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L250"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 127,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 128,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product categories. It sends a request to the\n[List Categories](https://docs.medusajs.com/api/store#product-categories_getproductcategories) API route.\n\nRelated guide: [How to retrieve list of categories in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list()\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each category:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  fields: \"id,*parent_category\"\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 299,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L299"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 299,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L299"
														}
													],
													"signatures": [
														{
															"id": 130,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of categories."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 299,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L299"
																}
															],
															"parameters": [
																{
																	"id": 131,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																					"qualifiedName": "StoreProductCategoryListParams"
																				},
																				"name": "StoreProductCategoryListParams",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 132,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryListResponse"
																		},
																		"name": "StoreProductCategoryListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 133,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a category by its ID. It sends a request to the\n[Retrieve Product Category](https://docs.medusajs.com/api/store#product-categories_getproductcategoriesid).\n\nRelated guide: [How to retrieve a category in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\", {\n  fields: \"id,*parent_category\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 345,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L345"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 134,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 345,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L345"
														}
													],
													"signatures": [
														{
															"id": 135,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The category."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 345,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L345"
																}
															],
															"parameters": [
																{
																	"id": 136,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the category to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 137,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the category."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																			"qualifiedName": "StoreProductCategoryParams"
																		},
																		"name": "StoreProductCategoryParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 138,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryResponse"
																		},
																		"name": "StoreProductCategoryResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												128,
												133
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 250,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L250"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 139,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 363,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L363"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 140,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 141,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a list of products. It sends a request to the\n[List Products API route](https://docs.medusajs.com/api/store#products_getproducts).\n\nRelated guides:\n\n- [How to list products in a storefront](https://docs.medusajs.com/resources/storefront-development/products/list).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of products:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list()\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each product:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  fields: \"id,*collection\"\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 415,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L415"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 142,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 415,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L415"
														}
													],
													"signatures": [
														{
															"id": 143,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of products."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 415,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L415"
																}
															],
															"parameters": [
																{
																	"id": 144,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductListParams"
																		},
																		"name": "StoreProductListParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 145,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductListResponse"
																		},
																		"name": "StoreProductListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 146,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method is used to retrieve a product by its ID. It sends a request to the\n[Get Product](https://docs.medusajs.com/api/store#products_getproductsid) API route.\n\nRelated guides:\n\n- [How to retrieve a product in the storefront](https://docs.medusajs.com/resources/storefront-development/products/retrieve).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a product by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\", {\n  fields: \"id,*collection\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 464,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L464"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 147,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 464,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L464"
														}
													],
													"signatures": [
														{
															"id": 148,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The product."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 464,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L464"
																}
															],
															"parameters": [
																{
																	"id": 149,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The product's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 150,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the product."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductParams"
																		},
																		"name": "StoreProductParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 151,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductResponse"
																		},
																		"name": "StoreProductResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												141,
												146
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 363,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L363"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 152,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Related guides: [How to implement carts in the storefront](https://docs.medusajs.com/resources/storefront-development/cart)."
									}
								],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "cart"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 484,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L484"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 153,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 154,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a cart. It sends a request to the [Create Cart](https://docs.medusajs.com/api/store#carts_postcarts)\nAPI route.\n\nRelated guide: [How to create a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/create)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.create({\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 504,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L504"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 155,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 504,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L504"
														}
													],
													"signatures": [
														{
															"id": 156,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The created cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 504,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L504"
																}
															],
															"parameters": [
																{
																	"id": 157,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the cart to create."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreCreateCart"
																		},
																		"name": "StoreCreateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 158,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 159,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 160,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a cart. It sends a request to the\n[Update Cart](https://docs.medusajs.com/api/store#carts_postcartsid) API route.\n\nRelated guide: [How to update a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/update)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.update(\"cart_123\", {\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 536,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L536"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 161,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 536,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L536"
														}
													],
													"signatures": [
														{
															"id": 162,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 536,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L536"
																}
															],
															"parameters": [
																{
																	"id": 163,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 164,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCart"
																		},
																		"name": "StoreUpdateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 165,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 166,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 167,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a cart by its ID. It sends a request to the\n[Get Cart](https://docs.medusajs.com/api/store#carts_getcartsid) API route.\n\nRelated guide: [How to retrieve a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a cart by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\", {\n  fields: \"id,*items\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 586,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L586"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 168,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 586,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L586"
														}
													],
													"signatures": [
														{
															"id": 169,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 586,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L586"
																}
															],
															"parameters": [
																{
																	"id": 170,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 171,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 172,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 173,
											"name": "createLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This methods adds a product variant to the cart as a line item. It sends a request to the\n[Add Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitems) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.createLineItem(\"cart_123\", {\n  variant_id: \"variant_123\",\n  quantity: 1\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 620,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L620"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 174,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 620,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L620"
														}
													],
													"signatures": [
														{
															"id": 175,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 620,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L620"
																}
															],
															"parameters": [
																{
																	"id": 176,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 177,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the item to add."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartLineItem"
																		},
																		"name": "StoreAddCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 178,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 179,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 180,
											"name": "updateLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a line item in a cart. It sends a request to the\n[Update Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.updateLineItem(\n  \"cart_123\",\n  \"li_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 661,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L661"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 181,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 661,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L661"
														}
													],
													"signatures": [
														{
															"id": 182,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 661,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L661"
																}
															],
															"parameters": [
																{
																	"id": 183,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 184,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 185,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCartLineItem"
																		},
																		"name": "StoreUpdateCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 186,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 187,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 188,
											"name": "deleteLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes a line item from a cart. It sends a request to the\n[Remove Line Item](https://docs.medusajs.com/api/store#carts_deletecartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.deleteLineItem(\n  \"cart_123\",\n  \"li_123\"\n)\n.then(({ deleted, parent: cart }) => {\n  console.log(deleted, cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 698,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L698"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 698,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L698"
														}
													],
													"signatures": [
														{
															"id": 190,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 698,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L698"
																}
															],
															"parameters": [
																{
																	"id": 191,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 192,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 193,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreLineItemDeleteResponse"
																		},
																		"name": "StoreLineItemDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 194,
											"name": "addShippingMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method adds a shipping method to a cart. It sends a request to\nthe [Add Shipping Method](https://docs.medusajs.com/api/store#carts_postcartsidshippingmethods) API routes.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.addShippingMethod(\"cart_123\", {\n  option_id: \"so_123\",\n  data: {\n    // custom data for fulfillment provider.\n  }\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 734,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L734"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 195,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 734,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L734"
														}
													],
													"signatures": [
														{
															"id": 196,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 734,
																	"character": 23,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L734"
																}
															],
															"parameters": [
																{
																	"id": 197,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 198,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The shipping method's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartShippingMethods"
																		},
																		"name": "StoreAddCartShippingMethods",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 199,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 200,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 201,
											"name": "complete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method completes a cart and places the order. It's the last step of the checkout flow.\nThe method sends a request to the [Complete Cart](https://docs.medusajs.com/api/store#carts_postcartsidcomplete)\nAPI route.\n\nRelated guide: [Learn how to complete cart in checkout flow](https://docs.medusajs.com/resources/storefront-development/checkout/complete-cart)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.complete(\"cart_123\")\n.then((data) => {\n  if(data.type === \"cart\") {\n    // an error occurred\n    console.log(data.error, data.cart)\n  } else {\n    // order placed successfully\n    console.log(data.order)\n  }\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 774,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L774"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 202,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 774,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L774"
														}
													],
													"signatures": [
														{
															"id": 203,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details, if it was placed successfully. Otherwise, the cart is returned with an error."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 774,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L774"
																}
															],
															"parameters": [
																{
																	"id": 204,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 205,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the created order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 206,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCompleteCartResponse"
																		},
																		"name": "StoreCompleteCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 207,
											"name": "transferCart",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the customer of a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.transferCart(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 803,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L803"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 208,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 803,
															"character": 18,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L803"
														}
													],
													"signatures": [
														{
															"id": 209,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 803,
																	"character": 18,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L803"
																}
															],
															"parameters": [
																{
																	"id": 210,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 211,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 212,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												154,
												160,
												167,
												173,
												180,
												188,
												194,
												201,
												207
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 484,
											"character": 16,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L484"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 213,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 822,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L822"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 215,
											"name": "listCartOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the list of shipping options for a cart. It sends a request to\nthe [List Shipping Options](https://docs.medusajs.com/api/store#shipping-options_getshippingoptions)\nAPI route.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.fulfillment.listCartOptions({\n  cart_id: \"cart_123\"\n})\n.then(({ shipping_options }) => {\n  console.log(shipping_options)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 842,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L842"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 842,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L842"
														}
													],
													"signatures": [
														{
															"id": 217,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The shipping options that can be used for the cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 842,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L842"
																}
															],
															"parameters": [
																{
																	"id": 218,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details along with configurations of the fields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/queries.ts",
																			"qualifiedName": "StoreGetShippingOptionList"
																		},
																		"name": "StoreGetShippingOptionList",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 219,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionListResponse"
																		},
																		"name": "StoreShippingOptionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 220,
											"name": "calculate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method calculates the price of a shipping option in a cart, which is useful during checkout.\nIt sends a request to the [Calculate Shipping Option Price](https://docs.medusajs.com/api/store#shipping-options_postshippingoptionsidcalculate)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.fulfillment.calculate(\"so_123\", {\n  cart_id: \"cart_123\"\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 874,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L874"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 221,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 874,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L874"
														}
													],
													"signatures": [
														{
															"id": 222,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The shipping option's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 874,
																	"character": 15,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L874"
																}
															],
															"parameters": [
																{
																	"id": 223,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The shipping option's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 224,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The price calculation's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/payloads.ts",
																			"qualifiedName": "StoreCalculateShippingOptionPrice"
																		},
																		"name": "StoreCalculateShippingOptionPrice",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 225,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the shipping option."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 226,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionResponse"
																		},
																		"name": "StoreShippingOptionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												215,
												220
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 822,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L822"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 227,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 895,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L895"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 228,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 229,
											"name": "listPaymentProviders",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the payment providers available in a region, which is useful during checkout.\nIt sends a request to the [List Payment Providers](https://docs.medusajs.com/api/store#payment-providers_getpaymentproviders)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of payment providers for a region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each provider:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10,\n  fields: \"id\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 952,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L952"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 230,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 952,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L952"
														}
													],
													"signatures": [
														{
															"id": 231,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The list of payment providers."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 952,
																	"character": 26,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L952"
																}
															],
															"parameters": [
																{
																	"id": 232,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The filters to apply on the retrieved providers, along with configurations of the\nfields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/payment/store/queries.ts",
																					"qualifiedName": "StorePaymentProviderFilters"
																				},
																				"name": "StorePaymentProviderFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 233,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentProviderListResponse"
																		},
																		"name": "StorePaymentProviderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 234,
											"name": "initiatePaymentSession",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a payment session of a cart's payment collection, selecting a payment provider.\nIt sends a request to the [Initialize Payment Session](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollectionsidpaymentsessions)\nAPI route.\n\nIf the cart doesn't have a payment collection, a payment collection is created for the cart by\nsending a request to the [Create Payment Collection](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollections)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.initiatePaymentSession(\n  cart, // assuming you already have the cart object.\n  {\n    provider_id: \"pp_stripe_stripe\",\n    data: {\n      // any data relevant for the provider.\n    }\n  }\n)\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 996,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L996"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 235,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 996,
															"character": 28,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L996"
														}
													],
													"signatures": [
														{
															"id": 236,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The payment collection's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 996,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L996"
																}
															],
															"parameters": [
																{
																	"id": 237,
																	"name": "cart",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/entities.ts",
																			"qualifiedName": "StoreCart"
																		},
																		"name": "StoreCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 238,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payment session's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/payloads.ts",
																			"qualifiedName": "StoreInitializePaymentSession"
																		},
																		"name": "StoreInitializePaymentSession",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 239,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the payment collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 240,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentCollectionResponse"
																		},
																		"name": "StorePaymentCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												229,
												234
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 895,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L895"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 241,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1034,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1034"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 242,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 243,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of orders matching the specified filters. It\nsends a request to the [List Orders](https://docs.medusajs.com/api/store#orders_getorders)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list()\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1082,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1082"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 244,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1082,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1082"
														}
													],
													"signatures": [
														{
															"id": 245,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of orders."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1082,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1082"
																}
															],
															"parameters": [
																{
																	"id": 246,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the orders."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/queries.ts",
																			"qualifiedName": "StoreOrderFilters"
																		},
																		"name": "StoreOrderFilters",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 247,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderListResponse"
																		},
																		"name": "StoreOrderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 248,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/store#orders_getordersid) API route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1126,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1126"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 249,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1126,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1126"
														}
													],
													"signatures": [
														{
															"id": 250,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1126,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1126"
																}
															],
															"parameters": [
																{
																	"id": 251,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 252,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 253,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 254,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 255,
																					"name": "order",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "store/index.ts",
																							"line": 1131,
																							"character": 33,
																							"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1131"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/http/order/store/entities.ts",
																							"qualifiedName": "StoreOrder"
																						},
																						"name": "StoreOrder",
																						"package": "@medusajs/types"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						255
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "store/index.ts",
																					"line": 1131,
																					"character": 31,
																					"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1131"
																				}
																			]
																		}
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 256,
											"name": "requestTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method requests a order transfer from a guest account to the current, logged in customer account.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.requestTransfer(\n  \"order_123\",\n  {\n    description: \"I want to transfer this order to my friend.\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1165,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1165"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 257,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1165,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1165"
														}
													],
													"signatures": [
														{
															"id": 258,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1165,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1165"
																}
															],
															"parameters": [
																{
																	"id": 259,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 260,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The transfer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreRequestOrderTransfer"
																		},
																		"name": "StoreRequestOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 261,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 262,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 263,
											"name": "cancelTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method cancels an order transfer request.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.cancelTransfer(\n  \"order_123\",\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1203,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1203"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 264,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1203,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1203"
														}
													],
													"signatures": [
														{
															"id": 265,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1203,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1203"
																}
															],
															"parameters": [
																{
																	"id": 266,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 267,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 268,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 269,
											"name": "acceptTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to accept the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.acceptTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1240,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1240"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 270,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1240,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1240"
														}
													],
													"signatures": [
														{
															"id": 271,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1240,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1240"
																}
															],
															"parameters": [
																{
																	"id": 272,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 273,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreAcceptOrderTransfer"
																		},
																		"name": "StoreAcceptOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 274,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 275,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 276,
											"name": "declineTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to decline the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.declineTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1279,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1279"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 277,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1279,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1279"
														}
													],
													"signatures": [
														{
															"id": 278,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1279,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1279"
																}
															],
															"parameters": [
																{
																	"id": 279,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 280,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreDeclineOrderTransfer"
																		},
																		"name": "StoreDeclineOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 281,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 282,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												243,
												248,
												256,
												263,
												269,
												276
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1034,
											"character": 17,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1034"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 283,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1300,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1300"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 284,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 285,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method registers a customer. It sends a request to the [Register Customer](https://docs.medusajs.com/api/store#customers_postcustomers)\nAPI route.\n\nYou must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.register"
													},
													{
														"kind": "text",
														"text": " method first to retrieve a registration token. Then, pass that\nregistration token in the "
													},
													{
														"kind": "code",
														"text": "`headers`"
													},
													{
														"kind": "text",
														"text": " parameter of this method as an authorization bearer header.\n\nRelated guide: [How to register customer in storefront](https://docs.medusajs.com/resources/storefront-development/customers/register)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nconst token = await sdk.auth.register(\"customer\", \"emailpass\", {\n  \"email\": \"customer@gmail.com\",\n  \"password\": \"supersecret\"\n})\n\nsdk.store.customer.create(\n  {\n    \"email\": \"customer@gmail.com\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1334,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1334"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 286,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1334,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1334"
														}
													],
													"signatures": [
														{
															"id": 287,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1334,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1334"
																}
															],
															"parameters": [
																{
																	"id": 288,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomer"
																		},
																		"name": "StoreCreateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 289,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 290,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request. This is where you include the authorization JWT registration token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 291,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the\n[Update Customer](https://docs.medusajs.com/api/store#customers_postcustomersme) API route.\n\nRelated guide: [How to edit customer's profile in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/profile)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.update({\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1371,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1371"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 292,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1371,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1371"
														}
													],
													"signatures": [
														{
															"id": 293,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1371,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1371"
																}
															],
															"parameters": [
																{
																	"id": 294,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomer"
																		},
																		"name": "StoreUpdateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 295,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 296,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 297,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Logged-In Customer](https://docs.medusajs.com/api/store#customers_getcustomersme)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieve()\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1403,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1403"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 298,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1403,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1403"
														}
													],
													"signatures": [
														{
															"id": 299,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1403,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1403"
																}
															],
															"parameters": [
																{
																	"id": 300,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 301,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 302,
											"name": "createAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates an address for the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Create Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.createAddress({\n  country_code: \"us\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1434,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1434"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 303,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1434,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1434"
														}
													],
													"signatures": [
														{
															"id": 304,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1434,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1434"
																}
															],
															"parameters": [
																{
																	"id": 305,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomerAddress"
																		},
																		"name": "StoreCreateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 306,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 307,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 308,
											"name": "updateAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Update Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.updateAddress(\n  \"caddr_123\",\n  {\n    country_code: \"us\"\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1475,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1475"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 309,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1475,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1475"
														}
													],
													"signatures": [
														{
															"id": 310,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1475,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1475"
																}
															],
															"parameters": [
																{
																	"id": 311,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the address to update."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 312,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details to update in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomerAddress"
																		},
																		"name": "StoreUpdateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 313,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 314,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 315,
											"name": "listAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's address. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [List Customer's Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of addresses:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress()\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  limit: 10,\n  offset: 10\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each address:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  fields: \"id,country_code\"\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1542,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1542"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 316,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1542,
															"character": 17,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1542"
														}
													],
													"signatures": [
														{
															"id": 317,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of addresses."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1542,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1542"
																}
															],
															"parameters": [
																{
																	"id": 318,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the addresses."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/customer/store/queries.ts",
																					"qualifiedName": "StoreCustomerAddressFilters"
																				},
																				"name": "StoreCustomerAddressFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 319,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressListResponse"
																		},
																		"name": "StoreCustomerAddressListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 320,
											"name": "retrieveAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an address by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\"\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\",\n  {\n    fields: \"id,country_code\"\n  }\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1596,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1596"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 321,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1596,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1596"
														}
													],
													"signatures": [
														{
															"id": 322,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1596,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1596"
																}
															],
															"parameters": [
																{
																	"id": 323,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 324,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 325,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressResponse"
																		},
																		"name": "StoreCustomerAddressResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 326,
											"name": "deleteAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Remove Address](https://docs.medusajs.com/api/store#customers_deletecustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.deleteAddress(\"caddr_123\")\n.then(({ deleted, parent: customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1628,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1628"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 327,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1628,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1628"
														}
													],
													"signatures": [
														{
															"id": 328,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1628,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1628"
																}
															],
															"parameters": [
																{
																	"id": 329,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 330,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 2170,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressDeleteResponse"
																		},
																		"name": "StoreCustomerAddressDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												285,
												291,
												297,
												302,
												308,
												315,
												320,
												326
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1300,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1300"
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								100,
								113,
								126,
								139,
								152,
								213,
								227,
								241,
								283
							]
						}
					],
					"sources": [
						{
							"fileName": "store/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						95
					]
				}
			],
			"sources": [
				{
					"fileName": "store/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/65b7e26b02f700e6a7798cc49bcd5b80f60888f7/packages/core/js-sdk/src/store/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				49,
				94
			]
		}
	],
	"packageName": "@medusajs/js-sdk",
	"symbolIdMap": {
		"1": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"3": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.__constructor"
		},
		"4": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"5": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "client"
		},
		"6": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.invite"
		},
		"7": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customer"
		},
		"8": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCollection"
		},
		"9": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCategory"
		},
		"10": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.priceList"
		},
		"11": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.pricePreference"
		},
		"12": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.product"
		},
		"13": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productType"
		},
		"14": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.upload"
		},
		"15": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.region"
		},
		"16": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.returnReason"
		},
		"17": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.stockLocation"
		},
		"18": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.salesChannel"
		},
		"19": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentSet"
		},
		"20": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillment"
		},
		"21": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentProvider"
		},
		"22": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingOption"
		},
		"23": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingProfile"
		},
		"24": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.inventoryItem"
		},
		"25": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.notification"
		},
		"26": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.order"
		},
		"27": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.draftOrder"
		},
		"28": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.orderEdit"
		},
		"29": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.return"
		},
		"30": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.claim"
		},
		"31": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.exchange"
		},
		"32": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRate"
		},
		"33": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRegion"
		},
		"34": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.store"
		},
		"35": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productTag"
		},
		"36": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.user"
		},
		"37": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.currency"
		},
		"38": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.payment"
		},
		"39": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productVariant"
		},
		"40": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.refundReason"
		},
		"41": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.paymentCollection"
		},
		"42": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.apiKey"
		},
		"43": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.workflowExecution"
		},
		"44": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.reservation"
		},
		"45": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customerGroup"
		},
		"46": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.promotion"
		},
		"47": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.campaign"
		},
		"48": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.plugin"
		},
		"49": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": ""
		},
		"50": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"51": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.__constructor"
		},
		"52": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"53": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "client"
		},
		"54": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "config"
		},
		"57": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"58": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"59": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"60": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"61": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"62": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"63": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"64": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"65": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"66": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"67": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object"
		},
		"68": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object.location"
		},
		"69": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"70": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"71": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"72": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"73": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "query"
		},
		"74": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"75": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"76": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"77": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"78": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"79": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"80": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"81": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"82": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"83": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type.identifier"
		},
		"85": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"86": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"87": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"88": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"89": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"90": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "token"
		},
		"94": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": ""
		},
		"95": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store"
		},
		"100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.region"
		},
		"101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.collection"
		},
		"114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.category"
		},
		"127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.product"
		},
		"140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.cart"
		},
		"153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createLineItem"
		},
		"174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateLineItem"
		},
		"181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteLineItem"
		},
		"189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.addShippingMethod"
		},
		"195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.complete"
		},
		"202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.transferCart"
		},
		"208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.fulfillment"
		},
		"214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listCartOptions"
		},
		"216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.calculate"
		},
		"221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.payment"
		},
		"228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listPaymentProviders"
		},
		"230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.initiatePaymentSession"
		},
		"235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cart"
		},
		"238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.order"
		},
		"242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type.order"
		},
		"256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.requestTransfer"
		},
		"257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.cancelTransfer"
		},
		"264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.acceptTransfer"
		},
		"270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.declineTransfer"
		},
		"277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.customer"
		},
		"284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createAddress"
		},
		"303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateAddress"
		},
		"309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listAddress"
		},
		"316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieveAddress"
		},
		"321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteAddress"
		},
		"327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.__constructor"
		},
		"333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "client"
		},
		"335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.client"
		},
		"336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "input"
		},
		"339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type"
		},
		"340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type.invite_token"
		},
		"341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "body"
		},
		"346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "queryParams"
		},
		"356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.__constructor"
		},
		"367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "client"
		},
		"369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.client"
		},
		"370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "queryParams"
		},
		"384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.createAddress"
		},
		"400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.createAddress"
		},
		"401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.updateAddress"
		},
		"405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.updateAddress"
		},
		"406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.deleteAddress"
		},
		"411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.deleteAddress"
		},
		"412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieveAddress"
		},
		"416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieveAddress"
		},
		"417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.listAddresses"
		},
		"421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.listAddresses"
		},
		"422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.__constructor"
		},
		"426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "client"
		},
		"428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.client"
		},
		"429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "queryParams"
		},
		"443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.__constructor"
		},
		"460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "client"
		},
		"462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.client"
		},
		"463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.__constructor"
		},
		"495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "client"
		},
		"497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.client"
		},
		"498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.__constructor"
		},
		"536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "client"
		},
		"538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.client"
		},
		"539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.__constructor"
		},
		"565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "client"
		},
		"567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.client"
		},
		"568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"572": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "transactionId"
		},
		"577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"578": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"580": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"586": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"592": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"598": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"600": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "queryParams"
		},
		"605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.__constructor"
		},
		"687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "client"
		},
		"689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.client"
		},
		"690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.__constructor"
		},
		"716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "client"
		},
		"718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.client"
		},
		"719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"720": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "body"
		},
		"722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"726": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"728": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.__constructor"
		},
		"735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "client"
		},
		"737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.client"
		},
		"738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "queryParams"
		},
		"752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.__constructor"
		},
		"764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "client"
		},
		"766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.client"
		},
		"767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.__constructor"
		},
		"794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "client"
		},
		"796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.client"
		},
		"797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.__constructor"
		},
		"838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "client"
		},
		"840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.client"
		},
		"841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.__constructor"
		},
		"877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "client"
		},
		"879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.client"
		},
		"880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.__constructor"
		},
		"910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "client"
		},
		"912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.client"
		},
		"913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.__constructor"
		},
		"931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "client"
		},
		"933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.client"
		},
		"934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "query"
		},
		"937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "id"
		},
		"941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.__constructor"
		},
		"944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "client"
		},
		"946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.client"
		},
		"947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.__constructor"
		},
		"978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "client"
		},
		"980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.client"
		},
		"981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"1000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"1001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"1002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"1003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"1004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"1005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"1006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.__constructor"
		},
		"1007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"1008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "client"
		},
		"1009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.client"
		},
		"1010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"1011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"1012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"1016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"1017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"1022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"1023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"1026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"1027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"1031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"1032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"1035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"1036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"1040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"1041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"1043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"1047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"1048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"1050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"1052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"1053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"1056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"1058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"1059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"1060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"1063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"1064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"1065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"1066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"1067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.__constructor"
		},
		"1068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"1069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "client"
		},
		"1070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.client"
		},
		"1071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"1072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"1073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "id"
		},
		"1074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"1075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"1076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"1077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"1078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"1079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"1080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"1081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.__constructor"
		},
		"1082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"1083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "client"
		},
		"1084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.client"
		},
		"1085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"1086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"1087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"1091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"1092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"1096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"1097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"1101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"1102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"1103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"1105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"1106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"1109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"1110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"1114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"1115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"1118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"1119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"1124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"1125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"1127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"1130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"1131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"1133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"1137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"1138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"1140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"1143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"1144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"1146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"1148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"1149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"1150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"1151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createCreditLine"
		},
		"1153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createCreditLine"
		},
		"1154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "orderId"
		},
		"1155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"1156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"1157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"1158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"1159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.__constructor"
		},
		"1160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"1161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "client"
		},
		"1162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.client"
		},
		"1163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"1164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"1165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"1167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"1169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"1170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "queryParams"
		},
		"1171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"1173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"1174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"1176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"1178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"1179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"1182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.convertToOrder"
		},
		"1184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.convertToOrder"
		},
		"1185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"1187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addItems"
		},
		"1189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addItems"
		},
		"1190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionItem"
		},
		"1194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionItem"
		},
		"1195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"1197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionItem"
		},
		"1200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionItem"
		},
		"1201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"1203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateItem"
		},
		"1205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateItem"
		},
		"1206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "itemId"
		},
		"1208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addPromotions"
		},
		"1211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addPromotions"
		},
		"1212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removePromotions"
		},
		"1216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removePromotions"
		},
		"1217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addShippingMethod"
		},
		"1221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addShippingMethod"
		},
		"1222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionShippingMethod"
		},
		"1226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionShippingMethod"
		},
		"1227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"1229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionShippingMethod"
		},
		"1232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionShippingMethod"
		},
		"1233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"1235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeShippingMethod"
		},
		"1237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeShippingMethod"
		},
		"1238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "shippingMethodId"
		},
		"1240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateShippingMethod"
		},
		"1242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateShippingMethod"
		},
		"1243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "methodId"
		},
		"1245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"1246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.beginEdit"
		},
		"1248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.beginEdit"
		},
		"1249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.cancelEdit"
		},
		"1252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.cancelEdit"
		},
		"1253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.requestEdit"
		},
		"1256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.requestEdit"
		},
		"1257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.confirmEdit"
		},
		"1260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.confirmEdit"
		},
		"1261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"1262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"1263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"1264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.__constructor"
		},
		"1265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"1266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "client"
		},
		"1267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.client"
		},
		"1268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"1269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"1270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"1271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"1274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"1275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"1279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"1280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"1284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"1285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"1289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"1290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"1292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"1295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"1296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "itemId"
		},
		"1298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"1299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"1302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"1303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"1305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"1306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"1309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"1310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"1311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"1312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"1313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"1314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"1315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.__constructor"
		},
		"1316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"1317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "client"
		},
		"1318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.client"
		},
		"1319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"1320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"1321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"1324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"1325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"1329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"1330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"1334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"1335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"1339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"1340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"1344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"1345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"1350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"1351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"1357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"1358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"1363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"1364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"1369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"1370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"1376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"1377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"1382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"1383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"1388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"1389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"1394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"1395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"1400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"1401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"1406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"1407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"1413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"1414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"1419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"1420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"1425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"1426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"1432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"1433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"1435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"1438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"1439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"1441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"1444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"1445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"1446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"1447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"1448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"1449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.__constructor"
		},
		"1450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"1451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "client"
		},
		"1452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.client"
		},
		"1453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"1454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"1455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"1458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"1459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"1463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"1464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"1468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"1469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"1473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"1474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"1479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"1480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"1486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"1487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"1492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"1493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"1498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"1499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"1505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"1506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"1511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"1512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"1517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"1518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"1524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"1525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"1530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"1531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"1536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"1537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"1543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"1544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"1549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"1550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"1555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"1556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"1562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"1563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"1565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"1568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"1569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"1571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1572": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"1574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"1575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"1576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"1577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"1578": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"1579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.__constructor"
		},
		"1580": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"1581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "client"
		},
		"1582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.client"
		},
		"1583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"1584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"1585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1586": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"1588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"1589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1592": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"1593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"1594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"1598": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"1599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1600": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"1603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"1604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"1609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"1610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"1616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"1617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"1622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"1623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"1628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"1629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"1635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"1636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"1641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"1642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"1647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"1648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"1654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"1655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"1660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"1661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"1666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"1667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"1673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"1674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"1676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"1679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"1680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"1682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"1685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"1686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"1687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"1688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"1689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"1690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.__constructor"
		},
		"1691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"1692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "client"
		},
		"1693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.client"
		},
		"1694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"1695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"1696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"1697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"1698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"1699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"1700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"1701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"1702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"1703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"1704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"1705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"1706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"1707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"1708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"1709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"1710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"1711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"1712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"1713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"1714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"1715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"1716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"1717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"1718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"1719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.__constructor"
		},
		"1720": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"1721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "client"
		},
		"1722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.client"
		},
		"1723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"1724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"1725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "body"
		},
		"1726": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"1727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"1728": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"1729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"1730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"1731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"1732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"1733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"1734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"1735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"1736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"1737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"1738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"1739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"1740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"1741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"1742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.__constructor"
		},
		"1743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"1744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "client"
		},
		"1745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.client"
		},
		"1746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"1747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"1748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"1749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"1750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"1751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"1752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"1753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"1754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"1755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"1756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"1757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"1758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "body"
		},
		"1759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"1760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"1761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"1762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.__constructor"
		},
		"1763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"1764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "client"
		},
		"1765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.client"
		},
		"1766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"1767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"1768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"1769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"1770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"1771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"1772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"1773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"1774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"1775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"1776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"1777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"1778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"1779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"1780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"1781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"1782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"1783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"1784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"1785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"1786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"1787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"1788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"1789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"1790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"1791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.__constructor"
		},
		"1792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"1793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "client"
		},
		"1794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.client"
		},
		"1795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"1796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"1797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"1798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "body"
		},
		"1799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"1800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"1801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"1802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"1803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "queryParams"
		},
		"1804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"1805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"1806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"1807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"1808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"1809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"1810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"1811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"1812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"1813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"1814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"1815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"1816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"1817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"1818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"1819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.__constructor"
		},
		"1820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"1821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "client"
		},
		"1822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.client"
		},
		"1823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"1824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"1825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"1826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"1827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"1828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"1829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "code"
		},
		"1830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"1831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"1832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"1833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.__constructor"
		},
		"1834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"1835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "client"
		},
		"1836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.client"
		},
		"1837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"1838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"1839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"1840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"1841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"1842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"1843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"1844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"1845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"1846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"1847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"1848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"1849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"1850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"1851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"1852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"1853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"1854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"1855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"1856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"1857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"1858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"1859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"1860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"1861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"1862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"1863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.__constructor"
		},
		"1864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"1865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "client"
		},
		"1866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.client"
		},
		"1867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"1868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"1869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "query"
		},
		"1870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "headers"
		},
		"1871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"1872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.__constructor"
		},
		"1873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"1874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "client"
		},
		"1875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.client"
		},
		"1876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"1877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"1878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "query"
		},
		"1879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "headers"
		},
		"1880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"1881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.__constructor"
		},
		"1882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"1883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "client"
		},
		"1884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.client"
		},
		"1885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"1886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"1887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"1888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"1889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"1890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"1891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"1892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"1893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"1894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"1895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"1896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"1897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"1898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"1899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"1900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"1901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.__constructor"
		},
		"1902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"1903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "client"
		},
		"1904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.client"
		},
		"1905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"1906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"1907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "queryParams"
		},
		"1908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"1910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"1911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"1912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"1913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"1915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"1916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"1917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"1919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"1920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"1921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"1923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"1924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"1925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"1926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"1927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"1929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"1930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"1931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"1933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"1934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"1935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"1936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"1937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"1938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.__constructor"
		},
		"1939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"1940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "client"
		},
		"1941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.client"
		},
		"1942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"1943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"1944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "queryParams"
		},
		"1945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"1946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"1947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"1948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "id"
		},
		"1949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"1950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"1951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.__constructor"
		},
		"1952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"1953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "client"
		},
		"1954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.client"
		},
		"1955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"1956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"1957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"1958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"1959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"1960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"1961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"1962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"1963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"1964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"1965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"1966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"1967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"1968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"1969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"1970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"1971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"1972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"1973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"1974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"1975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"1976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"1977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"1978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"1979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"1980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.__constructor"
		},
		"1981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"1982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "client"
		},
		"1983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.client"
		},
		"1984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"1985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"1986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"1987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"1988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"1989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"1990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"1991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"1992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"1993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"1994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"1995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"1996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"1997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"1998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"1999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"2000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"2001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"2002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"2003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"2004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"2005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"2006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"2007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"2008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"2009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"2010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"2011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"2012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"2013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"2014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.__constructor"
		},
		"2015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"2016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "client"
		},
		"2017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.client"
		},
		"2018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"2019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"2020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"2022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"2024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"2025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"2026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"2028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"2029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"2030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"2032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"2033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"2035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"2037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"2038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"2041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"2042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"2045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"2047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"2048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"2051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"2053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"2054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"2057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"2059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"2060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"2061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"2063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"2065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"2066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "promotionType"
		},
		"2068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"2070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"2071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"2072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleValue"
		},
		"2073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"2074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"2075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"2076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.__constructor"
		},
		"2077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"2078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "client"
		},
		"2079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.client"
		},
		"2080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"2081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"2082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"2083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"2084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"2086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"2087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"2088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"2090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"2091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"2092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"2094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"2095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"2096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"2097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"2099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"2100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"2101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"2103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"2104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"2105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"2106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"2107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin"
		},
		"2108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.__constructor"
		},
		"2109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin"
		},
		"2110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "client"
		},
		"2111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.client"
		},
		"2112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.list"
		},
		"2113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.list"
		},
		"2114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "headers"
		},
		"2115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"2116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.__constructor"
		},
		"2117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"2118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "config"
		},
		"2119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch_"
		},
		"2120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.config"
		},
		"2121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.logger"
		},
		"2122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.DEFAULT_JWT_STORAGE_KEY"
		},
		"2123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.token"
		},
		"2124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"2125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"2126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "T"
		},
		"2127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"2128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"2129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"2130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"2131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"2132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"2133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"2134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"2135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"2136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"2137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"2138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"2139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"2140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"2141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"2142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"2143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"2144": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"2145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"2146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"2147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"2148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"2149": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"2150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"2151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.x-publishable-api-key"
		},
		"2152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"2153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"2154": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"2155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"2156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"2157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"2158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"2159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"2160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"2161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"2162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"2163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"2164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object"
		},
		"2165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageMethod"
		},
		"2166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageKey"
		},
		"2167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"2168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"2169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "message"
		},
		"2170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientHeaders"
		},
		"2171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.tags"
		},
		"2173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Config"
		},
		"2174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.baseUrl"
		},
		"2176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.globalHeaders"
		},
		"2177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.publishableKey"
		},
		"2178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.apiKey"
		},
		"2179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.auth"
		},
		"2180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.type"
		},
		"2182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageKey"
		},
		"2183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageMethod"
		},
		"2184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.fetchCredentials"
		},
		"2185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.storage"
		},
		"2186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.logger"
		},
		"2187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"2188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientFetch"
		},
		"2189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "input"
		},
		"2192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "init"
		},
		"2193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Logger"
		},
		"2194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.error"
		},
		"2196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"2199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.warn"
		},
		"2200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"2203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.info"
		},
		"2204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"2207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"2208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"2211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchArgs"
		},
		"2212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.headers"
		},
		"2215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.body"
		},
		"2216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse"
		},
		"2217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.stream"
		},
		"2218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.abort"
		},
		"2219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"2221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage"
		},
		"2222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"2223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"2224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"2225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"2226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"2227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"2228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "value"
		},
		"2229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"2230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"2231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"2232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchInput"
		},
		"2233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage"
		},
		"2234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.comment"
		},
		"2235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.event"
		},
		"2236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.data"
		},
		"2237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.id"
		},
		"2238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.retry"
		},
		"2239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Awaitable"
		},
		"2240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "T"
		},
		"2241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchParams"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"2": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"3": "../../../../packages/core/js-sdk/src/store/index.ts"
		},
		"reflections": {
			"1": 1,
			"2": 49,
			"3": 94
		}
	}
}
