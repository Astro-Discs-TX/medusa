{
	"id": 0,
	"name": "core-flows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 157,
			"name": "batchLinkProductsToCollectionStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "batch-link-products-to-collection"
			},
			"defaultValue": "\"batch-link-products-to-collection\""
		},
		{
			"id": 158,
			"name": "batchLinkProductsToCollectionStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 161,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 162,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						161,
						162
					]
				}
			],
			"signatures": [
				{
					"id": 159,
					"name": "batchLinkProductsToCollectionStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 160,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "LinkWorkflowInput"
										},
										"name": "LinkWorkflowInput",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
													"qualifiedName": "LinkWorkflowInput"
												},
												"name": "LinkWorkflowInput",
												"package": "@medusajs/types"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 127,
			"name": "createCollectionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-collections"
			},
			"defaultValue": "\"create-collections\""
		},
		{
			"id": 128,
			"name": "createCollectionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 137,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 138,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						137,
						138
					]
				}
			],
			"signatures": [
				{
					"id": 129,
					"name": "createCollectionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 130,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCollectionDTO"
											},
											"name": "CreateProductCollectionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductCollectionDTO"
													},
													"name": "CreateProductCollectionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductCollectionDTO"
													},
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductCollectionDTO"
									},
									"name": "ProductCollectionDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 131,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 132,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 133,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 134,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 135,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 136,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						136
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductCollectionDTO"
																	},
																	"name": "ProductCollectionDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												132
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 67,
			"name": "createProductOptionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-options"
			},
			"defaultValue": "\"create-product-options\""
		},
		{
			"id": 68,
			"name": "createProductOptionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 77,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 78,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						77,
						78
					]
				}
			],
			"signatures": [
				{
					"id": 69,
					"name": "createProductOptionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 70,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductOptionDTO"
											},
											"name": "CreateProductOptionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductOptionDTO"
													},
													"name": "CreateProductOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductOptionDTO"
													},
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductOptionDTO"
									},
									"name": "ProductOptionDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 71,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 72,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 73,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 74,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 75,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 76,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						76
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductOptionDTO"
																	},
																	"name": "ProductOptionDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												72
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 193,
			"name": "createProductTagsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-tags"
			},
			"defaultValue": "\"create-product-tags\""
		},
		{
			"id": 194,
			"name": "createProductTagsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 203,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 204,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						203,
						204
					]
				}
			],
			"signatures": [
				{
					"id": 195,
					"name": "createProductTagsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 196,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductTagDTO"
											},
											"name": "CreateProductTagDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductTagDTO"
													},
													"name": "CreateProductTagDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTagDTO"
													},
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductTagDTO"
									},
									"name": "ProductTagDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 197,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 198,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 199,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 200,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 201,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 202,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						202
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTagDTO"
																	},
																	"name": "ProductTagDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												198
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 163,
			"name": "createProductTypesStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-types"
			},
			"defaultValue": "\"create-product-types\""
		},
		{
			"id": 164,
			"name": "createProductTypesStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 173,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 174,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						173,
						174
					]
				}
			],
			"signatures": [
				{
					"id": 165,
					"name": "createProductTypesStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 166,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductTypeDTO"
											},
											"name": "CreateProductTypeDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductTypeDTO"
													},
													"name": "CreateProductTypeDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTypeDTO"
													},
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductTypeDTO"
									},
									"name": "ProductTypeDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 167,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 168,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 169,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 170,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 171,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 172,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						172
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTypeDTO"
																	},
																	"name": "ProductTypeDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												168
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 97,
			"name": "createProductVariantsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-variants"
			},
			"defaultValue": "\"create-product-variants\""
		},
		{
			"id": 98,
			"name": "createProductVariantsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 107,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 108,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						107,
						108
					]
				}
			],
			"signatures": [
				{
					"id": 99,
					"name": "createProductVariantsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 100,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductVariantDTO"
											},
											"name": "CreateProductVariantDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductVariantDTO"
													},
													"name": "CreateProductVariantDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductVariantDTO"
													},
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductVariantDTO"
									},
									"name": "ProductVariantDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 101,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 102,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 103,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 104,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 105,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 106,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						106
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductVariantDTO"
																	},
																	"name": "ProductVariantDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												102
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1,
			"name": "createProductsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-products"
			},
			"defaultValue": "\"create-products\""
		},
		{
			"id": 2,
			"name": "createProductsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 11,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11,
						12
					]
				}
			],
			"signatures": [
				{
					"id": 3,
					"name": "createProductsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductDTO"
											},
											"name": "CreateProductDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "CreateProductDTO"
													},
													"name": "CreateProductDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductDTO"
													},
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductDTO"
									},
									"name": "ProductDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 7,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 8,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 9,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 10,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						10
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												6
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 61,
			"name": "createVariantPricingLinkStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-variant-pricing-link"
			},
			"defaultValue": "\"create-variant-pricing-link\""
		},
		{
			"id": 62,
			"name": "createVariantPricingLinkStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 65,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 66,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						65,
						66
					]
				}
			],
			"signatures": [
				{
					"id": 63,
					"name": "createVariantPricingLinkStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 64,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-variant-pricing-link.ts",
											"qualifiedName": "StepInput"
										},
										"name": "StepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-variant-pricing-link.ts",
													"qualifiedName": "StepInput"
												},
												"name": "StepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 151,
			"name": "deleteCollectionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-collections"
			},
			"defaultValue": "\"delete-collections\""
		},
		{
			"id": 152,
			"name": "deleteCollectionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 155,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 156,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						155,
						156
					]
				}
			],
			"signatures": [
				{
					"id": 153,
					"name": "deleteCollectionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 154,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 91,
			"name": "deleteProductOptionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-options"
			},
			"defaultValue": "\"delete-product-options\""
		},
		{
			"id": 92,
			"name": "deleteProductOptionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 95,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 96,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						95,
						96
					]
				}
			],
			"signatures": [
				{
					"id": 93,
					"name": "deleteProductOptionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 94,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 217,
			"name": "deleteProductTagsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-tags"
			},
			"defaultValue": "\"delete-product-tags\""
		},
		{
			"id": 218,
			"name": "deleteProductTagsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 221,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 222,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						221,
						222
					]
				}
			],
			"signatures": [
				{
					"id": 219,
					"name": "deleteProductTagsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 220,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 187,
			"name": "deleteProductTypesStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-types"
			},
			"defaultValue": "\"delete-product-types\""
		},
		{
			"id": 188,
			"name": "deleteProductTypesStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 191,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 192,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						191,
						192
					]
				}
			],
			"signatures": [
				{
					"id": 189,
					"name": "deleteProductTypesStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 190,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 121,
			"name": "deleteProductVariantsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-variants"
			},
			"defaultValue": "\"delete-product-variants\""
		},
		{
			"id": 122,
			"name": "deleteProductVariantsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 125,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 126,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						125,
						126
					]
				}
			],
			"signatures": [
				{
					"id": 123,
					"name": "deleteProductVariantsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 124,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 31,
			"name": "deleteProductsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-products"
			},
			"defaultValue": "\"delete-products\""
		},
		{
			"id": 32,
			"name": "deleteProductsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 35,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35,
						36
					]
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "deleteProductsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 34,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 223,
			"name": "generateProductCsvStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "generate-product-csv"
			},
			"defaultValue": "\"generate-product-csv\""
		},
		{
			"id": 224,
			"name": "generateProductCsvStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 248,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 249,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						248,
						249
					]
				}
			],
			"signatures": [
				{
					"id": 225,
					"name": "generateProductCsvStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 226,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
												"qualifiedName": "AdminProduct"
											},
											"name": "AdminProduct",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
														"qualifiedName": "AdminProduct"
													},
													"name": "AdminProduct",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 227,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 228,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"defaultValue": "file.id"
										},
										{
											"id": 229,
											"name": "filename",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												228,
												229
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 230,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 231,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "file.id"
										},
										{
											"id": 232,
											"name": "filename",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												231,
												232
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 233,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 234,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "file.id"
												},
												{
													"id": 235,
													"name": "filename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														234,
														235
													]
												}
											]
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 236,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 237,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 238,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 239,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 240,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 241,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						241
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 242,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 243,
																			"name": "id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			},
																			"defaultValue": "file.id"
																		},
																		{
																			"id": 244,
																			"name": "filename",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				243,
																				244
																			]
																		}
																	]
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												237
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 245,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 246,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "file.id"
												},
												{
													"id": 247,
													"name": "filename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														246,
														247
													]
												}
											]
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 49,
			"name": "getAllProductsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "get-all-products"
			},
			"defaultValue": "\"get-all-products\""
		},
		{
			"id": 50,
			"name": "getAllProductsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 59,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59,
						60
					]
				}
			],
			"signatures": [
				{
					"id": 51,
					"name": "getAllProductsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 52,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-all-products.ts",
											"qualifiedName": "StepInput"
										},
										"name": "StepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-all-products.ts",
													"qualifiedName": "StepInput"
												},
												"name": "StepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 53,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 54,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 55,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 56,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 57,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 58,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						58
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												54
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 37,
			"name": "getProductsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "get-products"
			},
			"defaultValue": "\"get-products\""
		},
		{
			"id": 38,
			"name": "getProductsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 47,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 48,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						47,
						48
					]
				}
			],
			"signatures": [
				{
					"id": 39,
					"name": "getProductsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-products.ts",
											"qualifiedName": "StepInput"
										},
										"name": "StepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-products.ts",
													"qualifiedName": "StepInput"
												},
												"name": "StepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductDTO"
													},
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductDTO"
									},
									"name": "ProductDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 43,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 44,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 45,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 46,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						46
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												42
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 262,
			"name": "groupProductsForBatchStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "group-products-for-batch"
			},
			"defaultValue": "\"group-products-for-batch\""
		},
		{
			"id": 263,
			"name": "groupProductsForBatchStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 303,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 304,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						303,
						304
					]
				}
			],
			"signatures": [
				{
					"id": 264,
					"name": "groupProductsForBatchStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 265,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intersection",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
														"qualifiedName": "AdminCreateProduct"
													},
													"name": "AdminCreateProduct",
													"package": "@medusajs/types"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 266,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 267,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	267
																]
															}
														]
													}
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intersection",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																"qualifiedName": "AdminCreateProduct"
															},
															"name": "AdminCreateProduct",
															"package": "@medusajs/types"
														},
														{
															"type": "reflection",
															"declaration": {
																"id": 268,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 269,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			269
																		]
																	}
																]
															}
														}
													]
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 270,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 271,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																"qualifiedName": "AdminCreateProduct"
															},
															"name": "AdminCreateProduct",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																		"qualifiedName": "AdminCreateProduct"
																	},
																	"name": "AdminCreateProduct",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"defaultValue": "toCreate"
										},
										{
											"id": 272,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																		"qualifiedName": "AdminUpdateProduct"
																	},
																	"name": "AdminUpdateProduct",
																	"package": "@medusajs/types"
																},
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 273,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 274,
																				"name": "id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					274
																				]
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intersection",
																	"types": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																				"qualifiedName": "AdminUpdateProduct"
																			},
																			"name": "AdminUpdateProduct",
																			"package": "@medusajs/types"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 275,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 276,
																						"name": "id",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							276
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"defaultValue": "toUpdate"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												271,
												272
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 277,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 278,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
														"qualifiedName": "AdminCreateProduct"
													},
													"name": "AdminCreateProduct",
													"package": "@medusajs/types"
												}
											},
											"defaultValue": "toCreate"
										},
										{
											"id": 279,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intersection",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																"qualifiedName": "AdminUpdateProduct"
															},
															"name": "AdminUpdateProduct",
															"package": "@medusajs/types"
														},
														{
															"type": "reflection",
															"declaration": {
																"id": 280,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 281,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			281
																		]
																	}
																]
															}
														}
													]
												}
											},
											"defaultValue": "toUpdate"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												278,
												279
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 282,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 283,
													"name": "create",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																"qualifiedName": "AdminCreateProduct"
															},
															"name": "AdminCreateProduct",
															"package": "@medusajs/types"
														}
													},
													"defaultValue": "toCreate"
												},
												{
													"id": 284,
													"name": "update",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																		"qualifiedName": "AdminUpdateProduct"
																	},
																	"name": "AdminUpdateProduct",
																	"package": "@medusajs/types"
																},
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 285,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 286,
																				"name": "id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					286
																				]
																			}
																		]
																	}
																}
															]
														}
													},
													"defaultValue": "toUpdate"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														283,
														284
													]
												}
											]
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 287,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 288,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 289,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 290,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 291,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 292,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						292
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 293,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 294,
																			"name": "create",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																						"qualifiedName": "AdminCreateProduct"
																					},
																					"name": "AdminCreateProduct",
																					"package": "@medusajs/types"
																				}
																			},
																			"defaultValue": "toCreate"
																		},
																		{
																			"id": 295,
																			"name": "update",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																								"qualifiedName": "AdminUpdateProduct"
																							},
																							"name": "AdminUpdateProduct",
																							"package": "@medusajs/types"
																						},
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 296,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 297,
																										"name": "id",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {},
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											297
																										]
																									}
																								]
																							}
																						}
																					]
																				}
																			},
																			"defaultValue": "toUpdate"
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				294,
																				295
																			]
																		}
																	]
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												288
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 298,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 299,
													"name": "create",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																"qualifiedName": "AdminCreateProduct"
															},
															"name": "AdminCreateProduct",
															"package": "@medusajs/types"
														}
													},
													"defaultValue": "toCreate"
												},
												{
													"id": 300,
													"name": "update",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																		"qualifiedName": "AdminUpdateProduct"
																	},
																	"name": "AdminUpdateProduct",
																	"package": "@medusajs/types"
																},
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 301,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 302,
																				"name": "id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					302
																				]
																			}
																		]
																	}
																}
															]
														}
													},
													"defaultValue": "toUpdate"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														299,
														300
													]
												}
											]
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 250,
			"name": "parseProductCsvStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "parse-product-csv"
			},
			"defaultValue": "\"parse-product-csv\""
		},
		{
			"id": 251,
			"name": "parseProductCsvStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 260,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 261,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						260,
						261
					]
				}
			],
			"signatures": [
				{
					"id": 252,
					"name": "parseProductCsvStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 253,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
												"qualifiedName": "AdminCreateProduct"
											},
											"name": "AdminCreateProduct",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
														"qualifiedName": "AdminCreateProduct"
													},
													"name": "AdminCreateProduct",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
										"qualifiedName": "AdminCreateProduct"
									},
									"name": "AdminCreateProduct",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
												"qualifiedName": "AdminCreateProduct"
											},
											"name": "AdminCreateProduct",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 254,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 255,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 256,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 257,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 258,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 259,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						259
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
																		"qualifiedName": "AdminCreateProduct"
																	},
																	"name": "AdminCreateProduct",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												255
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
												"qualifiedName": "AdminCreateProduct"
											},
											"name": "AdminCreateProduct",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 139,
			"name": "updateCollectionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-collections"
			},
			"defaultValue": "\"update-collections\""
		},
		{
			"id": 140,
			"name": "updateCollectionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 149,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 150,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						149,
						150
					]
				}
			],
			"signatures": [
				{
					"id": 141,
					"name": "updateCollectionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 142,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-collections.ts",
											"qualifiedName": "UpdateCollectionsStepInput"
										},
										"name": "UpdateCollectionsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-collections.ts",
													"qualifiedName": "UpdateCollectionsStepInput"
												},
												"name": "UpdateCollectionsStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductCollectionDTO"
													},
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductCollectionDTO"
									},
									"name": "ProductCollectionDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 143,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 144,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 145,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 146,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 147,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 148,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						148
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductCollectionDTO"
																	},
																	"name": "ProductCollectionDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												144
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 79,
			"name": "updateProductOptionsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-options"
			},
			"defaultValue": "\"update-product-options\""
		},
		{
			"id": 80,
			"name": "updateProductOptionsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 89,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 90,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						89,
						90
					]
				}
			],
			"signatures": [
				{
					"id": 81,
					"name": "updateProductOptionsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 82,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-options.ts",
											"qualifiedName": "UpdateProductOptionsStepInput"
										},
										"name": "UpdateProductOptionsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-options.ts",
													"qualifiedName": "UpdateProductOptionsStepInput"
												},
												"name": "UpdateProductOptionsStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductOptionDTO"
													},
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductOptionDTO"
									},
									"name": "ProductOptionDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 83,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 84,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 85,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 86,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 87,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 88,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						88
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductOptionDTO"
																	},
																	"name": "ProductOptionDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												84
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 205,
			"name": "updateProductTagsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-tags"
			},
			"defaultValue": "\"update-product-tags\""
		},
		{
			"id": 206,
			"name": "updateProductTagsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 215,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 216,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						215,
						216
					]
				}
			],
			"signatures": [
				{
					"id": 207,
					"name": "updateProductTagsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 208,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-tags.ts",
											"qualifiedName": "UpdateProductTagsStepInput"
										},
										"name": "UpdateProductTagsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-tags.ts",
													"qualifiedName": "UpdateProductTagsStepInput"
												},
												"name": "UpdateProductTagsStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTagDTO"
													},
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductTagDTO"
									},
									"name": "ProductTagDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 209,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 210,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 211,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 212,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 213,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 214,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						214
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTagDTO"
																	},
																	"name": "ProductTagDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												210
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 175,
			"name": "updateProductTypesStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-types"
			},
			"defaultValue": "\"update-product-types\""
		},
		{
			"id": 176,
			"name": "updateProductTypesStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 185,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 186,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						185,
						186
					]
				}
			],
			"signatures": [
				{
					"id": 177,
					"name": "updateProductTypesStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 178,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-types.ts",
											"qualifiedName": "UpdateProductTypesStepInput"
										},
										"name": "UpdateProductTypesStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-types.ts",
													"qualifiedName": "UpdateProductTypesStepInput"
												},
												"name": "UpdateProductTypesStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTypeDTO"
													},
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductTypeDTO"
									},
									"name": "ProductTypeDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 179,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 180,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 181,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 182,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 183,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 184,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						184
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTypeDTO"
																	},
																	"name": "ProductTypeDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												180
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 109,
			"name": "updateProductVariantsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-variants"
			},
			"defaultValue": "\"update-product-variants\""
		},
		{
			"id": 110,
			"name": "updateProductVariantsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 119,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 120,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						119,
						120
					]
				}
			],
			"signatures": [
				{
					"id": 111,
					"name": "updateProductVariantsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 112,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-variants.ts",
											"qualifiedName": "UpdateProductVariantsStepInput"
										},
										"name": "UpdateProductVariantsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-variants.ts",
													"qualifiedName": "UpdateProductVariantsStepInput"
												},
												"name": "UpdateProductVariantsStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductVariantDTO"
													},
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductVariantDTO"
									},
									"name": "ProductVariantDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 113,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 114,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 115,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 116,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 117,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 118,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						118
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductVariantDTO"
																	},
																	"name": "ProductVariantDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												114
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductVariantDTO"
											},
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 13,
			"name": "UpdateProductsStepInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 14,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductProps"
										},
										"name": "ProductTypes.FilterableProductProps",
										"package": "@medusajs/types",
										"qualifiedName": "FilterableProductProps"
									}
								},
								{
									"id": 16,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductDTO"
										},
										"name": "ProductTypes.UpdateProductDTO",
										"package": "@medusajs/types",
										"qualifiedName": "UpdateProductDTO"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15,
										16
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "UpsertProductDTO"
											},
											"name": "ProductTypes.UpsertProductDTO",
											"package": "@medusajs/types",
											"qualifiedName": "UpsertProductDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19,
			"name": "updateProductsStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-products"
			},
			"defaultValue": "\"update-products\""
		},
		{
			"id": 20,
			"name": "updateProductsStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 29,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						29,
						30
					]
				}
			],
			"signatures": [
				{
					"id": 21,
					"name": "updateProductsStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 13,
										"name": "UpdateProductsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 13,
												"name": "UpdateProductsStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductDTO"
													},
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
										"qualifiedName": "ProductDTO"
									},
									"name": "ProductDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 23,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 24,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 25,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 26,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 27,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 28,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						28
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												24
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 305,
			"name": "waitConfirmationProductImportStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "wait-confirmation-product-import"
			},
			"defaultValue": "\"wait-confirmation-product-import\""
		},
		{
			"id": 306,
			"name": "waitConfirmationProductImportStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 314,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 315,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						314,
						315
					]
				}
			],
			"signatures": [
				{
					"id": 307,
					"name": "waitConfirmationProductImportStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 308,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 309,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 310,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 311,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 312,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 313,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						313
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												309
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 316,
			"name": "batchLinkProductsToCollectionWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "batch-link-products-to-collection"
			},
			"defaultValue": "\"batch-link-products-to-collection\""
		},
		{
			"id": 317,
			"name": "batchLinkProductsToCollectionWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 325,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 326,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 327,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 328,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 329,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 330,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "LinkWorkflowInput"
																		},
																		"name": "LinkWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																					"qualifiedName": "LinkWorkflowInput"
																				},
																				"name": "LinkWorkflowInput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																330
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 331,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 332,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 333,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 334,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 335,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 336,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										336
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																332
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 337,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 338,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 339,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 340,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 341,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 342,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "LinkWorkflowInput"
																		},
																		"name": "LinkWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "unknown"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 343,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 344,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 345,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 346,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 347,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 348,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 349,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 350,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 351,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						325,
						337,
						343,
						346,
						350
					]
				}
			],
			"signatures": [
				{
					"id": 318,
					"name": "batchLinkProductsToCollectionWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 319,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 320,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 321,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 322,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 323,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 324,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															323,
															324
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "LinkWorkflowInput"
										},
										"name": "LinkWorkflowInput",
										"package": "@medusajs/types"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 352,
			"name": "batchProductVariantsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "batch-product-variants"
			},
			"defaultValue": "\"batch-product-variants\""
		},
		{
			"id": 353,
			"name": "batchProductVariantsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 361,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 362,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 363,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 364,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 365,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 366,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "BatchWorkflowInput"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "CreateProductVariantWorkflowInputDTO"
																				},
																				"name": "CreateProductVariantWorkflowInputDTO",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
																				},
																				"name": "UpdateProductVariantWorkflowInputDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "BatchWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																					"qualifiedName": "BatchWorkflowInput"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																							"qualifiedName": "CreateProductVariantWorkflowInputDTO"
																						},
																						"name": "CreateProductVariantWorkflowInputDTO",
																						"package": "@medusajs/types"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																							"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
																						},
																						"name": "UpdateProductVariantWorkflowInputDTO",
																						"package": "@medusajs/types"
																					}
																				],
																				"name": "BatchWorkflowInput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																366
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 367,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 368,
															"name": "created",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductVariantDTO"
																			},
																			"name": "ProductVariantDTO",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductVariantDTO"
																					},
																					"name": "ProductVariantDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														{
															"id": 369,
															"name": "updated",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductVariantDTO"
																			},
																			"name": "ProductVariantDTO",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductVariantDTO"
																					},
																					"name": "ProductVariantDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														{
															"id": 370,
															"name": "deleted",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 371,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 372,
																					"name": "ids",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				},
																				{
																					"id": 373,
																					"name": "object",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 374,
																					"name": "deleted",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						372,
																						373,
																						374
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 375,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 376,
																							"name": "ids",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "array",
																								"elementType": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							}
																						},
																						{
																							"id": 377,
																							"name": "object",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						},
																						{
																							"id": 378,
																							"name": "deleted",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								376,
																								377,
																								378
																							]
																						}
																					]
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																368,
																369,
																370
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
													"qualifiedName": "BatchWorkflowOutput"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
															"qualifiedName": "ProductVariantDTO"
														},
														"name": "ProductVariantDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "BatchWorkflowOutput",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
															"qualifiedName": "BatchWorkflowOutput"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductVariantDTO"
																},
																"name": "ProductVariantDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "BatchWorkflowOutput",
														"package": "@medusajs/types"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 379,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 380,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 381,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 382,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 383,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 384,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										384
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																					"qualifiedName": "BatchWorkflowOutput"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductVariantDTO"
																						},
																						"name": "ProductVariantDTO",
																						"package": "@medusajs/types"
																					}
																				],
																				"name": "BatchWorkflowOutput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																380
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
															"qualifiedName": "BatchWorkflowOutput"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductVariantDTO"
																},
																"name": "ProductVariantDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "BatchWorkflowOutput",
														"package": "@medusajs/types"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 385,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 386,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 387,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 388,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 389,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 390,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "BatchWorkflowInput"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "CreateProductVariantWorkflowInputDTO"
																				},
																				"name": "CreateProductVariantWorkflowInputDTO",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
																				},
																				"name": "UpdateProductVariantWorkflowInputDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "BatchWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																"qualifiedName": "BatchWorkflowOutput"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductVariantDTO"
																	},
																	"name": "ProductVariantDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "BatchWorkflowOutput",
															"package": "@medusajs/types"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 391,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 392,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 393,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 394,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 395,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 396,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 397,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 398,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						361,
						385,
						391,
						394,
						398
					]
				}
			],
			"signatures": [
				{
					"id": 354,
					"name": "batchProductVariantsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 355,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 356,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 357,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 358,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 359,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 360,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															359,
															360
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "BatchWorkflowInput"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
													"qualifiedName": "CreateProductVariantWorkflowInputDTO"
												},
												"name": "CreateProductVariantWorkflowInputDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
													"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
												},
												"name": "UpdateProductVariantWorkflowInputDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "BatchWorkflowInput",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "BatchWorkflowOutput"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
													"qualifiedName": "ProductVariantDTO"
												},
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "BatchWorkflowOutput",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 446,
			"name": "batchLinkProductsToCategoryWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "batch-link-products-to-category"
			},
			"defaultValue": "\"batch-link-products-to-category\""
		},
		{
			"id": 447,
			"name": "batchLinkProductsToCategoryWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 455,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 456,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 457,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 458,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 459,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 460,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
																			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
																		},
																		"name": "BatchUpdateProductsOnCategoryWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
																					"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
																				},
																				"name": "BatchUpdateProductsOnCategoryWorkflowInput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																460
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 461,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 462,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 463,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 464,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 465,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 466,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										466
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																462
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 467,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 468,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 469,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 470,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 471,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 472,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
																			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
																		},
																		"name": "BatchUpdateProductsOnCategoryWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "unknown"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 473,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 474,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 475,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 476,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 477,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 478,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 479,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 480,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 481,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						455,
						467,
						473,
						476,
						480
					]
				}
			],
			"signatures": [
				{
					"id": 448,
					"name": "batchLinkProductsToCategoryWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 449,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 450,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 451,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 452,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 453,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 454,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															453,
															454
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
											"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
										},
										"name": "BatchUpdateProductsOnCategoryWorkflowInput",
										"package": "@medusajs/types"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 399,
			"name": "batchProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "batch-products"
			},
			"defaultValue": "\"batch-products\""
		},
		{
			"id": 400,
			"name": "batchProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 408,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 409,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 410,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 411,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 412,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 413,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "BatchWorkflowInput"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "CreateProductWorkflowInputDTO"
																				},
																				"name": "CreateProductWorkflowInputDTO",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "UpdateProductWorkflowInputDTO"
																				},
																				"name": "UpdateProductWorkflowInputDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "BatchWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																					"qualifiedName": "BatchWorkflowInput"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																							"qualifiedName": "CreateProductWorkflowInputDTO"
																						},
																						"name": "CreateProductWorkflowInputDTO",
																						"package": "@medusajs/types"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																							"qualifiedName": "UpdateProductWorkflowInputDTO"
																						},
																						"name": "UpdateProductWorkflowInputDTO",
																						"package": "@medusajs/types"
																					}
																				],
																				"name": "BatchWorkflowInput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																413
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 414,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 415,
															"name": "created",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductDTO"
																			},
																			"name": "ProductDTO",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														{
															"id": 416,
															"name": "updated",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductDTO"
																			},
																			"name": "ProductDTO",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														{
															"id": 417,
															"name": "deleted",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 418,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 419,
																					"name": "ids",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				},
																				{
																					"id": 420,
																					"name": "object",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 421,
																					"name": "deleted",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						419,
																						420,
																						421
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 422,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 423,
																							"name": "ids",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "array",
																								"elementType": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							}
																						},
																						{
																							"id": 424,
																							"name": "object",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						},
																						{
																							"id": 425,
																							"name": "deleted",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								423,
																								424,
																								425
																							]
																						}
																					]
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																415,
																416,
																417
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
													"qualifiedName": "BatchWorkflowOutput"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
															"qualifiedName": "ProductDTO"
														},
														"name": "ProductDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "BatchWorkflowOutput",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
															"qualifiedName": "BatchWorkflowOutput"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductDTO"
																},
																"name": "ProductDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "BatchWorkflowOutput",
														"package": "@medusajs/types"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 426,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 427,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 428,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 429,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 430,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 431,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										431
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																					"qualifiedName": "BatchWorkflowOutput"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductDTO"
																						},
																						"name": "ProductDTO",
																						"package": "@medusajs/types"
																					}
																				],
																				"name": "BatchWorkflowOutput",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																427
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
															"qualifiedName": "BatchWorkflowOutput"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductDTO"
																},
																"name": "ProductDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "BatchWorkflowOutput",
														"package": "@medusajs/types"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 432,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 433,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 434,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 435,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 436,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 437,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																			"qualifiedName": "BatchWorkflowInput"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "CreateProductWorkflowInputDTO"
																				},
																				"name": "CreateProductWorkflowInputDTO",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
																					"qualifiedName": "UpdateProductWorkflowInputDTO"
																				},
																				"name": "UpdateProductWorkflowInputDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "BatchWorkflowInput",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
																"qualifiedName": "BatchWorkflowOutput"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "BatchWorkflowOutput",
															"package": "@medusajs/types"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 438,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 439,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 440,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 441,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 442,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 443,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 444,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 445,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						408,
						432,
						438,
						441,
						445
					]
				}
			],
			"signatures": [
				{
					"id": 401,
					"name": "batchProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 402,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 403,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 404,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 405,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 406,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 407,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															406,
															407
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "BatchWorkflowInput"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
													"qualifiedName": "CreateProductWorkflowInputDTO"
												},
												"name": "CreateProductWorkflowInputDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
													"qualifiedName": "UpdateProductWorkflowInputDTO"
												},
												"name": "UpdateProductWorkflowInputDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "BatchWorkflowInput",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
											"qualifiedName": "BatchWorkflowOutput"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
													"qualifiedName": "ProductDTO"
												},
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "BatchWorkflowOutput",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 482,
			"name": "createCollectionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-collections"
			},
			"defaultValue": "\"create-collections\""
		},
		{
			"id": 483,
			"name": "createCollectionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 491,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 493,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 494,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 495,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 496,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																496
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductCollectionDTO"
																	},
																	"name": "ProductCollectionDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductCollectionDTO"
													},
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 497,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 498,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 499,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 500,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 501,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 502,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										502
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductCollectionDTO"
																					},
																					"name": "ProductCollectionDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																498
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 503,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 504,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 505,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 506,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 507,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 508,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductCollectionDTO"
																},
																"name": "ProductCollectionDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 509,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 510,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 511,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 512,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 513,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 514,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 515,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 516,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 517,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 518,
									"name": "collectionsCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 519,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 520,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 521,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 522,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 523,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 524,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 525,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 526,
																									"name": "collections",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductCollectionDTO"
																																	},
																																	"name": "ProductCollectionDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductCollectionDTO"
																													},
																													"name": "ProductCollectionDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 527,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 528,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 529,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 530,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 531,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 532,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										532
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductCollectionDTO"
																																					},
																																					"name": "ProductCollectionDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																528
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									}
																								},
																								{
																									"id": 533,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										526,
																										533
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										518
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						491,
						503,
						509,
						512,
						516
					]
				}
			],
			"signatures": [
				{
					"id": 484,
					"name": "createCollectionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 485,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 486,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 487,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 488,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 489,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 490,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															489,
															490
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 534,
			"name": "createProductOptionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-options"
			},
			"defaultValue": "\"create-product-options\""
		},
		{
			"id": 535,
			"name": "createProductOptionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 543,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 544,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 545,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 546,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 547,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 548,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																548
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductOptionDTO"
																	},
																	"name": "ProductOptionDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductOptionDTO"
													},
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 549,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 550,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 551,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 552,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 553,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 554,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										554
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductOptionDTO"
																					},
																					"name": "ProductOptionDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																550
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 555,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 556,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 557,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 558,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 559,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 560,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductOptionDTO"
																},
																"name": "ProductOptionDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 561,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 562,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 563,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 564,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 565,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 566,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 567,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 568,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 569,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 570,
									"name": "productOptionsCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 571,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 572,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 573,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 574,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 575,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 576,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 577,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 578,
																									"name": "product_options",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductOptionDTO"
																																	},
																																	"name": "ProductOptionDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductOptionDTO"
																													},
																													"name": "ProductOptionDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 579,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 580,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 581,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 582,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 583,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 584,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										584
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductOptionDTO"
																																					},
																																					"name": "ProductOptionDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																580
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "productOptions"
																								},
																								{
																									"id": 585,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										578,
																										585
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										570
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						543,
						555,
						561,
						564,
						568
					]
				}
			],
			"signatures": [
				{
					"id": 536,
					"name": "createProductOptionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 537,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 538,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 539,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 540,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 541,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 542,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															541,
															542
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 638,
			"name": "createProductTagsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-tags"
			},
			"defaultValue": "\"create-product-tags\""
		},
		{
			"id": 639,
			"name": "createProductTagsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 647,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 648,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 649,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 650,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 651,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 652,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																652
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTagDTO"
																	},
																	"name": "ProductTagDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTagDTO"
													},
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 653,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 654,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 655,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 656,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 657,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 658,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										658
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductTagDTO"
																					},
																					"name": "ProductTagDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																654
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 659,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 660,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 661,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 662,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 663,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 664,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductTagDTO"
																},
																"name": "ProductTagDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 665,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 666,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 667,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 668,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 669,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 670,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 671,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 672,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 673,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 674,
									"name": "productTagsCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 675,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 676,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 677,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 678,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 679,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 680,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 681,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 682,
																									"name": "product_tags",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductTagDTO"
																																	},
																																	"name": "ProductTagDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductTagDTO"
																													},
																													"name": "ProductTagDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 683,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 684,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 685,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 686,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 687,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 688,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										688
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductTagDTO"
																																					},
																																					"name": "ProductTagDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																684
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "productTags"
																								},
																								{
																									"id": 689,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										682,
																										689
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										674
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						647,
						659,
						665,
						668,
						672
					]
				}
			],
			"signatures": [
				{
					"id": 640,
					"name": "createProductTagsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 641,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 642,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 643,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 644,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 645,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 646,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															645,
															646
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 586,
			"name": "createProductTypesWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-types"
			},
			"defaultValue": "\"create-product-types\""
		},
		{
			"id": 587,
			"name": "createProductTypesWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 595,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 596,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 597,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 598,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 599,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 600,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																600
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTypeDTO"
																	},
																	"name": "ProductTypeDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTypeDTO"
													},
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 601,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 602,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 603,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 604,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 605,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 606,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										606
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductTypeDTO"
																					},
																					"name": "ProductTypeDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																602
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 607,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 608,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 609,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 610,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 611,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 612,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductTypeDTO"
																},
																"name": "ProductTypeDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 613,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 614,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 615,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 616,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 617,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 618,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 619,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 620,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 622,
									"name": "productTypesCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 623,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 624,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 625,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 626,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 627,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 628,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 629,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 630,
																									"name": "product_types",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductTypeDTO"
																																	},
																																	"name": "ProductTypeDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductTypeDTO"
																													},
																													"name": "ProductTypeDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 631,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 632,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 633,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 634,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 635,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 636,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										636
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductTypeDTO"
																																					},
																																					"name": "ProductTypeDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																632
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "productTypes"
																								},
																								{
																									"id": 637,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										630,
																										637
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										622
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						595,
						607,
						613,
						616,
						620
					]
				}
			],
			"signatures": [
				{
					"id": 588,
					"name": "createProductTypesWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 589,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 590,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 591,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 592,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 593,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 594,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															593,
															594
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 690,
			"name": "createProductVariantsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-product-variants"
			},
			"defaultValue": "\"create-product-variants\""
		},
		{
			"id": 691,
			"name": "createProductVariantsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 725,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 726,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 727,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 728,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 729,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 730,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																730
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reflection",
															"declaration": {
																"id": 731,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 732,
																		"name": "prices",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																					"qualifiedName": "MoneyAmountDTO"
																				},
																				"name": "MoneyAmountDTO",
																				"package": "@medusajs/types"
																			}
																		},
																		"defaultValue": "..."
																	},
																	{
																		"id": 733,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 734,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 735,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 736,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 737,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 738,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 739,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 740,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 741,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 742,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 743,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 744,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 745,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 746,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 747,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 748,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 749,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 750,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 751,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 752,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 753,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 754,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 755,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 756,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			732,
																			733,
																			734,
																			735,
																			736,
																			737,
																			738,
																			739,
																			740,
																			741,
																			742,
																			743,
																			744,
																			745,
																			746,
																			747,
																			748,
																			749,
																			750,
																			751,
																			752,
																			753,
																			754,
																			755,
																			756
																		]
																	}
																]
															}
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 757,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 758,
																				"name": "prices",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "array",
																					"elementType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																							"qualifiedName": "MoneyAmountDTO"
																						},
																						"name": "MoneyAmountDTO",
																						"package": "@medusajs/types"
																					}
																				},
																				"defaultValue": "..."
																			},
																			{
																				"id": 759,
																				"name": "id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The ID of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 760,
																				"name": "title",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The tile of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 761,
																				"name": "sku",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The SKU of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 762,
																				"name": "barcode",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The barcode of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 763,
																				"name": "ean",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The EAN of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 764,
																				"name": "upc",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The UPC of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 765,
																				"name": "allow_backorder",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Whether the product variant can be ordered when it's out of stock."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			},
																			{
																				"id": 766,
																				"name": "manage_inventory",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Whether the product variant's inventory should be managed by the core system."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			},
																			{
																				"id": 767,
																				"name": "hs_code",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The HS Code of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 768,
																				"name": "origin_country",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The origin country of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 769,
																				"name": "mid_code",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The MID Code of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 770,
																				"name": "material",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The material of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 771,
																				"name": "weight",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The weight of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 772,
																				"name": "length",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The length of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 773,
																				"name": "height",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The height of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 774,
																				"name": "width",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The width of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 775,
																				"name": "options",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product options."
																						}
																					],
																					"modifierTags": [
																						"@expandable"
																					]
																				},
																				"type": {
																					"type": "array",
																					"elementType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductOptionValueDTO"
																						},
																						"name": "ProductOptionValueDTO",
																						"package": "@medusajs/types"
																					}
																				}
																			},
																			{
																				"id": 776,
																				"name": "metadata",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Holds custom data in key-value pairs."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "unknown"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 777,
																				"name": "product",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {
																					"isOptional": true
																				},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product."
																						}
																					],
																					"modifierTags": [
																						"@expandable"
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																								"qualifiedName": "ProductDTO"
																							},
																							"name": "ProductDTO",
																							"package": "@medusajs/types"
																						}
																					]
																				}
																			},
																			{
																				"id": 778,
																				"name": "product_id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product id."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 779,
																				"name": "variant_rank",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {
																					"isOptional": true
																				},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "he ranking of the variant among other variants associated with the product."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 780,
																				"name": "created_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was created."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 781,
																				"name": "updated_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was updated."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 782,
																				"name": "deleted_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was deleted."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					758,
																					759,
																					760,
																					761,
																					762,
																					763,
																					764,
																					765,
																					766,
																					767,
																					768,
																					769,
																					770,
																					771,
																					772,
																					773,
																					774,
																					775,
																					776,
																					777,
																					778,
																					779,
																					780,
																					781,
																					782
																				]
																			}
																		]
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 783,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 784,
																"name": "prices",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																			"qualifiedName": "MoneyAmountDTO"
																		},
																		"name": "MoneyAmountDTO",
																		"package": "@medusajs/types"
																	}
																},
																"defaultValue": "..."
															},
															{
																"id": 785,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The ID of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 786,
																"name": "title",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The tile of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 787,
																"name": "sku",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The SKU of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 788,
																"name": "barcode",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The barcode of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 789,
																"name": "ean",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The EAN of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 790,
																"name": "upc",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The UPC of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 791,
																"name": "allow_backorder",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Whether the product variant can be ordered when it's out of stock."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 792,
																"name": "manage_inventory",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Whether the product variant's inventory should be managed by the core system."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 793,
																"name": "hs_code",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The HS Code of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 794,
																"name": "origin_country",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The origin country of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 795,
																"name": "mid_code",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The MID Code of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 796,
																"name": "material",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The material of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 797,
																"name": "weight",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The weight of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 798,
																"name": "length",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The length of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 799,
																"name": "height",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The height of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 800,
																"name": "width",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The width of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 801,
																"name": "options",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product options."
																		}
																	],
																	"modifierTags": [
																		"@expandable"
																	]
																},
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																			"qualifiedName": "ProductOptionValueDTO"
																		},
																		"name": "ProductOptionValueDTO",
																		"package": "@medusajs/types"
																	}
																}
															},
															{
																"id": 802,
																"name": "metadata",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Holds custom data in key-value pairs."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Record"
																			},
																			"typeArguments": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "unknown"
																				}
																			],
																			"name": "Record",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 803,
																"name": "product",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product."
																		}
																	],
																	"modifierTags": [
																		"@expandable"
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductDTO"
																			},
																			"name": "ProductDTO",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 804,
																"name": "product_id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product id."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 805,
																"name": "variant_rank",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "he ranking of the variant among other variants associated with the product."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 806,
																"name": "created_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was created."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 807,
																"name": "updated_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was updated."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 808,
																"name": "deleted_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was deleted."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	784,
																	785,
																	786,
																	787,
																	788,
																	789,
																	790,
																	791,
																	792,
																	793,
																	794,
																	795,
																	796,
																	797,
																	798,
																	799,
																	800,
																	801,
																	802,
																	803,
																	804,
																	805,
																	806,
																	807,
																	808
																]
															}
														]
													}
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 809,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 810,
																		"name": "prices",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																					"qualifiedName": "MoneyAmountDTO"
																				},
																				"name": "MoneyAmountDTO",
																				"package": "@medusajs/types"
																			}
																		},
																		"defaultValue": "..."
																	},
																	{
																		"id": 811,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 812,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 813,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 814,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 815,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 816,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 817,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 818,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 819,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 820,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 821,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 822,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 823,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 824,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 825,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 826,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 827,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 828,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 829,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 830,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 831,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 832,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 833,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 834,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			810,
																			811,
																			812,
																			813,
																			814,
																			815,
																			816,
																			817,
																			818,
																			819,
																			820,
																			821,
																			822,
																			823,
																			824,
																			825,
																			826,
																			827,
																			828,
																			829,
																			830,
																			831,
																			832,
																			833,
																			834
																		]
																	}
																]
															}
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 835,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 836,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 837,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 838,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 839,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 840,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										840
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reflection",
																					"declaration": {
																						"id": 841,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 842,
																								"name": "prices",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																											"qualifiedName": "MoneyAmountDTO"
																										},
																										"name": "MoneyAmountDTO",
																										"package": "@medusajs/types"
																									}
																								},
																								"defaultValue": "..."
																							},
																							{
																								"id": 843,
																								"name": "id",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The ID of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 844,
																								"name": "title",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The tile of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 845,
																								"name": "sku",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The SKU of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 846,
																								"name": "barcode",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The barcode of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 847,
																								"name": "ean",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The EAN of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 848,
																								"name": "upc",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The UPC of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 849,
																								"name": "allow_backorder",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Whether the product variant can be ordered when it's out of stock."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							},
																							{
																								"id": 850,
																								"name": "manage_inventory",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Whether the product variant's inventory should be managed by the core system."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							},
																							{
																								"id": 851,
																								"name": "hs_code",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The HS Code of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 852,
																								"name": "origin_country",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The origin country of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 853,
																								"name": "mid_code",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The MID Code of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 854,
																								"name": "material",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The material of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 855,
																								"name": "weight",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The weight of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 856,
																								"name": "length",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The length of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 857,
																								"name": "height",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The height of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 858,
																								"name": "width",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The width of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 859,
																								"name": "options",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product options."
																										}
																									],
																									"modifierTags": [
																										"@expandable"
																									]
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																											"qualifiedName": "ProductOptionValueDTO"
																										},
																										"name": "ProductOptionValueDTO",
																										"package": "@medusajs/types"
																									}
																								}
																							},
																							{
																								"id": 860,
																								"name": "metadata",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Holds custom data in key-value pairs."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Record"
																											},
																											"typeArguments": [
																												{
																													"type": "intrinsic",
																													"name": "string"
																												},
																												{
																													"type": "intrinsic",
																													"name": "unknown"
																												}
																											],
																											"name": "Record",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 861,
																								"name": "product",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product."
																										}
																									],
																									"modifierTags": [
																										"@expandable"
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																												"qualifiedName": "ProductDTO"
																											},
																											"name": "ProductDTO",
																											"package": "@medusajs/types"
																										}
																									]
																								}
																							},
																							{
																								"id": 862,
																								"name": "product_id",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product id."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 863,
																								"name": "variant_rank",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "he ranking of the variant among other variants associated with the product."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 864,
																								"name": "created_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was created."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 865,
																								"name": "updated_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was updated."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 866,
																								"name": "deleted_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was deleted."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									842,
																									843,
																									844,
																									845,
																									846,
																									847,
																									848,
																									849,
																									850,
																									851,
																									852,
																									853,
																									854,
																									855,
																									856,
																									857,
																									858,
																									859,
																									860,
																									861,
																									862,
																									863,
																									864,
																									865,
																									866
																								]
																							}
																						]
																					}
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																836
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 867,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 868,
																		"name": "prices",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																					"qualifiedName": "MoneyAmountDTO"
																				},
																				"name": "MoneyAmountDTO",
																				"package": "@medusajs/types"
																			}
																		},
																		"defaultValue": "..."
																	},
																	{
																		"id": 869,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 870,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 871,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 872,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 873,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 874,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 875,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 876,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 877,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 878,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 879,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 880,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 881,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 882,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 883,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 884,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 885,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 886,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 887,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 888,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 889,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 890,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 891,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 892,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			868,
																			869,
																			870,
																			871,
																			872,
																			873,
																			874,
																			875,
																			876,
																			877,
																			878,
																			879,
																			880,
																			881,
																			882,
																			883,
																			884,
																			885,
																			886,
																			887,
																			888,
																			889,
																			890,
																			891,
																			892
																		]
																	}
																]
															}
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 893,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 894,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 895,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 896,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 897,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 898,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reflection",
																"declaration": {
																	"id": 899,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 900,
																			"name": "prices",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																						"qualifiedName": "MoneyAmountDTO"
																					},
																					"name": "MoneyAmountDTO",
																					"package": "@medusajs/types"
																				}
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 901,
																			"name": "id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The ID of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 902,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The tile of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 903,
																			"name": "sku",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The SKU of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 904,
																			"name": "barcode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The barcode of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 905,
																			"name": "ean",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The EAN of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 906,
																			"name": "upc",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The UPC of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 907,
																			"name": "allow_backorder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether the product variant can be ordered when it's out of stock."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 908,
																			"name": "manage_inventory",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether the product variant's inventory should be managed by the core system."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 909,
																			"name": "hs_code",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The HS Code of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 910,
																			"name": "origin_country",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The origin country of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 911,
																			"name": "mid_code",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The MID Code of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 912,
																			"name": "material",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The material of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 913,
																			"name": "weight",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The weight of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 914,
																			"name": "length",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The length of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 915,
																			"name": "height",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The height of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 916,
																			"name": "width",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The width of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 917,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product options."
																					}
																				],
																				"modifierTags": [
																					"@expandable"
																				]
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductOptionValueDTO"
																					},
																					"name": "ProductOptionValueDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		},
																		{
																			"id": 918,
																			"name": "metadata",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Holds custom data in key-value pairs."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 919,
																			"name": "product",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product."
																					}
																				],
																				"modifierTags": [
																					"@expandable"
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductDTO"
																						},
																						"name": "ProductDTO",
																						"package": "@medusajs/types"
																					}
																				]
																			}
																		},
																		{
																			"id": 920,
																			"name": "product_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product id."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 921,
																			"name": "variant_rank",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "he ranking of the variant among other variants associated with the product."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 922,
																			"name": "created_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was created."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 923,
																			"name": "updated_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was updated."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 924,
																			"name": "deleted_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was deleted."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				900,
																				901,
																				902,
																				903,
																				904,
																				905,
																				906,
																				907,
																				908,
																				909,
																				910,
																				911,
																				912,
																				913,
																				914,
																				915,
																				916,
																				917,
																				918,
																				919,
																				920,
																				921,
																				922,
																				923,
																				924
																			]
																		}
																	]
																}
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 925,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 926,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 927,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 928,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 929,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 930,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 931,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 932,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 933,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 934,
									"name": "productVariantsCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 935,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 936,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 937,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 938,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 939,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 940,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 941,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 942,
																									"name": "product_variants",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																											"qualifiedName": "WorkflowData"
																										},
																										"typeArguments": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reflection",
																													"declaration": {
																														"id": 943,
																														"name": "__type",
																														"variant": "declaration",
																														"kind": 65536,
																														"flags": {},
																														"children": [
																															{
																																"id": 944,
																																"name": "prices",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"type": {
																																	"type": "array",
																																	"elementType": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																																			"qualifiedName": "MoneyAmountDTO"
																																		},
																																		"name": "MoneyAmountDTO",
																																		"package": "@medusajs/types"
																																	}
																																},
																																"defaultValue": "..."
																															},
																															{
																																"id": 945,
																																"name": "id",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The ID of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															},
																															{
																																"id": 946,
																																"name": "title",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The tile of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															},
																															{
																																"id": 947,
																																"name": "sku",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The SKU of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 948,
																																"name": "barcode",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The barcode of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 949,
																																"name": "ean",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The EAN of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 950,
																																"name": "upc",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The UPC of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 951,
																																"name": "allow_backorder",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Whether the product variant can be ordered when it's out of stock."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "boolean"
																																}
																															},
																															{
																																"id": 952,
																																"name": "manage_inventory",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Whether the product variant's inventory should be managed by the core system."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "boolean"
																																}
																															},
																															{
																																"id": 953,
																																"name": "hs_code",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The HS Code of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 954,
																																"name": "origin_country",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The origin country of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 955,
																																"name": "mid_code",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The MID Code of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 956,
																																"name": "material",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The material of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 957,
																																"name": "weight",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The weight of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 958,
																																"name": "length",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The length of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 959,
																																"name": "height",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The height of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 960,
																																"name": "width",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The width of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 961,
																																"name": "options",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product options."
																																		}
																																	],
																																	"modifierTags": [
																																		"@expandable"
																																	]
																																},
																																"type": {
																																	"type": "array",
																																	"elementType": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																			"qualifiedName": "ProductOptionValueDTO"
																																		},
																																		"name": "ProductOptionValueDTO",
																																		"package": "@medusajs/types"
																																	}
																																}
																															},
																															{
																																"id": 962,
																																"name": "metadata",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Holds custom data in key-value pairs."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Record"
																																			},
																																			"typeArguments": [
																																				{
																																					"type": "intrinsic",
																																					"name": "string"
																																				},
																																				{
																																					"type": "intrinsic",
																																					"name": "unknown"
																																				}
																																			],
																																			"name": "Record",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 963,
																																"name": "product",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {
																																	"isOptional": true
																																},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product."
																																		}
																																	],
																																	"modifierTags": [
																																		"@expandable"
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																				"qualifiedName": "ProductDTO"
																																			},
																																			"name": "ProductDTO",
																																			"package": "@medusajs/types"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 964,
																																"name": "product_id",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product id."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 965,
																																"name": "variant_rank",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {
																																	"isOptional": true
																																},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "he ranking of the variant among other variants associated with the product."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 966,
																																"name": "created_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was created."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 967,
																																"name": "updated_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was updated."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 968,
																																"name": "deleted_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was deleted."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															}
																														],
																														"groups": [
																															{
																																"title": "Properties",
																																"children": [
																																	944,
																																	945,
																																	946,
																																	947,
																																	948,
																																	949,
																																	950,
																																	951,
																																	952,
																																	953,
																																	954,
																																	955,
																																	956,
																																	957,
																																	958,
																																	959,
																																	960,
																																	961,
																																	962,
																																	963,
																																	964,
																																	965,
																																	966,
																																	967,
																																	968
																																]
																															}
																														]
																													}
																												}
																											}
																										],
																										"name": "WorkflowData",
																										"package": "@medusajs/workflows-sdk"
																									},
																									"defaultValue": "response"
																								},
																								{
																									"id": 969,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										942,
																										969
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										934
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						725,
						893,
						925,
						928,
						932
					]
				}
			],
			"signatures": [
				{
					"id": 692,
					"name": "createProductVariantsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 693,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 694,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 695,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 696,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 697,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 698,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															697,
															698
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 699,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 700,
														"name": "prices",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
																	"qualifiedName": "MoneyAmountDTO"
																},
																"name": "MoneyAmountDTO",
																"package": "@medusajs/types"
															}
														},
														"defaultValue": "..."
													},
													{
														"id": 701,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The ID of the product variant."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 702,
														"name": "title",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The tile of the product variant."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 703,
														"name": "sku",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The SKU of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 704,
														"name": "barcode",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The barcode of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 705,
														"name": "ean",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The EAN of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 706,
														"name": "upc",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The UPC of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 707,
														"name": "allow_backorder",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Whether the product variant can be ordered when it's out of stock."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													},
													{
														"id": 708,
														"name": "manage_inventory",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Whether the product variant's inventory should be managed by the core system."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													},
													{
														"id": 709,
														"name": "hs_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The HS Code of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 710,
														"name": "origin_country",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The origin country of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 711,
														"name": "mid_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The MID Code of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 712,
														"name": "material",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The material of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 713,
														"name": "weight",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The weight of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 714,
														"name": "length",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The length of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 715,
														"name": "height",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The height of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 716,
														"name": "width",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The width of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 717,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product options."
																}
															],
															"modifierTags": [
																"@expandable"
															]
														},
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductOptionValueDTO"
																},
																"name": "ProductOptionValueDTO",
																"package": "@medusajs/types"
															}
														}
													},
													{
														"id": 718,
														"name": "metadata",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Holds custom data in key-value pairs."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 719,
														"name": "product",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product."
																}
															],
															"modifierTags": [
																"@expandable"
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															]
														}
													},
													{
														"id": 720,
														"name": "product_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product id."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 721,
														"name": "variant_rank",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "he ranking of the variant among other variants associated with the product."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 722,
														"name": "created_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was created."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 723,
														"name": "updated_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was updated."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 724,
														"name": "deleted_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was deleted."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															700,
															701,
															702,
															703,
															704,
															705,
															706,
															707,
															708,
															709,
															710,
															711,
															712,
															713,
															714,
															715,
															716,
															717,
															718,
															719,
															720,
															721,
															722,
															723,
															724
														]
													}
												]
											}
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 970,
			"name": "createProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-products"
			},
			"defaultValue": "\"create-products\""
		},
		{
			"id": 971,
			"name": "createProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 979,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 980,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 981,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 982,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 983,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 984,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																984
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductDTO"
													},
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 985,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 986,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 987,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 988,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 989,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 990,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										990
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																986
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 991,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 992,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 993,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 994,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 995,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 996,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductDTO"
																},
																"name": "ProductDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 997,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 998,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 999,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1000,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1001,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1002,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1003,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1004,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1005,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1006,
									"name": "productsCreated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1007,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1008,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1009,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1010,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1011,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1012,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1013,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1014,
																									"name": "products",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																											"qualifiedName": "WorkflowData"
																										},
																										"typeArguments": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductDTO"
																													},
																													"name": "ProductDTO",
																													"package": "@medusajs/types"
																												}
																											}
																										],
																										"name": "WorkflowData",
																										"package": "@medusajs/workflows-sdk"
																									},
																									"defaultValue": "response"
																								},
																								{
																									"id": 1015,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1014,
																										1015
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1006
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						979,
						991,
						997,
						1000,
						1004
					]
				}
			],
			"signatures": [
				{
					"id": 972,
					"name": "createProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 973,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 974,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 975,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 976,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 977,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 978,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															977,
															978
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1016,
			"name": "deleteCollectionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-collections"
			},
			"defaultValue": "\"delete-collections\""
		},
		{
			"id": 1017,
			"name": "deleteCollectionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1025,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1026,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1027,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1028,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1029,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1030,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1030
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1031,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1032,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1033,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1034,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1035,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1036,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1037,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1038,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1039,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1040,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1041,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1042,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1043,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1044,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1045,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1046,
									"name": "collectionsDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1047,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1048,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1049,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1050,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1051,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1052,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1053,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1054,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1054
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1046
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1025,
						1031,
						1037,
						1040,
						1044
					]
				}
			],
			"signatures": [
				{
					"id": 1018,
					"name": "deleteCollectionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1019,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1020,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1021,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1022,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1023,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1024,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1023,
															1024
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1055,
			"name": "deleteProductOptionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-options"
			},
			"defaultValue": "\"delete-product-options\""
		},
		{
			"id": 1056,
			"name": "deleteProductOptionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1064,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1065,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1066,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1067,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1068,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1069,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1069
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1070,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1071,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1072,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1073,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1074,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1075,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1076,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1077,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1078,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1079,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1080,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1081,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1082,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1083,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1084,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1085,
									"name": "productOptionsDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1086,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1087,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1088,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1089,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1090,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1091,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1092,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1093,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1093
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1085
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1064,
						1070,
						1076,
						1079,
						1083
					]
				}
			],
			"signatures": [
				{
					"id": 1057,
					"name": "deleteProductOptionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1058,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1059,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1060,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1061,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1062,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1063,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1062,
															1063
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1133,
			"name": "deleteProductTagsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-tags"
			},
			"defaultValue": "\"delete-product-tags\""
		},
		{
			"id": 1134,
			"name": "deleteProductTagsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1142,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1143,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1144,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1145,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1146,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1147,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1147
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1148,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1150,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1151,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1152,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1153,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1154,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1155,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1156,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1157,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1158,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1159,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1160,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1161,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1162,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1163,
									"name": "productTagsDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1164,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1165,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1166,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1167,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1168,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1169,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1170,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1171,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1171
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1163
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1142,
						1148,
						1154,
						1157,
						1161
					]
				}
			],
			"signatures": [
				{
					"id": 1135,
					"name": "deleteProductTagsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1136,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1137,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1138,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1139,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1140,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1141,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1140,
															1141
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1094,
			"name": "deleteProductTypesWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-types"
			},
			"defaultValue": "\"delete-product-types\""
		},
		{
			"id": 1095,
			"name": "deleteProductTypesWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1103,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1104,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1105,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1106,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1107,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1108,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1108
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1109,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1110,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1111,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1112,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1113,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1114,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1115,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1116,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1117,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1118,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1119,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1120,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1121,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1122,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1123,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1124,
									"name": "productTypesDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1125,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1126,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1127,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1128,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1129,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1130,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1131,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1132,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1132
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1124
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1103,
						1109,
						1115,
						1118,
						1122
					]
				}
			],
			"signatures": [
				{
					"id": 1096,
					"name": "deleteProductTypesWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1097,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1098,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1099,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1100,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1101,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1102,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1101,
															1102
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1172,
			"name": "deleteProductVariantsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-product-variants"
			},
			"defaultValue": "\"delete-product-variants\""
		},
		{
			"id": 1173,
			"name": "deleteProductVariantsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1181,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1182,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1183,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1184,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1185,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1186,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1186
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1187,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1188,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1189,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1190,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1191,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1192,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1193,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1195,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1196,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1197,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1198,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1199,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1200,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1201,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1202,
									"name": "productVariantsDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1203,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1204,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1205,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1206,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1207,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1208,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1209,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1210,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1210
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1202
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1181,
						1187,
						1193,
						1196,
						1200
					]
				}
			],
			"signatures": [
				{
					"id": 1174,
					"name": "deleteProductVariantsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1175,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1176,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1177,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1178,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1179,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1180,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1179,
															1180
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1211,
			"name": "deleteProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "delete-products"
			},
			"defaultValue": "\"delete-products\""
		},
		{
			"id": 1212,
			"name": "deleteProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1220,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1221,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1222,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1223,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1224,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1225,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1225
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						}
					}
				},
				{
					"id": 1226,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1227,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1228,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1229,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1230,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1231,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1232,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1233,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1234,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1235,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1236,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1237,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1238,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1239,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1240,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1241,
									"name": "productsDeleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1242,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1243,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1244,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1245,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1246,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1247,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1248,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1249,
																									"name": "ids",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "union",
																												"types": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "intrinsic",
																															"name": "string"
																														}
																													},
																													{
																														"type": "reference",
																														"target": {
																															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																															"qualifiedName": "WorkflowData"
																														},
																														"typeArguments": [
																															{
																																"type": "array",
																																"elementType": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															}
																														],
																														"name": "WorkflowData",
																														"package": "@medusajs/workflows-sdk"
																													}
																												]
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										]
																									},
																									"defaultValue": "input.ids"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1249
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1241
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1220,
						1226,
						1232,
						1235,
						1239
					]
				}
			],
			"signatures": [
				{
					"id": 1213,
					"name": "deleteProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1214,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1215,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1216,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1217,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1218,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1219,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1218,
															1219
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "never"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1790,
			"name": "exportProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "export-products"
			},
			"defaultValue": "\"export-products\""
		},
		{
			"id": 1791,
			"name": "exportProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1799,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1800,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1801,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1802,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1803,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1804,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product/export-products.ts",
																			"qualifiedName": "ExportProductsDTO"
																		},
																		"name": "ExportProductsDTO",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflow/product/export-products.ts",
																					"qualifiedName": "ExportProductsDTO"
																				},
																				"name": "ExportProductsDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1804
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1805,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1806,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1807,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1808,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1809,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1810,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1810
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1806
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1811,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1812,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1813,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1814,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1815,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1816,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product/export-products.ts",
																			"qualifiedName": "ExportProductsDTO"
																		},
																		"name": "ExportProductsDTO",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "unknown"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1817,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1818,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1819,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1820,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1821,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1822,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1823,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1824,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1825,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1799,
						1811,
						1817,
						1820,
						1824
					]
				}
			],
			"signatures": [
				{
					"id": 1792,
					"name": "exportProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1793,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1794,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1795,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1796,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1797,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1798,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1797,
															1798
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/workflow/product/export-products.ts",
											"qualifiedName": "ExportProductsDTO"
										},
										"name": "ExportProductsDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1826,
			"name": "importProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "import-products"
			},
			"defaultValue": "\"import-products\""
		},
		{
			"id": 1827,
			"name": "importProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1835,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1836,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1837,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1838,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1839,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1840,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
																			"qualifiedName": "ImportProductsDTO"
																		},
																		"name": "ImportProductsDTO",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
																					"qualifiedName": "ImportProductsDTO"
																				},
																				"name": "ImportProductsDTO",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1840
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1841,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1842,
															"name": "toCreate",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														{
															"id": 1843,
															"name": "toUpdate",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1842,
																1843
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
													"qualifiedName": "ImportProductsSummary"
												},
												"name": "ImportProductsSummary",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
															"qualifiedName": "ImportProductsSummary"
														},
														"name": "ImportProductsSummary",
														"package": "@medusajs/types"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1844,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1845,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1846,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1847,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1848,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1849,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1849
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
																					"qualifiedName": "ImportProductsSummary"
																				},
																				"name": "ImportProductsSummary",
																				"package": "@medusajs/types"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1845
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
															"qualifiedName": "ImportProductsSummary"
														},
														"name": "ImportProductsSummary",
														"package": "@medusajs/types"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1850,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1851,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1852,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1853,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1854,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1855,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
																			"qualifiedName": "ImportProductsDTO"
																		},
																		"name": "ImportProductsDTO",
																		"package": "@medusajs/types"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
																"qualifiedName": "ImportProductsSummary"
															},
															"name": "ImportProductsSummary",
															"package": "@medusajs/types"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1856,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1857,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1858,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1859,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1860,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1861,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1862,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1863,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1835,
						1850,
						1856,
						1859,
						1863
					]
				}
			],
			"signatures": [
				{
					"id": 1828,
					"name": "importProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1829,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1830,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1831,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1832,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1833,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1834,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1833,
															1834
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
											"qualifiedName": "ImportProductsDTO"
										},
										"name": "ImportProductsDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
											"qualifiedName": "ImportProductsSummary"
										},
										"name": "ImportProductsSummary",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1250,
			"name": "updateCollectionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-collections"
			},
			"defaultValue": "\"update-collections\""
		},
		{
			"id": 1251,
			"name": "updateCollectionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1259,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1260,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1261,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1262,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1263,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1264,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
																			"qualifiedName": "UpdateCollectionsStepInput"
																		},
																		"name": "UpdateCollectionsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
																					"qualifiedName": "UpdateCollectionsStepInput"
																				},
																				"name": "UpdateCollectionsStepInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1264
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductCollectionDTO"
																	},
																	"name": "ProductCollectionDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductCollectionDTO"
													},
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1265,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1266,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1267,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1268,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1269,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1270,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1270
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductCollectionDTO"
																					},
																					"name": "ProductCollectionDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1266
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductCollectionDTO"
															},
															"name": "ProductCollectionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1271,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1272,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1273,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1274,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1275,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1276,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
																			"qualifiedName": "UpdateCollectionsStepInput"
																		},
																		"name": "UpdateCollectionsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductCollectionDTO"
																},
																"name": "ProductCollectionDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1277,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1278,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1279,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1280,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1281,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1282,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1283,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1284,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1285,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1286,
									"name": "collectionsUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1287,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1288,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1289,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1290,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1291,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1292,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1293,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1294,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								},
																								{
																									"id": 1295,
																									"name": "collections",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductCollectionDTO"
																																	},
																																	"name": "ProductCollectionDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductCollectionDTO"
																													},
																													"name": "ProductCollectionDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 1296,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 1297,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 1298,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 1299,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 1300,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 1301,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										1301
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductCollectionDTO"
																																					},
																																					"name": "ProductCollectionDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																1297
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductCollectionDTO"
																															},
																															"name": "ProductCollectionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "updatedCollections"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1294,
																										1295
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1286
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1259,
						1271,
						1277,
						1280,
						1284
					]
				}
			],
			"signatures": [
				{
					"id": 1252,
					"name": "updateCollectionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1253,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1254,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1255,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1256,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1257,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1258,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1257,
															1258
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
											"qualifiedName": "UpdateCollectionsStepInput"
										},
										"name": "UpdateCollectionsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductCollectionDTO"
											},
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1302,
			"name": "updateProductOptionsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-options"
			},
			"defaultValue": "\"update-product-options\""
		},
		{
			"id": 1303,
			"name": "updateProductOptionsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1311,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1312,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1313,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1314,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1315,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1316,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
																			"qualifiedName": "UpdateProductOptionsStepInput"
																		},
																		"name": "UpdateProductOptionsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
																					"qualifiedName": "UpdateProductOptionsStepInput"
																				},
																				"name": "UpdateProductOptionsStepInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1316
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductOptionDTO"
																	},
																	"name": "ProductOptionDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductOptionDTO"
													},
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1317,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1318,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1319,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1320,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1321,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1322,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1322
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductOptionDTO"
																					},
																					"name": "ProductOptionDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1318
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductOptionDTO"
															},
															"name": "ProductOptionDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1323,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1324,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1325,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1326,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1327,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1328,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
																			"qualifiedName": "UpdateProductOptionsStepInput"
																		},
																		"name": "UpdateProductOptionsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductOptionDTO"
																},
																"name": "ProductOptionDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1329,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1330,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1331,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1332,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1333,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1334,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1335,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1336,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1337,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1338,
									"name": "productOptionsUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1339,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1340,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1341,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1342,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1343,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1344,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1345,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1346,
																									"name": "product_options",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductOptionDTO"
																																	},
																																	"name": "ProductOptionDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductOptionDTO"
																													},
																													"name": "ProductOptionDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 1347,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 1348,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 1349,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 1350,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 1351,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 1352,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										1352
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductOptionDTO"
																																					},
																																					"name": "ProductOptionDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																1348
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductOptionDTO"
																															},
																															"name": "ProductOptionDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "updatedProductOptions"
																								},
																								{
																									"id": 1353,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1346,
																										1353
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1338
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1311,
						1323,
						1329,
						1332,
						1336
					]
				}
			],
			"signatures": [
				{
					"id": 1304,
					"name": "updateProductOptionsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1305,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1306,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1307,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1308,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1309,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1310,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1309,
															1310
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
											"qualifiedName": "UpdateProductOptionsStepInput"
										},
										"name": "UpdateProductOptionsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductOptionDTO"
											},
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1406,
			"name": "updateProductTagsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-tags"
			},
			"defaultValue": "\"update-product-tags\""
		},
		{
			"id": 1407,
			"name": "updateProductTagsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1415,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1416,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1417,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1418,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1419,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1420,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
																			"qualifiedName": "UpdateProductTagsStepInput"
																		},
																		"name": "UpdateProductTagsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
																					"qualifiedName": "UpdateProductTagsStepInput"
																				},
																				"name": "UpdateProductTagsStepInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1420
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTagDTO"
																	},
																	"name": "ProductTagDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTagDTO"
													},
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1421,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1422,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1423,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1424,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1425,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1426,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1426
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductTagDTO"
																					},
																					"name": "ProductTagDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1422
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTagDTO"
															},
															"name": "ProductTagDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1427,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1428,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1429,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1430,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1431,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1432,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
																			"qualifiedName": "UpdateProductTagsStepInput"
																		},
																		"name": "UpdateProductTagsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductTagDTO"
																},
																"name": "ProductTagDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1433,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1434,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1435,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1436,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1437,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1438,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1439,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1440,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1441,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1442,
									"name": "productTagsUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1443,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1444,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1445,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1446,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1447,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1448,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1449,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1450,
																									"name": "product_tags",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductTagDTO"
																																	},
																																	"name": "ProductTagDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductTagDTO"
																													},
																													"name": "ProductTagDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 1451,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 1452,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 1453,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 1454,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 1455,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 1456,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										1456
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductTagDTO"
																																					},
																																					"name": "ProductTagDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																1452
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTagDTO"
																															},
																															"name": "ProductTagDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "updatedProductTags"
																								},
																								{
																									"id": 1457,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1450,
																										1457
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1442
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1415,
						1427,
						1433,
						1436,
						1440
					]
				}
			],
			"signatures": [
				{
					"id": 1408,
					"name": "updateProductTagsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1409,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1410,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1411,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1412,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1413,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1414,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1413,
															1414
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
											"qualifiedName": "UpdateProductTagsStepInput"
										},
										"name": "UpdateProductTagsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTagDTO"
											},
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1354,
			"name": "updateProductTypesWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-types"
			},
			"defaultValue": "\"update-product-types\""
		},
		{
			"id": 1355,
			"name": "updateProductTypesWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1363,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1364,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1365,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1366,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1367,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1368,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
																			"qualifiedName": "UpdateProductTypesStepInput"
																		},
																		"name": "UpdateProductTypesStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
																					"qualifiedName": "UpdateProductTypesStepInput"
																				},
																				"name": "UpdateProductTypesStepInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1368
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductTypeDTO"
																	},
																	"name": "ProductTypeDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductTypeDTO"
													},
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1369,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1370,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1371,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1372,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1373,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1374,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1374
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductTypeDTO"
																					},
																					"name": "ProductTypeDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1370
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductTypeDTO"
															},
															"name": "ProductTypeDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1375,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1376,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1377,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1378,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1379,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1380,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
																			"qualifiedName": "UpdateProductTypesStepInput"
																		},
																		"name": "UpdateProductTypesStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductTypeDTO"
																},
																"name": "ProductTypeDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1381,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1382,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1383,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1384,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1385,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1386,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1387,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1388,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1389,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1390,
									"name": "productTypesUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1391,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1392,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1393,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1394,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1395,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1396,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1397,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1398,
																									"name": "product_types",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductTypeDTO"
																																	},
																																	"name": "ProductTypeDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductTypeDTO"
																													},
																													"name": "ProductTypeDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 1399,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 1400,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 1401,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 1402,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 1403,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 1404,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										1404
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductTypeDTO"
																																					},
																																					"name": "ProductTypeDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																1400
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductTypeDTO"
																															},
																															"name": "ProductTypeDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "updatedProductTypes"
																								},
																								{
																									"id": 1405,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1398,
																										1405
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1390
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1363,
						1375,
						1381,
						1384,
						1388
					]
				}
			],
			"signatures": [
				{
					"id": 1356,
					"name": "updateProductTypesWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1357,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1358,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1359,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1360,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1361,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1362,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1361,
															1362
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
											"qualifiedName": "UpdateProductTypesStepInput"
										},
										"name": "UpdateProductTypesStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductTypeDTO"
											},
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1458,
			"name": "updateProductVariantsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-product-variants"
			},
			"defaultValue": "\"update-product-variants\""
		},
		{
			"id": 1459,
			"name": "updateProductVariantsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1493,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1494,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1495,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1496,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1497,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1498,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1498
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reflection",
															"declaration": {
																"id": 1499,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 1500,
																		"name": "price_set",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																						"qualifiedName": "PriceSetDTO"
																					},
																					"name": "PriceSetDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		},
																		"defaultValue": "priceSetForVariant"
																	},
																	{
																		"id": 1501,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1502,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1504,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1505,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1506,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1507,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1508,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1509,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1510,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1511,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1512,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1513,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1514,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1515,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1516,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1517,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 1518,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1519,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 1520,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1521,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1522,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1523,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1524,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			1500,
																			1501,
																			1502,
																			1503,
																			1504,
																			1505,
																			1506,
																			1507,
																			1508,
																			1509,
																			1510,
																			1511,
																			1512,
																			1513,
																			1514,
																			1515,
																			1516,
																			1517,
																			1518,
																			1519,
																			1520,
																			1521,
																			1522,
																			1523,
																			1524
																		]
																	}
																]
															}
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 1525,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 1526,
																				"name": "price_set",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "undefined"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																								"qualifiedName": "PriceSetDTO"
																							},
																							"name": "PriceSetDTO",
																							"package": "@medusajs/types"
																						}
																					]
																				},
																				"defaultValue": "priceSetForVariant"
																			},
																			{
																				"id": 1527,
																				"name": "id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The ID of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 1528,
																				"name": "title",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The tile of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 1529,
																				"name": "sku",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The SKU of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1530,
																				"name": "barcode",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The barcode of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1531,
																				"name": "ean",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The EAN of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1532,
																				"name": "upc",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The UPC of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1533,
																				"name": "allow_backorder",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Whether the product variant can be ordered when it's out of stock."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			},
																			{
																				"id": 1534,
																				"name": "manage_inventory",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Whether the product variant's inventory should be managed by the core system."
																						}
																					]
																				},
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			},
																			{
																				"id": 1535,
																				"name": "hs_code",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The HS Code of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1536,
																				"name": "origin_country",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The origin country of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1537,
																				"name": "mid_code",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The MID Code of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1538,
																				"name": "material",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The material of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1539,
																				"name": "weight",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The weight of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 1540,
																				"name": "length",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The length of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 1541,
																				"name": "height",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The height of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 1542,
																				"name": "width",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The width of the product variant."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 1543,
																				"name": "options",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product options."
																						}
																					],
																					"modifierTags": [
																						"@expandable"
																					]
																				},
																				"type": {
																					"type": "array",
																					"elementType": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductOptionValueDTO"
																						},
																						"name": "ProductOptionValueDTO",
																						"package": "@medusajs/types"
																					}
																				}
																			},
																			{
																				"id": 1544,
																				"name": "metadata",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "Holds custom data in key-value pairs."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "unknown"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 1545,
																				"name": "product",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {
																					"isOptional": true
																				},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product."
																						}
																					],
																					"modifierTags": [
																						"@expandable"
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																								"qualifiedName": "ProductDTO"
																							},
																							"name": "ProductDTO",
																							"package": "@medusajs/types"
																						}
																					]
																				}
																			},
																			{
																				"id": 1546,
																				"name": "product_id",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The associated product id."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					]
																				}
																			},
																			{
																				"id": 1547,
																				"name": "variant_rank",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {
																					"isOptional": true
																				},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "he ranking of the variant among other variants associated with the product."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			},
																			{
																				"id": 1548,
																				"name": "created_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was created."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 1549,
																				"name": "updated_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was updated."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			},
																			{
																				"id": 1550,
																				"name": "deleted_at",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "When the product variant was deleted."
																						}
																					]
																				},
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Date"
																							},
																							"name": "Date",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					1526,
																					1527,
																					1528,
																					1529,
																					1530,
																					1531,
																					1532,
																					1533,
																					1534,
																					1535,
																					1536,
																					1537,
																					1538,
																					1539,
																					1540,
																					1541,
																					1542,
																					1543,
																					1544,
																					1545,
																					1546,
																					1547,
																					1548,
																					1549,
																					1550
																				]
																			}
																		]
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1551,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1552,
																"name": "price_set",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "undefined"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																				"qualifiedName": "PriceSetDTO"
																			},
																			"name": "PriceSetDTO",
																			"package": "@medusajs/types"
																		}
																	]
																},
																"defaultValue": "priceSetForVariant"
															},
															{
																"id": 1553,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The ID of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 1554,
																"name": "title",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The tile of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 1555,
																"name": "sku",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The SKU of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1556,
																"name": "barcode",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The barcode of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1557,
																"name": "ean",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The EAN of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1558,
																"name": "upc",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The UPC of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1559,
																"name": "allow_backorder",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Whether the product variant can be ordered when it's out of stock."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 1560,
																"name": "manage_inventory",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Whether the product variant's inventory should be managed by the core system."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 1561,
																"name": "hs_code",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The HS Code of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1562,
																"name": "origin_country",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The origin country of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1563,
																"name": "mid_code",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The MID Code of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1564,
																"name": "material",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The material of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1565,
																"name": "weight",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The weight of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 1566,
																"name": "length",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The length of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 1567,
																"name": "height",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The height of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 1568,
																"name": "width",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The width of the product variant."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 1569,
																"name": "options",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product options."
																		}
																	],
																	"modifierTags": [
																		"@expandable"
																	]
																},
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																			"qualifiedName": "ProductOptionValueDTO"
																		},
																		"name": "ProductOptionValueDTO",
																		"package": "@medusajs/types"
																	}
																}
															},
															{
																"id": 1570,
																"name": "metadata",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Holds custom data in key-value pairs."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Record"
																			},
																			"typeArguments": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "unknown"
																				}
																			],
																			"name": "Record",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 1571,
																"name": "product",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product."
																		}
																	],
																	"modifierTags": [
																		"@expandable"
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																				"qualifiedName": "ProductDTO"
																			},
																			"name": "ProductDTO",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 1572,
																"name": "product_id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The associated product id."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															},
															{
																"id": 1573,
																"name": "variant_rank",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "he ranking of the variant among other variants associated with the product."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "literal",
																			"value": null
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															{
																"id": 1574,
																"name": "created_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was created."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 1575,
																"name": "updated_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was updated."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															},
															{
																"id": 1576,
																"name": "deleted_at",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "When the product variant was deleted."
																		}
																	]
																},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	]
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1552,
																	1553,
																	1554,
																	1555,
																	1556,
																	1557,
																	1558,
																	1559,
																	1560,
																	1561,
																	1562,
																	1563,
																	1564,
																	1565,
																	1566,
																	1567,
																	1568,
																	1569,
																	1570,
																	1571,
																	1572,
																	1573,
																	1574,
																	1575,
																	1576
																]
															}
														]
													}
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 1577,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 1578,
																		"name": "price_set",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																						"qualifiedName": "PriceSetDTO"
																					},
																					"name": "PriceSetDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		},
																		"defaultValue": "priceSetForVariant"
																	},
																	{
																		"id": 1579,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1580,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1581,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1582,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1583,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1584,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1585,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1586,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1587,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1588,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1589,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1590,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1591,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1592,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1593,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1594,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1595,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 1596,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1597,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 1598,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1599,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1600,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1601,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1602,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			1578,
																			1579,
																			1580,
																			1581,
																			1582,
																			1583,
																			1584,
																			1585,
																			1586,
																			1587,
																			1588,
																			1589,
																			1590,
																			1591,
																			1592,
																			1593,
																			1594,
																			1595,
																			1596,
																			1597,
																			1598,
																			1599,
																			1600,
																			1601,
																			1602
																		]
																	}
																]
															}
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1603,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1604,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1605,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1606,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1607,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1608,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1608
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reflection",
																					"declaration": {
																						"id": 1609,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 1610,
																								"name": "price_set",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "undefined"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																												"qualifiedName": "PriceSetDTO"
																											},
																											"name": "PriceSetDTO",
																											"package": "@medusajs/types"
																										}
																									]
																								},
																								"defaultValue": "priceSetForVariant"
																							},
																							{
																								"id": 1611,
																								"name": "id",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The ID of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 1612,
																								"name": "title",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The tile of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 1613,
																								"name": "sku",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The SKU of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1614,
																								"name": "barcode",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The barcode of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1615,
																								"name": "ean",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The EAN of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1616,
																								"name": "upc",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The UPC of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1617,
																								"name": "allow_backorder",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Whether the product variant can be ordered when it's out of stock."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							},
																							{
																								"id": 1618,
																								"name": "manage_inventory",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Whether the product variant's inventory should be managed by the core system."
																										}
																									]
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							},
																							{
																								"id": 1619,
																								"name": "hs_code",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The HS Code of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1620,
																								"name": "origin_country",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The origin country of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1621,
																								"name": "mid_code",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The MID Code of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1622,
																								"name": "material",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The material of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1623,
																								"name": "weight",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The weight of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 1624,
																								"name": "length",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The length of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 1625,
																								"name": "height",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The height of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 1626,
																								"name": "width",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The width of the product variant."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 1627,
																								"name": "options",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product options."
																										}
																									],
																									"modifierTags": [
																										"@expandable"
																									]
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																											"qualifiedName": "ProductOptionValueDTO"
																										},
																										"name": "ProductOptionValueDTO",
																										"package": "@medusajs/types"
																									}
																								}
																							},
																							{
																								"id": 1628,
																								"name": "metadata",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "Holds custom data in key-value pairs."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Record"
																											},
																											"typeArguments": [
																												{
																													"type": "intrinsic",
																													"name": "string"
																												},
																												{
																													"type": "intrinsic",
																													"name": "unknown"
																												}
																											],
																											"name": "Record",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 1629,
																								"name": "product",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product."
																										}
																									],
																									"modifierTags": [
																										"@expandable"
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																												"qualifiedName": "ProductDTO"
																											},
																											"name": "ProductDTO",
																											"package": "@medusajs/types"
																										}
																									]
																								}
																							},
																							{
																								"id": 1630,
																								"name": "product_id",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "The associated product id."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "string"
																										}
																									]
																								}
																							},
																							{
																								"id": 1631,
																								"name": "variant_rank",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "he ranking of the variant among other variants associated with the product."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": null
																										},
																										{
																											"type": "intrinsic",
																											"name": "number"
																										}
																									]
																								}
																							},
																							{
																								"id": 1632,
																								"name": "created_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was created."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 1633,
																								"name": "updated_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was updated."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							},
																							{
																								"id": 1634,
																								"name": "deleted_at",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"comment": {
																									"summary": [
																										{
																											"kind": "text",
																											"text": "When the product variant was deleted."
																										}
																									]
																								},
																								"type": {
																									"type": "union",
																									"types": [
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										{
																											"type": "reference",
																											"target": {
																												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																												"qualifiedName": "Date"
																											},
																											"name": "Date",
																											"package": "typescript"
																										}
																									]
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									1610,
																									1611,
																									1612,
																									1613,
																									1614,
																									1615,
																									1616,
																									1617,
																									1618,
																									1619,
																									1620,
																									1621,
																									1622,
																									1623,
																									1624,
																									1625,
																									1626,
																									1627,
																									1628,
																									1629,
																									1630,
																									1631,
																									1632,
																									1633,
																									1634
																								]
																							}
																						]
																					}
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1604
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 1635,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 1636,
																		"name": "price_set",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																						"qualifiedName": "PriceSetDTO"
																					},
																					"name": "PriceSetDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		},
																		"defaultValue": "priceSetForVariant"
																	},
																	{
																		"id": 1637,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The ID of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1638,
																		"name": "title",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The tile of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 1639,
																		"name": "sku",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The SKU of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1640,
																		"name": "barcode",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The barcode of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1641,
																		"name": "ean",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The EAN of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1642,
																		"name": "upc",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The UPC of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1643,
																		"name": "allow_backorder",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant can be ordered when it's out of stock."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1644,
																		"name": "manage_inventory",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Whether the product variant's inventory should be managed by the core system."
																				}
																			]
																		},
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 1645,
																		"name": "hs_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The HS Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1646,
																		"name": "origin_country",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The origin country of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1647,
																		"name": "mid_code",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The MID Code of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1648,
																		"name": "material",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The material of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1649,
																		"name": "weight",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The weight of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1650,
																		"name": "length",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The length of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1651,
																		"name": "height",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The height of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1652,
																		"name": "width",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The width of the product variant."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1653,
																		"name": "options",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product options."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																					"qualifiedName": "ProductOptionValueDTO"
																				},
																				"name": "ProductOptionValueDTO",
																				"package": "@medusajs/types"
																			}
																		}
																	},
																	{
																		"id": 1654,
																		"name": "metadata",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Holds custom data in key-value pairs."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Record"
																					},
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					],
																					"name": "Record",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1655,
																		"name": "product",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product."
																				}
																			],
																			"modifierTags": [
																				"@expandable"
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			]
																		}
																	},
																	{
																		"id": 1656,
																		"name": "product_id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "The associated product id."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			]
																		}
																	},
																	{
																		"id": 1657,
																		"name": "variant_rank",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "he ranking of the variant among other variants associated with the product."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 1658,
																		"name": "created_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was created."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1659,
																		"name": "updated_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was updated."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	},
																	{
																		"id": 1660,
																		"name": "deleted_at",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "When the product variant was deleted."
																				}
																			]
																		},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Date"
																					},
																					"name": "Date",
																					"package": "typescript"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			1636,
																			1637,
																			1638,
																			1639,
																			1640,
																			1641,
																			1642,
																			1643,
																			1644,
																			1645,
																			1646,
																			1647,
																			1648,
																			1649,
																			1650,
																			1651,
																			1652,
																			1653,
																			1654,
																			1655,
																			1656,
																			1657,
																			1658,
																			1659,
																			1660
																		]
																	}
																]
															}
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1661,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1662,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1663,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1664,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1665,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1666,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reflection",
																"declaration": {
																	"id": 1667,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 1668,
																			"name": "price_set",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																							"qualifiedName": "PriceSetDTO"
																						},
																						"name": "PriceSetDTO",
																						"package": "@medusajs/types"
																					}
																				]
																			},
																			"defaultValue": "priceSetForVariant"
																		},
																		{
																			"id": 1669,
																			"name": "id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The ID of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 1670,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The tile of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 1671,
																			"name": "sku",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The SKU of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1672,
																			"name": "barcode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The barcode of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1673,
																			"name": "ean",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The EAN of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1674,
																			"name": "upc",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The UPC of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1675,
																			"name": "allow_backorder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether the product variant can be ordered when it's out of stock."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 1676,
																			"name": "manage_inventory",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether the product variant's inventory should be managed by the core system."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 1677,
																			"name": "hs_code",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The HS Code of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1678,
																			"name": "origin_country",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The origin country of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1679,
																			"name": "mid_code",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The MID Code of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1680,
																			"name": "material",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The material of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1681,
																			"name": "weight",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The weight of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 1682,
																			"name": "length",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The length of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 1683,
																			"name": "height",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The height of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 1684,
																			"name": "width",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The width of the product variant."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 1685,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product options."
																					}
																				],
																				"modifierTags": [
																					"@expandable"
																				]
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductOptionValueDTO"
																					},
																					"name": "ProductOptionValueDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		},
																		{
																			"id": 1686,
																			"name": "metadata",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Holds custom data in key-value pairs."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 1687,
																			"name": "product",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product."
																					}
																				],
																				"modifierTags": [
																					"@expandable"
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																							"qualifiedName": "ProductDTO"
																						},
																						"name": "ProductDTO",
																						"package": "@medusajs/types"
																					}
																				]
																			}
																		},
																		{
																			"id": 1688,
																			"name": "product_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The associated product id."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1689,
																			"name": "variant_rank",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "he ranking of the variant among other variants associated with the product."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 1690,
																			"name": "created_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was created."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 1691,
																			"name": "updated_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was updated."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		},
																		{
																			"id": 1692,
																			"name": "deleted_at",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "When the product variant was deleted."
																					}
																				]
																			},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Date"
																						},
																						"name": "Date",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				1668,
																				1669,
																				1670,
																				1671,
																				1672,
																				1673,
																				1674,
																				1675,
																				1676,
																				1677,
																				1678,
																				1679,
																				1680,
																				1681,
																				1682,
																				1683,
																				1684,
																				1685,
																				1686,
																				1687,
																				1688,
																				1689,
																				1690,
																				1691,
																				1692
																			]
																		}
																	]
																}
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1693,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1694,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1695,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1696,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1697,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1698,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1699,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1700,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1701,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1702,
									"name": "productVariantsUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1703,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1704,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1705,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1706,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1707,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1708,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1709,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1710,
																									"name": "product_variants",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																											"qualifiedName": "WorkflowData"
																										},
																										"typeArguments": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reflection",
																													"declaration": {
																														"id": 1711,
																														"name": "__type",
																														"variant": "declaration",
																														"kind": 65536,
																														"flags": {},
																														"children": [
																															{
																																"id": 1712,
																																"name": "price_set",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "undefined"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																																				"qualifiedName": "PriceSetDTO"
																																			},
																																			"name": "PriceSetDTO",
																																			"package": "@medusajs/types"
																																		}
																																	]
																																},
																																"defaultValue": "priceSetForVariant"
																															},
																															{
																																"id": 1713,
																																"name": "id",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The ID of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															},
																															{
																																"id": 1714,
																																"name": "title",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The tile of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "string"
																																}
																															},
																															{
																																"id": 1715,
																																"name": "sku",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The SKU of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1716,
																																"name": "barcode",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The barcode of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1717,
																																"name": "ean",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The EAN of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1718,
																																"name": "upc",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The UPC of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1719,
																																"name": "allow_backorder",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Whether the product variant can be ordered when it's out of stock."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "boolean"
																																}
																															},
																															{
																																"id": 1720,
																																"name": "manage_inventory",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Whether the product variant's inventory should be managed by the core system."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "intrinsic",
																																	"name": "boolean"
																																}
																															},
																															{
																																"id": 1721,
																																"name": "hs_code",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The HS Code of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1722,
																																"name": "origin_country",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The origin country of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1723,
																																"name": "mid_code",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The MID Code of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1724,
																																"name": "material",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The material of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1725,
																																"name": "weight",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The weight of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1726,
																																"name": "length",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The length of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1727,
																																"name": "height",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The height of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1728,
																																"name": "width",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The width of the product variant."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1729,
																																"name": "options",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product options."
																																		}
																																	],
																																	"modifierTags": [
																																		"@expandable"
																																	]
																																},
																																"type": {
																																	"type": "array",
																																	"elementType": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																			"qualifiedName": "ProductOptionValueDTO"
																																		},
																																		"name": "ProductOptionValueDTO",
																																		"package": "@medusajs/types"
																																	}
																																}
																															},
																															{
																																"id": 1730,
																																"name": "metadata",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "Holds custom data in key-value pairs."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Record"
																																			},
																																			"typeArguments": [
																																				{
																																					"type": "intrinsic",
																																					"name": "string"
																																				},
																																				{
																																					"type": "intrinsic",
																																					"name": "unknown"
																																				}
																																			],
																																			"name": "Record",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1731,
																																"name": "product",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {
																																	"isOptional": true
																																},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product."
																																		}
																																	],
																																	"modifierTags": [
																																		"@expandable"
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																				"qualifiedName": "ProductDTO"
																																			},
																																			"name": "ProductDTO",
																																			"package": "@medusajs/types"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1732,
																																"name": "product_id",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "The associated product id."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1733,
																																"name": "variant_rank",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {
																																	"isOptional": true
																																},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "he ranking of the variant among other variants associated with the product."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "literal",
																																			"value": null
																																		},
																																		{
																																			"type": "intrinsic",
																																			"name": "number"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1734,
																																"name": "created_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was created."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1735,
																																"name": "updated_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was updated."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															},
																															{
																																"id": 1736,
																																"name": "deleted_at",
																																"variant": "declaration",
																																"kind": 1024,
																																"flags": {},
																																"comment": {
																																	"summary": [
																																		{
																																			"kind": "text",
																																			"text": "When the product variant was deleted."
																																		}
																																	]
																																},
																																"type": {
																																	"type": "union",
																																	"types": [
																																		{
																																			"type": "intrinsic",
																																			"name": "string"
																																		},
																																		{
																																			"type": "reference",
																																			"target": {
																																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																				"qualifiedName": "Date"
																																			},
																																			"name": "Date",
																																			"package": "typescript"
																																		}
																																	]
																																}
																															}
																														],
																														"groups": [
																															{
																																"title": "Properties",
																																"children": [
																																	1712,
																																	1713,
																																	1714,
																																	1715,
																																	1716,
																																	1717,
																																	1718,
																																	1719,
																																	1720,
																																	1721,
																																	1722,
																																	1723,
																																	1724,
																																	1725,
																																	1726,
																																	1727,
																																	1728,
																																	1729,
																																	1730,
																																	1731,
																																	1732,
																																	1733,
																																	1734,
																																	1735,
																																	1736
																																]
																															}
																														]
																													}
																												}
																											}
																										],
																										"name": "WorkflowData",
																										"package": "@medusajs/workflows-sdk"
																									},
																									"defaultValue": "response"
																								},
																								{
																									"id": 1737,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1710,
																										1737
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1702
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1493,
						1661,
						1693,
						1696,
						1700
					]
				}
			],
			"signatures": [
				{
					"id": 1460,
					"name": "updateProductVariantsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1461,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1462,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1463,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1464,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1465,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1466,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1465,
															1466
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1467,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1468,
														"name": "price_set",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "undefined"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
																		"qualifiedName": "PriceSetDTO"
																	},
																	"name": "PriceSetDTO",
																	"package": "@medusajs/types"
																}
															]
														},
														"defaultValue": "priceSetForVariant"
													},
													{
														"id": 1469,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The ID of the product variant."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 1470,
														"name": "title",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The tile of the product variant."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 1471,
														"name": "sku",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The SKU of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1472,
														"name": "barcode",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The barcode of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1473,
														"name": "ean",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The EAN of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1474,
														"name": "upc",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The UPC of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1475,
														"name": "allow_backorder",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Whether the product variant can be ordered when it's out of stock."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													},
													{
														"id": 1476,
														"name": "manage_inventory",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Whether the product variant's inventory should be managed by the core system."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													},
													{
														"id": 1477,
														"name": "hs_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The HS Code of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1478,
														"name": "origin_country",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The origin country of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1479,
														"name": "mid_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The MID Code of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1480,
														"name": "material",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The material of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1481,
														"name": "weight",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The weight of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 1482,
														"name": "length",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The length of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 1483,
														"name": "height",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The height of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 1484,
														"name": "width",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The width of the product variant."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 1485,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product options."
																}
															],
															"modifierTags": [
																"@expandable"
															]
														},
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductOptionValueDTO"
																},
																"name": "ProductOptionValueDTO",
																"package": "@medusajs/types"
															}
														}
													},
													{
														"id": 1486,
														"name": "metadata",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Holds custom data in key-value pairs."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 1487,
														"name": "product",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product."
																}
															],
															"modifierTags": [
																"@expandable"
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															]
														}
													},
													{
														"id": 1488,
														"name": "product_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The associated product id."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													},
													{
														"id": 1489,
														"name": "variant_rank",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "he ranking of the variant among other variants associated with the product."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													},
													{
														"id": 1490,
														"name": "created_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was created."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 1491,
														"name": "updated_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was updated."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													},
													{
														"id": 1492,
														"name": "deleted_at",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When the product variant was deleted."
																}
															]
														},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Date"
																	},
																	"name": "Date",
																	"package": "typescript"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1468,
															1469,
															1470,
															1471,
															1472,
															1473,
															1474,
															1475,
															1476,
															1477,
															1478,
															1479,
															1480,
															1481,
															1482,
															1483,
															1484,
															1485,
															1486,
															1487,
															1488,
															1489,
															1490,
															1491,
															1492
														]
													}
												]
											}
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1738,
			"name": "updateProductsWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-products"
			},
			"defaultValue": "\"update-products\""
		},
		{
			"id": 1739,
			"name": "updateProductsWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1747,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1748,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1749,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1750,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1751,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1752,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
																			"qualifiedName": "UpdateProductsStepInput"
																		},
																		"name": "UpdateProductsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
																					"qualifiedName": "UpdateProductsStepInput"
																				},
																				"name": "UpdateProductsStepInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1752
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "WorkflowData"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																		"qualifiedName": "ProductDTO"
																	},
																	"name": "ProductDTO",
																	"package": "@medusajs/types"
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
														"qualifiedName": "ProductDTO"
													},
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1753,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1754,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1755,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1756,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1757,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1758,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1758
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																						"qualifiedName": "ProductDTO"
																					},
																					"name": "ProductDTO",
																					"package": "@medusajs/types"
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1754
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																"qualifiedName": "ProductDTO"
															},
															"name": "ProductDTO",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1759,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1760,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1761,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1762,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1763,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1764,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
																			"qualifiedName": "UpdateProductsStepInput"
																		},
																		"name": "UpdateProductsStepInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																	"qualifiedName": "ProductDTO"
																},
																"name": "ProductDTO",
																"package": "@medusajs/types"
															}
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1765,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1766,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1767,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1768,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1769,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1770,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1771,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1772,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1773,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1774,
									"name": "productsUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1775,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1776,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1777,
															"name": "callback",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1778,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1779,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1780,
																					"name": "input",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 1781,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1782,
																									"name": "products",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "intersection",
																										"types": [
																											{
																												"type": "array",
																												"elementType": {
																													"type": "union",
																													"types": [
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductDTO"
																															},
																															"name": "ProductDTO",
																															"package": "@medusajs/types"
																														},
																														{
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																"qualifiedName": "WorkflowData"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": {
																																		"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																		"qualifiedName": "ProductDTO"
																																	},
																																	"name": "ProductDTO",
																																	"package": "@medusajs/types"
																																}
																															],
																															"name": "WorkflowData",
																															"package": "@medusajs/workflows-sdk"
																														}
																													]
																												}
																											},
																											{
																												"type": "array",
																												"elementType": {
																													"type": "reference",
																													"target": {
																														"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																														"qualifiedName": "ProductDTO"
																													},
																													"name": "ProductDTO",
																													"package": "@medusajs/types"
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "WorkflowDataProperties"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductDTO"
																															},
																															"name": "ProductDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "WorkflowDataProperties",
																												"package": "@medusajs/workflows-sdk"
																											},
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 1783,
																													"name": "__type",
																													"variant": "declaration",
																													"kind": 65536,
																													"flags": {},
																													"children": [
																														{
																															"id": 1784,
																															"name": "config",
																															"variant": "declaration",
																															"kind": 2048,
																															"flags": {},
																															"signatures": [
																																{
																																	"id": 1785,
																																	"name": "config",
																																	"variant": "signature",
																																	"kind": 4096,
																																	"flags": {},
																																	"parameters": [
																																		{
																																			"id": 1786,
																																			"name": "config",
																																			"variant": "param",
																																			"kind": 32768,
																																			"flags": {},
																																			"type": {
																																				"type": "intersection",
																																				"types": [
																																					{
																																						"type": "reflection",
																																						"declaration": {
																																							"id": 1787,
																																							"name": "__type",
																																							"variant": "declaration",
																																							"kind": 65536,
																																							"flags": {},
																																							"children": [
																																								{
																																									"id": 1788,
																																									"name": "name",
																																									"variant": "declaration",
																																									"kind": 1024,
																																									"flags": {
																																										"isOptional": true
																																									},
																																									"type": {
																																										"type": "intrinsic",
																																										"name": "string"
																																									}
																																								}
																																							],
																																							"groups": [
																																								{
																																									"title": "Properties",
																																									"children": [
																																										1788
																																									]
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "reference",
																																						"target": {
																																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																																							"qualifiedName": "Omit"
																																						},
																																						"typeArguments": [
																																							{
																																								"type": "reference",
																																								"target": {
																																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																																									"qualifiedName": "TransactionStepsDefinition"
																																								},
																																								"name": "TransactionStepsDefinition",
																																								"package": "@medusajs/orchestration"
																																							},
																																							{
																																								"type": "union",
																																								"types": [
																																									{
																																										"type": "literal",
																																										"value": "next"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "uuid"
																																									},
																																									{
																																										"type": "literal",
																																										"value": "action"
																																									}
																																								]
																																							}
																																						],
																																						"name": "Omit",
																																						"package": "typescript"
																																					}
																																				]
																																			}
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																																			"qualifiedName": "WorkflowData"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "array",
																																				"elementType": {
																																					"type": "reference",
																																					"target": {
																																						"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																						"qualifiedName": "ProductDTO"
																																					},
																																					"name": "ProductDTO",
																																					"package": "@medusajs/types"
																																				}
																																			}
																																		],
																																		"name": "WorkflowData",
																																		"package": "@medusajs/workflows-sdk"
																																	}
																																}
																															]
																														}
																													],
																													"groups": [
																														{
																															"title": "Methods",
																															"children": [
																																1784
																															]
																														}
																													]
																												}
																											},
																											{
																												"type": "reference",
																												"target": {
																													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																													"qualifiedName": "StepFunctionReturnConfig"
																												},
																												"typeArguments": [
																													{
																														"type": "array",
																														"elementType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
																																"qualifiedName": "ProductDTO"
																															},
																															"name": "ProductDTO",
																															"package": "@medusajs/types"
																														}
																													}
																												],
																												"name": "StepFunctionReturnConfig",
																												"package": "@medusajs/workflows-sdk"
																											}
																										]
																									},
																									"defaultValue": "updatedProducts"
																								},
																								{
																									"id": 1789,
																									"name": "additional_data",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"type": {
																										"type": "union",
																										"types": [
																											{
																												"type": "intrinsic",
																												"name": "undefined"
																											},
																											{
																												"type": "unknown",
																												"name": "(Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>"
																											}
																										]
																									},
																									"defaultValue": "input.additional_data"
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1782,
																										1789
																									]
																								}
																							]
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1774
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1747,
						1759,
						1765,
						1768,
						1772
					]
				}
			],
			"signatures": [
				{
					"id": 1740,
					"name": "updateProductsWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1741,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1742,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1743,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1744,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1745,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1746,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1745,
															1746
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
											"qualifiedName": "UpdateProductsStepInput"
										},
										"name": "UpdateProductsStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "ProductDTO"
											},
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1864,
			"name": "upsertVariantPricesWorkflowId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "upsert-variant-prices"
			},
			"defaultValue": "\"upsert-variant-prices\""
		},
		{
			"id": 1865,
			"name": "upsertVariantPricesWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 1873,
					"name": "runAsStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/execute-another-workflow)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1874,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1875,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow's result"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1876,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1877,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1878,
															"name": "input",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The workflow's input."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
																					"qualifiedName": "WorkflowInput"
																				},
																				"name": "WorkflowInput",
																				"package": "@medusajs/core-flows"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1878
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "WorkflowDataProperties"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowDataProperties",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1879,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1880,
															"name": "config",
															"variant": "declaration",
															"kind": 2048,
															"flags": {},
															"signatures": [
																{
																	"id": 1881,
																	"name": "config",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1882,
																			"name": "config",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 1883,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 1884,
																									"name": "name",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										1884
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Omit"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																									"qualifiedName": "TransactionStepsDefinition"
																								},
																								"name": "TransactionStepsDefinition",
																								"package": "@medusajs/orchestration"
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "next"
																									},
																									{
																										"type": "literal",
																										"value": "uuid"
																									},
																									{
																										"type": "literal",
																										"value": "action"
																									}
																								]
																							}
																						],
																						"name": "Omit",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "WorkflowData"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"children": [
																1880
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "StepFunctionReturnConfig"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "StepFunctionReturnConfig",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1885,
					"name": "run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method executes a workflow."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1886,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1887,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Details of the workflow's execution, including its result."
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 1888,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1889,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 1890,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The options to execute the workflow."
													}
												]
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "namedTupleMember",
														"name": "args",
														"isOptional": true,
														"element": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																"qualifiedName": "FlowRunOptions"
															},
															"typeArguments": [
																{
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
																			"qualifiedName": "WorkflowInput"
																		},
																		"name": "WorkflowInput",
																		"package": "@medusajs/core-flows"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 340,
																		"name": "TDataOverride",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "FlowRunOptions",
															"package": "@medusajs/workflows-sdk"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "WorkflowResult"
												},
												"typeArguments": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "undefined"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "unknown"
														},
														"falseType": {
															"type": "reference",
															"target": 341,
															"name": "TResultOverride",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "WorkflowResult",
												"package": "@medusajs/workflows-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1891,
					"name": "getName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method retrieves the workflow's name."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1892,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1893,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 1894,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This method sets the workflow's configurations."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1895,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 1896,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1897,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1898,
					"name": "hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/v2/advanced-development/workflows/add-workflow-hook#how-to-consume-a-hook)."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1899,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1873,
						1885,
						1891,
						1894,
						1898
					]
				}
			],
			"signatures": [
				{
					"id": 1866,
					"name": "upsertVariantPricesWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 1867,
							"name": "TDataOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 1868,
							"name": "TResultOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 1869,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
											"qualifiedName": "MedusaContainer"
										},
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1870,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1871,
														"name": "__joinerConfig",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleJoinerConfig"
															},
															"name": "ModuleJoinerConfig",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 1872,
														"name": "__definition",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																"qualifiedName": "ModuleDefinition"
															},
															"name": "ModuleDefinition",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1871,
															1872
														]
													}
												]
											}
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
											"qualifiedName": "LocalWorkflow"
										},
										"name": "LocalWorkflow",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "run"
											},
											{
												"type": "literal",
												"value": "registerStepSuccess"
											},
											{
												"type": "literal",
												"value": "registerStepFailure"
											},
											{
												"type": "literal",
												"value": "cancel"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
									"qualifiedName": "ExportedWorkflow"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
											"qualifiedName": "WorkflowInput"
										},
										"name": "WorkflowInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": 319,
										"name": "TDataOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 320,
										"name": "TResultOverride",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ExportedWorkflow",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Type Aliases",
			"children": [
				13
			]
		},
		{
			"title": "Variables",
			"children": [
				157,
				127,
				67,
				193,
				163,
				97,
				1,
				61,
				151,
				91,
				217,
				187,
				121,
				31,
				223,
				49,
				37,
				262,
				250,
				139,
				79,
				205,
				175,
				109,
				19,
				305,
				316,
				352,
				446,
				399,
				482,
				534,
				638,
				586,
				690,
				970,
				1016,
				1055,
				1133,
				1094,
				1172,
				1211,
				1790,
				1826,
				1250,
				1302,
				1406,
				1354,
				1458,
				1738,
				1864
			]
		},
		{
			"title": "Functions",
			"children": [
				158,
				128,
				68,
				194,
				164,
				98,
				2,
				62,
				152,
				92,
				218,
				188,
				122,
				32,
				224,
				50,
				38,
				263,
				251,
				140,
				80,
				206,
				176,
				110,
				20,
				306,
				317,
				353,
				447,
				400,
				483,
				535,
				639,
				587,
				691,
				971,
				1017,
				1056,
				1134,
				1095,
				1173,
				1212,
				1791,
				1827,
				1251,
				1303,
				1407,
				1355,
				1459,
				1739,
				1865
			]
		}
	],
	"packageName": "@medusajs/core-flows",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-products.ts",
			"qualifiedName": "createProductsStepId"
		},
		"2": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-products.ts",
			"qualifiedName": "createProductsStep"
		},
		"3": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductsStep"
		},
		"4": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"5": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"6": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"7": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"8": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"9": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"10": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"11": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"12": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"13": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "UpdateProductsStepInput"
		},
		"14": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "__type"
		},
		"15": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "__type.selector"
		},
		"16": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "__type.update"
		},
		"17": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "__type"
		},
		"18": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "__type.products"
		},
		"19": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "updateProductsStepId"
		},
		"20": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-products.ts",
			"qualifiedName": "updateProductsStep"
		},
		"21": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductsStep"
		},
		"22": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"23": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"25": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"26": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"27": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"28": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"29": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"30": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"31": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-products.ts",
			"qualifiedName": "deleteProductsStepId"
		},
		"32": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-products.ts",
			"qualifiedName": "deleteProductsStep"
		},
		"33": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductsStep"
		},
		"34": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"35": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"36": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"37": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-products.ts",
			"qualifiedName": "getProductsStepId"
		},
		"38": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-products.ts",
			"qualifiedName": "getProductsStep"
		},
		"39": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "getProductsStep"
		},
		"40": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"41": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"42": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"43": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"44": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"45": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"46": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"47": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"48": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"49": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-all-products.ts",
			"qualifiedName": "getAllProductsStepId"
		},
		"50": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/get-all-products.ts",
			"qualifiedName": "getAllProductsStep"
		},
		"51": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "getAllProductsStep"
		},
		"52": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"53": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"60": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"61": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-variant-pricing-link.ts",
			"qualifiedName": "createVariantPricingLinkStepId"
		},
		"62": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-variant-pricing-link.ts",
			"qualifiedName": "createVariantPricingLinkStep"
		},
		"63": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createVariantPricingLinkStep"
		},
		"64": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"65": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"66": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"67": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-options.ts",
			"qualifiedName": "createProductOptionsStepId"
		},
		"68": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-options.ts",
			"qualifiedName": "createProductOptionsStep"
		},
		"69": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductOptionsStep"
		},
		"70": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"71": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"72": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"73": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"74": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"75": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"76": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"77": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"78": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"79": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-options.ts",
			"qualifiedName": "updateProductOptionsStepId"
		},
		"80": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-options.ts",
			"qualifiedName": "updateProductOptionsStep"
		},
		"81": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductOptionsStep"
		},
		"82": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"83": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"85": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"86": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"87": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"88": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"89": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"90": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"91": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-options.ts",
			"qualifiedName": "deleteProductOptionsStepId"
		},
		"92": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-options.ts",
			"qualifiedName": "deleteProductOptionsStep"
		},
		"93": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductOptionsStep"
		},
		"94": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"95": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"96": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"97": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-variants.ts",
			"qualifiedName": "createProductVariantsStepId"
		},
		"98": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-variants.ts",
			"qualifiedName": "createProductVariantsStep"
		},
		"99": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductVariantsStep"
		},
		"100": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"101": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"102": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"103": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"104": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"105": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"106": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"107": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"108": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"109": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-variants.ts",
			"qualifiedName": "updateProductVariantsStepId"
		},
		"110": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-variants.ts",
			"qualifiedName": "updateProductVariantsStep"
		},
		"111": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductVariantsStep"
		},
		"112": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"113": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"114": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"115": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"116": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"117": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"118": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"119": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"120": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"121": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-variants.ts",
			"qualifiedName": "deleteProductVariantsStepId"
		},
		"122": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-variants.ts",
			"qualifiedName": "deleteProductVariantsStep"
		},
		"123": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductVariantsStep"
		},
		"124": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"125": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"126": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"127": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-collections.ts",
			"qualifiedName": "createCollectionsStepId"
		},
		"128": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-collections.ts",
			"qualifiedName": "createCollectionsStep"
		},
		"129": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createCollectionsStep"
		},
		"130": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"131": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"132": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"133": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"134": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"135": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"136": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"137": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"138": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"139": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-collections.ts",
			"qualifiedName": "updateCollectionsStepId"
		},
		"140": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-collections.ts",
			"qualifiedName": "updateCollectionsStep"
		},
		"141": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateCollectionsStep"
		},
		"142": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"143": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"144": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"145": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"146": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"147": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"148": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"149": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"150": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"151": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-collections.ts",
			"qualifiedName": "deleteCollectionsStepId"
		},
		"152": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-collections.ts",
			"qualifiedName": "deleteCollectionsStep"
		},
		"153": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteCollectionsStep"
		},
		"154": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"155": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"156": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"157": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/batch-link-products-collection.ts",
			"qualifiedName": "batchLinkProductsToCollectionStepId"
		},
		"158": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/batch-link-products-collection.ts",
			"qualifiedName": "batchLinkProductsToCollectionStep"
		},
		"159": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "batchLinkProductsToCollectionStep"
		},
		"160": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"161": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"162": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"163": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-types.ts",
			"qualifiedName": "createProductTypesStepId"
		},
		"164": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-types.ts",
			"qualifiedName": "createProductTypesStep"
		},
		"165": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductTypesStep"
		},
		"166": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"167": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"169": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"170": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"171": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"172": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"173": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"174": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"175": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-types.ts",
			"qualifiedName": "updateProductTypesStepId"
		},
		"176": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-types.ts",
			"qualifiedName": "updateProductTypesStep"
		},
		"177": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductTypesStep"
		},
		"178": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"179": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"180": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"181": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"182": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"183": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"184": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"185": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"186": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"187": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-types.ts",
			"qualifiedName": "deleteProductTypesStepId"
		},
		"188": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-types.ts",
			"qualifiedName": "deleteProductTypesStep"
		},
		"189": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductTypesStep"
		},
		"190": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"191": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"192": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"193": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-tags.ts",
			"qualifiedName": "createProductTagsStepId"
		},
		"194": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/create-product-tags.ts",
			"qualifiedName": "createProductTagsStep"
		},
		"195": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductTagsStep"
		},
		"196": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"197": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"198": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"199": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"200": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"201": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"202": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"203": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"204": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"205": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-tags.ts",
			"qualifiedName": "updateProductTagsStepId"
		},
		"206": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/update-product-tags.ts",
			"qualifiedName": "updateProductTagsStep"
		},
		"207": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductTagsStep"
		},
		"208": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"209": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"211": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"212": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"213": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"214": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"215": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"216": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"217": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-tags.ts",
			"qualifiedName": "deleteProductTagsStepId"
		},
		"218": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/delete-product-tags.ts",
			"qualifiedName": "deleteProductTagsStep"
		},
		"219": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductTagsStep"
		},
		"220": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"221": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"222": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"223": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "generateProductCsvStepId"
		},
		"224": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "generateProductCsvStep"
		},
		"225": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "generateProductCsvStep"
		},
		"226": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"227": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "id"
		},
		"229": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "filename"
		},
		"230": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object"
		},
		"231": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.id"
		},
		"232": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.filename"
		},
		"233": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object"
		},
		"234": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.id"
		},
		"235": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.filename"
		},
		"236": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"238": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"239": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"240": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"241": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"242": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object"
		},
		"243": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.id"
		},
		"244": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.filename"
		},
		"245": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object"
		},
		"246": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.id"
		},
		"247": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/generate-product-csv.ts",
			"qualifiedName": "__object.filename"
		},
		"248": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"249": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"250": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/parse-product-csv.ts",
			"qualifiedName": "parseProductCsvStepId"
		},
		"251": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/parse-product-csv.ts",
			"qualifiedName": "parseProductCsvStep"
		},
		"252": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "parseProductCsvStep"
		},
		"253": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"254": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"256": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"257": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"258": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"259": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"260": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"261": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"262": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "groupProductsForBatchStepId"
		},
		"263": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "groupProductsForBatchStep"
		},
		"264": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "groupProductsForBatchStep"
		},
		"265": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"266": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"267": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"268": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"269": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"270": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "create"
		},
		"272": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "update"
		},
		"273": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"274": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"275": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"276": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"277": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object"
		},
		"278": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.create"
		},
		"279": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.update"
		},
		"280": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"281": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"282": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object"
		},
		"283": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.create"
		},
		"284": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.update"
		},
		"285": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"286": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"287": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"288": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"289": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"290": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"291": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"292": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"293": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object"
		},
		"294": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.create"
		},
		"295": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.update"
		},
		"296": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"297": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"298": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object"
		},
		"299": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.create"
		},
		"300": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__object.update"
		},
		"301": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type"
		},
		"302": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/group-products-for-batch.ts",
			"qualifiedName": "__type.id"
		},
		"303": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"304": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"305": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/wait-confirmation-product-import.ts",
			"qualifiedName": "waitConfirmationProductImportStepId"
		},
		"306": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/steps/wait-confirmation-product-import.ts",
			"qualifiedName": "waitConfirmationProductImportStep"
		},
		"307": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "waitConfirmationProductImportStep"
		},
		"308": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"309": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"310": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"311": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"312": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"313": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"314": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"315": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"316": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-link-products-collection.ts",
			"qualifiedName": "batchLinkProductsToCollectionWorkflowId"
		},
		"317": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-link-products-collection.ts",
			"qualifiedName": "batchLinkProductsToCollectionWorkflow"
		},
		"318": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "batchLinkProductsToCollectionWorkflow"
		},
		"319": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"320": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"321": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"322": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"323": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"324": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"325": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"326": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"329": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"330": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"331": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"332": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"333": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"334": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"335": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"337": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"338": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"339": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"340": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"341": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"342": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"343": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"344": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"345": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"347": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"348": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"350": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"351": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"352": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-product-variants.ts",
			"qualifiedName": "batchProductVariantsWorkflowId"
		},
		"353": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-product-variants.ts",
			"qualifiedName": "batchProductVariantsWorkflow"
		},
		"354": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "batchProductVariantsWorkflow"
		},
		"355": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"356": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"357": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"361": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"362": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"363": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"364": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"365": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"366": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"367": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"368": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "created"
		},
		"369": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "updated"
		},
		"370": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "deleted"
		},
		"371": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"372": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"373": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"374": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"375": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"376": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"377": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"378": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"379": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"380": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"381": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"382": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"383": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"385": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"386": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"387": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"389": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"390": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"391": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"392": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"394": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"395": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"396": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"398": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"399": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-products.ts",
			"qualifiedName": "batchProductsWorkflowId"
		},
		"400": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-products.ts",
			"qualifiedName": "batchProductsWorkflow"
		},
		"401": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "batchProductsWorkflow"
		},
		"402": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"403": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"404": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"406": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"407": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"412": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"414": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"415": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "created"
		},
		"416": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "updated"
		},
		"417": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "deleted"
		},
		"418": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"419": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"420": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"421": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"422": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"423": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"424": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"425": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"442": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"443": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"445": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"446": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-products-in-category.ts",
			"qualifiedName": "batchLinkProductsToCategoryWorkflowId"
		},
		"447": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/batch-products-in-category.ts",
			"qualifiedName": "batchLinkProductsToCategoryWorkflow"
		},
		"448": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "batchLinkProductsToCategoryWorkflow"
		},
		"449": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"450": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"451": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"452": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"453": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"454": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"455": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"456": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"457": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"458": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"459": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"460": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"461": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"462": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"463": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"464": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"465": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"466": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"467": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"468": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"469": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"470": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"471": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"472": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"473": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"474": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"475": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"476": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"477": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"478": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"479": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"480": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"481": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"482": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
			"qualifiedName": "createCollectionsWorkflowId"
		},
		"483": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
			"qualifiedName": "createCollectionsWorkflow"
		},
		"484": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createCollectionsWorkflow"
		},
		"485": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"486": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"487": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"488": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"490": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"492": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"499": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"500": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"501": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"503": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"504": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"505": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"506": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"513": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"514": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"518": {
			"sourceFileName": "",
			"qualifiedName": "collectionsCreated"
		},
		"519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"525": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
			"qualifiedName": "__object"
		},
		"526": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
			"qualifiedName": "__object.collections"
		},
		"527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"533": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-collections.ts",
			"qualifiedName": "__object.additional_data"
		},
		"534": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
			"qualifiedName": "createProductOptionsWorkflowId"
		},
		"535": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
			"qualifiedName": "createProductOptionsWorkflow"
		},
		"536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductOptionsWorkflow"
		},
		"537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"538": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"540": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"541": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"542": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"543": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"544": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"550": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"551": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"552": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"553": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"554": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"555": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"556": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"557": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"558": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"559": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"560": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"561": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"562": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"563": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"564": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"565": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"566": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"567": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"568": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"569": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"sourceFileName": "",
			"qualifiedName": "productOptionsCreated"
		},
		"571": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"572": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"573": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"574": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"575": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"576": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"577": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
			"qualifiedName": "__object"
		},
		"578": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
			"qualifiedName": "__object.product_options"
		},
		"579": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"580": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"581": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"582": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"583": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"585": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-options.ts",
			"qualifiedName": "__object.additional_data"
		},
		"586": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
			"qualifiedName": "createProductTypesWorkflowId"
		},
		"587": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
			"qualifiedName": "createProductTypesWorkflow"
		},
		"588": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductTypesWorkflow"
		},
		"589": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"590": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"591": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"592": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"594": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"595": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"596": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"597": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"598": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"599": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"600": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"601": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"602": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"603": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"604": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"605": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"609": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"610": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"611": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"612": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"613": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"614": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"615": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"616": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"617": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"618": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"619": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"620": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"621": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"622": {
			"sourceFileName": "",
			"qualifiedName": "productTypesCreated"
		},
		"623": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"624": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"625": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"626": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"627": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"628": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"629": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
			"qualifiedName": "__object"
		},
		"630": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
			"qualifiedName": "__object.product_types"
		},
		"631": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"632": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"633": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"634": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"635": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"636": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"637": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-types.ts",
			"qualifiedName": "__object.additional_data"
		},
		"638": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
			"qualifiedName": "createProductTagsWorkflowId"
		},
		"639": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
			"qualifiedName": "createProductTagsWorkflow"
		},
		"640": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductTagsWorkflow"
		},
		"641": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"642": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"643": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"644": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"645": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"646": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"655": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"656": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"657": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"658": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"659": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"660": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"667": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"668": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"669": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"670": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"671": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"672": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"673": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"674": {
			"sourceFileName": "",
			"qualifiedName": "productTagsCreated"
		},
		"675": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"677": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"678": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"679": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"680": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"681": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
			"qualifiedName": "__object"
		},
		"682": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
			"qualifiedName": "__object.product_tags"
		},
		"683": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"684": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"685": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"686": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"687": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"688": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"689": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-tags.ts",
			"qualifiedName": "__object.additional_data"
		},
		"690": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "createProductVariantsWorkflowId"
		},
		"691": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "createProductVariantsWorkflow"
		},
		"692": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductVariantsWorkflow"
		},
		"693": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"694": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"695": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"696": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"697": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"698": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"699": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"700": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"701": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"702": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"703": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"704": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"705": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"706": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"707": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"708": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"709": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"710": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"711": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"712": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"713": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"714": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"715": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"716": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"717": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"718": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"719": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"720": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"721": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"722": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"723": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"724": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"725": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"726": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"727": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"731": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"732": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"733": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"734": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"735": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"736": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"737": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"738": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"739": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"740": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"741": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"742": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"743": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"744": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"745": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"746": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"747": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"748": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"749": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"750": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"751": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"752": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"753": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"754": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"755": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"756": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"757": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"758": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"759": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"760": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"761": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"762": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"763": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"764": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"765": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"766": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"767": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"768": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"769": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"770": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"771": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"772": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"773": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"774": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"775": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"776": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"777": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"778": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"779": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"780": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"781": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"782": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"783": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"784": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"785": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"786": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"787": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"788": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"789": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"790": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"791": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"792": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"793": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"794": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"795": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"796": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"797": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"798": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"799": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"800": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"801": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"802": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"803": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"804": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"805": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"806": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"807": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"808": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"809": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"810": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"811": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"812": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"813": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"814": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"815": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"816": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"817": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"818": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"819": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"820": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"821": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"822": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"823": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"824": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"825": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"826": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"827": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"828": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"829": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"830": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"831": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"832": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"833": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"834": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"835": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"836": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"837": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"838": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"839": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"840": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"841": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"842": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"843": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"844": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"845": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"846": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"847": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"848": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"849": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"850": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"851": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"852": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"853": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"854": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"855": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"856": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"857": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"858": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"859": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"860": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"861": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"862": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"863": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"864": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"865": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"866": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"867": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"868": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"869": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"870": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"871": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"872": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"873": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"874": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"875": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"876": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"877": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"878": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"879": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"880": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"881": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"882": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"883": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"884": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"885": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"886": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"887": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"888": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"889": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"890": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"891": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"892": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"893": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"894": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"895": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"896": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"897": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"898": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"899": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"900": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"901": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"902": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"903": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"904": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"905": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"906": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"907": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"908": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"909": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"910": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"911": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"912": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"913": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"914": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"915": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"916": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"917": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"918": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"919": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"920": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"921": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"922": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"923": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"924": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"925": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"926": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"927": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"928": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"929": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"930": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"931": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"932": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"933": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"934": {
			"sourceFileName": "",
			"qualifiedName": "productVariantsCreated"
		},
		"935": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"936": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"938": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"939": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"940": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"941": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"942": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.product_variants"
		},
		"943": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object"
		},
		"944": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.prices"
		},
		"945": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"946": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"947": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"948": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"949": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"950": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"951": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"952": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"953": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"954": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"955": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"956": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"957": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"958": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"959": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"960": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"961": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"962": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"963": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"964": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"965": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"966": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"967": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"968": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"969": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-product-variants.ts",
			"qualifiedName": "__object.additional_data"
		},
		"970": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
			"qualifiedName": "createProductsWorkflowId"
		},
		"971": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
			"qualifiedName": "createProductsWorkflow"
		},
		"972": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createProductsWorkflow"
		},
		"973": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"974": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"975": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"976": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"977": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"979": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"980": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"981": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"982": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"983": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"984": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"985": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"986": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"987": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"988": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"989": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"990": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"991": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"992": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"993": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"994": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"995": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"996": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"997": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"998": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"999": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1000": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1001": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1002": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1003": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1004": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1005": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1006": {
			"sourceFileName": "",
			"qualifiedName": "productsCreated"
		},
		"1007": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1008": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1009": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1010": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1011": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1012": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1013": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
			"qualifiedName": "__object"
		},
		"1014": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
			"qualifiedName": "__object.products"
		},
		"1015": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/create-products.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1016": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
			"qualifiedName": "deleteCollectionsWorkflowId"
		},
		"1017": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
			"qualifiedName": "deleteCollectionsWorkflow"
		},
		"1018": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteCollectionsWorkflow"
		},
		"1019": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1020": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1021": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1023": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1024": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1025": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1026": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1027": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1028": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1029": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1030": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1031": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1032": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1033": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1034": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1035": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1036": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1037": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1038": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1039": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1040": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1041": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1042": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1043": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1044": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1045": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1046": {
			"sourceFileName": "",
			"qualifiedName": "collectionsDeleted"
		},
		"1047": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1048": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1049": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1050": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1051": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1052": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1053": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
			"qualifiedName": "__object"
		},
		"1054": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-collections.ts",
			"qualifiedName": "__object.ids"
		},
		"1055": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
			"qualifiedName": "deleteProductOptionsWorkflowId"
		},
		"1056": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
			"qualifiedName": "deleteProductOptionsWorkflow"
		},
		"1057": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductOptionsWorkflow"
		},
		"1058": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1059": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1060": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1061": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1062": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1063": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1064": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1065": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1066": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1067": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1068": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1069": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1070": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1071": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1072": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1073": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1074": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1075": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1076": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1077": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1078": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1079": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1080": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1081": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1082": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1083": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1084": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1085": {
			"sourceFileName": "",
			"qualifiedName": "productOptionsDeleted"
		},
		"1086": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1087": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1088": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1089": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1090": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1091": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1092": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
			"qualifiedName": "__object"
		},
		"1093": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-options.ts",
			"qualifiedName": "__object.ids"
		},
		"1094": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
			"qualifiedName": "deleteProductTypesWorkflowId"
		},
		"1095": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
			"qualifiedName": "deleteProductTypesWorkflow"
		},
		"1096": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductTypesWorkflow"
		},
		"1097": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1098": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1099": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1100": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1101": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1102": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1103": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1104": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1105": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1106": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1107": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1108": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1109": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1110": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1111": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1112": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1113": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1114": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1115": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1116": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1117": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1118": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1119": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1120": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1121": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1122": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1123": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1124": {
			"sourceFileName": "",
			"qualifiedName": "productTypesDeleted"
		},
		"1125": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1126": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1127": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1128": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1129": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1130": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1131": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
			"qualifiedName": "__object"
		},
		"1132": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-types.ts",
			"qualifiedName": "__object.ids"
		},
		"1133": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
			"qualifiedName": "deleteProductTagsWorkflowId"
		},
		"1134": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
			"qualifiedName": "deleteProductTagsWorkflow"
		},
		"1135": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductTagsWorkflow"
		},
		"1136": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1137": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1138": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1142": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1143": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1144": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1145": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1146": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1147": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1148": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1149": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1150": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1151": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1152": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1153": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1154": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1155": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1156": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1157": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1158": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1159": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1160": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1161": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1162": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1163": {
			"sourceFileName": "",
			"qualifiedName": "productTagsDeleted"
		},
		"1164": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1165": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1166": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1167": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1168": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1169": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1170": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
			"qualifiedName": "__object"
		},
		"1171": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-tags.ts",
			"qualifiedName": "__object.ids"
		},
		"1172": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
			"qualifiedName": "deleteProductVariantsWorkflowId"
		},
		"1173": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
			"qualifiedName": "deleteProductVariantsWorkflow"
		},
		"1174": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductVariantsWorkflow"
		},
		"1175": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1176": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1177": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1178": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1179": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1180": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1181": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1182": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1183": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1184": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1185": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1186": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1187": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1188": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1189": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1190": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1191": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1192": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1193": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1194": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1195": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1196": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1197": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1198": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1199": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1200": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1201": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1202": {
			"sourceFileName": "",
			"qualifiedName": "productVariantsDeleted"
		},
		"1203": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1204": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1205": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1206": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1207": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1208": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1209": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1210": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-product-variants.ts",
			"qualifiedName": "__object.ids"
		},
		"1211": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
			"qualifiedName": "deleteProductsWorkflowId"
		},
		"1212": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
			"qualifiedName": "deleteProductsWorkflow"
		},
		"1213": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "deleteProductsWorkflow"
		},
		"1214": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1215": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1216": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1217": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1218": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1219": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1220": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1221": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1222": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1223": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1224": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1225": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1226": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1227": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1228": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1229": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1230": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1231": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1232": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1233": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1234": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1235": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1236": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1237": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1238": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1239": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1240": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1241": {
			"sourceFileName": "",
			"qualifiedName": "productsDeleted"
		},
		"1242": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1243": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1244": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1245": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1246": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1247": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1248": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
			"qualifiedName": "__object"
		},
		"1249": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/delete-products.ts",
			"qualifiedName": "__object.ids"
		},
		"1250": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
			"qualifiedName": "updateCollectionsWorkflowId"
		},
		"1251": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
			"qualifiedName": "updateCollectionsWorkflow"
		},
		"1252": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateCollectionsWorkflow"
		},
		"1253": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1254": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1255": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1259": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1260": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1261": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1262": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1263": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1264": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1265": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1266": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1267": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1268": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1269": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1270": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1271": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1272": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1273": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1274": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1275": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1276": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1277": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1278": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1279": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1280": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1281": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1282": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1283": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1284": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1285": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1286": {
			"sourceFileName": "",
			"qualifiedName": "collectionsUpdated"
		},
		"1287": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1288": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1289": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1290": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1291": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1292": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1293": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
			"qualifiedName": "__object"
		},
		"1294": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1295": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-collections.ts",
			"qualifiedName": "__object.collections"
		},
		"1296": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1297": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1298": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1299": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1300": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1301": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1302": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
			"qualifiedName": "updateProductOptionsWorkflowId"
		},
		"1303": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
			"qualifiedName": "updateProductOptionsWorkflow"
		},
		"1304": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductOptionsWorkflow"
		},
		"1305": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1306": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1307": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1308": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1309": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1311": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1312": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1313": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1314": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1315": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1316": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1317": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1318": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1319": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1320": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1321": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1322": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1323": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1324": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1325": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1326": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1327": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1328": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1329": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1330": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1331": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1332": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1333": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1334": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1335": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1336": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1337": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1338": {
			"sourceFileName": "",
			"qualifiedName": "productOptionsUpdated"
		},
		"1339": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1340": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1341": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1342": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1343": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1344": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1345": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
			"qualifiedName": "__object"
		},
		"1346": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
			"qualifiedName": "__object.product_options"
		},
		"1347": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1348": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1349": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1350": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1351": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1352": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1353": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-options.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1354": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
			"qualifiedName": "updateProductTypesWorkflowId"
		},
		"1355": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
			"qualifiedName": "updateProductTypesWorkflow"
		},
		"1356": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductTypesWorkflow"
		},
		"1357": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1358": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1359": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1361": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1362": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1363": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1364": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1365": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1366": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1367": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1368": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1369": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1370": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1371": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1372": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1373": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1374": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1375": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1376": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1377": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1378": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1379": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1380": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1381": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1382": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1383": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1384": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1385": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1386": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1387": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1388": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1389": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1390": {
			"sourceFileName": "",
			"qualifiedName": "productTypesUpdated"
		},
		"1391": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1392": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1393": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1394": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1395": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1396": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1397": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
			"qualifiedName": "__object"
		},
		"1398": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
			"qualifiedName": "__object.product_types"
		},
		"1399": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1400": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1401": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1402": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1403": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1404": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1405": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-types.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1406": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
			"qualifiedName": "updateProductTagsWorkflowId"
		},
		"1407": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
			"qualifiedName": "updateProductTagsWorkflow"
		},
		"1408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductTagsWorkflow"
		},
		"1409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1412": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1413": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1414": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1415": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1416": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1417": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1419": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1420": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1421": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1422": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1423": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1424": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1425": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1440": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1441": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1442": {
			"sourceFileName": "",
			"qualifiedName": "productTagsUpdated"
		},
		"1443": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1444": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1445": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1446": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1447": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1448": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1449": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
			"qualifiedName": "__object"
		},
		"1450": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
			"qualifiedName": "__object.product_tags"
		},
		"1451": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1452": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1453": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1454": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1455": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1456": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1457": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-tags.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1458": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "updateProductVariantsWorkflowId"
		},
		"1459": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "updateProductVariantsWorkflow"
		},
		"1460": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductVariantsWorkflow"
		},
		"1461": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1462": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1463": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1464": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1465": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1466": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1467": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1468": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1469": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1470": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1471": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1472": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1473": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1474": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1475": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1476": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1477": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1478": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1479": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1480": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1481": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1482": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1483": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1484": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1485": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1486": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1487": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1488": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1489": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1490": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1491": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1492": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1499": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1500": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1501": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1502": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1503": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1504": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1505": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1506": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1507": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1508": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1509": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1510": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1511": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1512": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1513": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1514": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1515": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1516": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1517": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1518": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1519": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1520": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1521": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1522": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1523": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1524": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1525": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1526": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1527": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1528": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1529": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1530": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1531": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1532": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1533": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1534": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1535": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1536": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1537": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1538": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1539": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1540": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1541": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1542": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1543": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1544": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1545": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1546": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1547": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1548": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1549": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1550": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1551": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1552": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1553": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1554": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1555": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1556": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1557": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1558": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1559": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1560": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1561": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1562": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1563": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1564": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1565": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1566": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1567": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1568": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1569": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1570": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1571": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1572": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1573": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1574": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1575": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1576": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1577": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1578": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1579": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1580": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1581": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1582": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1583": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1584": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1585": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1586": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1587": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1588": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1589": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1590": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1591": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1592": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1593": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1594": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1595": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1596": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1597": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1598": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1599": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1600": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1601": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1602": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1603": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1604": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1605": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1606": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1609": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1610": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1611": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1612": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1613": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1614": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1615": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1616": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1617": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1618": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1619": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1620": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1621": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1622": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1623": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1624": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1625": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1626": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1627": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1628": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1629": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1630": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1631": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1632": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1633": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1634": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1635": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1636": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1637": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1638": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1639": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1640": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1641": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1642": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1643": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1644": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1645": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1646": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1647": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1648": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1649": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1650": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1651": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1652": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1653": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1654": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1655": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1656": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1657": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1658": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1659": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1660": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1667": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1668": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1669": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1670": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1671": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1672": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1673": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1674": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1675": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1676": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1677": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1678": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1679": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1680": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1681": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1682": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1683": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1684": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1685": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1686": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1687": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1688": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1689": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1690": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1691": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1692": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1693": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1694": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1695": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1696": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1697": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1698": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1699": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1700": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1701": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1702": {
			"sourceFileName": "",
			"qualifiedName": "productVariantsUpdated"
		},
		"1703": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1704": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1705": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1706": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1707": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1708": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1709": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1710": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.product_variants"
		},
		"1711": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object"
		},
		"1712": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.price_set"
		},
		"1713": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"1714": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"1715": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"1716": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"1717": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"1718": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"1719": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"1720": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"1721": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"1722": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"1723": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"1724": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"1725": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"1726": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"1727": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"1728": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"1729": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"1730": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"1731": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"1732": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"1733": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"1734": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"1735": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"1736": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"1737": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-product-variants.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1738": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
			"qualifiedName": "updateProductsWorkflowId"
		},
		"1739": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
			"qualifiedName": "updateProductsWorkflow"
		},
		"1740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateProductsWorkflow"
		},
		"1741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1744": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1745": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1746": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1751": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1753": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1754": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1755": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1756": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1757": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1758": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1759": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1760": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1761": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1762": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1763": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1764": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1765": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1766": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1767": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1768": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1769": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1770": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1771": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1772": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1773": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1774": {
			"sourceFileName": "",
			"qualifiedName": "productsUpdated"
		},
		"1775": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1776": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1777": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "callback"
		},
		"1778": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1779": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1780": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"1781": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
			"qualifiedName": "__object"
		},
		"1782": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
			"qualifiedName": "__object.products"
		},
		"1783": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1784": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1785": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1786": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1787": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1788": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1789": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/update-products.ts",
			"qualifiedName": "__object.additional_data"
		},
		"1790": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/export-products.ts",
			"qualifiedName": "exportProductsWorkflowId"
		},
		"1791": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/export-products.ts",
			"qualifiedName": "exportProductsWorkflow"
		},
		"1792": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "exportProductsWorkflow"
		},
		"1793": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1794": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1795": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1796": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1797": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1798": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1799": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1800": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1801": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1802": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1803": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1804": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1805": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1806": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1807": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1808": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1809": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1810": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1811": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1812": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1813": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1814": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1815": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1816": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1817": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1818": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1819": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1820": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1821": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1822": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1823": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1824": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1825": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1826": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/import-products.ts",
			"qualifiedName": "importProductsWorkflowId"
		},
		"1827": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/import-products.ts",
			"qualifiedName": "importProductsWorkflow"
		},
		"1828": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "importProductsWorkflow"
		},
		"1829": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1830": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1831": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1832": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1833": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1834": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1835": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1836": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1837": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1838": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1839": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1840": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1841": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1842": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
			"qualifiedName": "toCreate"
		},
		"1843": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product/import-products.ts",
			"qualifiedName": "toUpdate"
		},
		"1844": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1845": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1846": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1847": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1848": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1849": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1850": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1851": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1852": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1853": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1854": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1855": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1856": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1857": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1858": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1859": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1860": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1861": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1862": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1863": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1864": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
			"qualifiedName": "upsertVariantPricesWorkflowId"
		},
		"1865": {
			"sourceFileName": "../../../../packages/core/core-flows/src/product/workflows/upsert-variant-prices.ts",
			"qualifiedName": "upsertVariantPricesWorkflow"
		},
		"1866": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "upsertVariantPricesWorkflow"
		},
		"1867": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1868": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1869": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"1870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"1872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"1873": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"1874": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1875": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1876": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__0"
		},
		"1877": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1878": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"1879": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1880": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1881": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1882": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1883": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1884": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"1885": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"1886": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1887": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1888": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"1889": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"1890": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"1891": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"1892": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1893": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1894": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"1895": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1896": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"1897": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"1898": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"1899": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/core-flows/src/product/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}