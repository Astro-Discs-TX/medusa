{
	"id": 14004,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 14005,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14006,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14007,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14008,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14009,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14010,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14011,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14012,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14013,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14014,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14015,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14016,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14017,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14018,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14019,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14007,
								14008,
								14009,
								14010,
								14011,
								14012,
								14013,
								14014,
								14015,
								14016,
								14017,
								14018,
								14019
							]
						}
					]
				}
			}
		},
		{
			"id": 14020,
			"name": "DetailWidgetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for detail widgets. All widgets that are rendered in a detail view,\ne.g. the product detail view, should implement this interface.\n\nThe type of the data prop should be the same as the data that is passed to the widget.\nIf the widget is rendered in the product detail view, the data prop should be of\ntype AdminProduct."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```tsx\nimport type { DetailWidgetProps, AdminProduct } from \"@medusajs/types\"\nimport { defineConfig } from \"@medusajs/admin-shared\"\n\nconst ProductWidget = ({ data }: DetailWidgetProps<AdminProduct>) => {\n return <div>{data.title}</div>\n}\n\nexport const config = defineConfig({\n zone: \"product.details.after\",\n})\n\nexport default ProductWidget\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 14021,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14022,
						"name": "TData",
						"package": "@medusajs/types",
						"qualifiedName": "DetailWidgetProps.TData",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14021
					]
				}
			],
			"typeParameters": [
				{
					"id": 14022,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 14023,
			"name": "AdminTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 14024,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14025,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14026,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14027,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 14028,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 14029,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 14028,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14030,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14031,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14032,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14033,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 14034,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14035,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14036,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14037,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14026,
								14030,
								14035
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14025
					]
				}
			]
		},
		{
			"id": 17319,
			"name": "IsStringLiteral",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17320,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17320,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "intrinsic",
						"name": "string"
					},
					"extendsType": {
						"type": "reference",
						"target": 17320,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 17591,
			"name": "WordInCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17592,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17593,
					"name": "Word",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17592,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "reference",
								"target": 17593,
								"name": "Word",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "NextCharacter"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "_"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "NextCharacter"
						},
						"name": "NextCharacter",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Capitalize"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "NextCharacter"
								},
								"name": "NextCharacter",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Capitalize",
						"package": "typescript"
					},
					"trueType": {
						"type": "reference",
						"target": 17593,
						"name": "Word",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"falseType": {
						"type": "reference",
						"target": 17591,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17592,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 17593,
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "NextCharacter"
											},
											"name": "NextCharacter",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "WordInCamelCase",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 17593,
					"name": "Word",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 17590,
			"name": "Separator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "_"
					},
					{
						"type": "literal",
						"value": "-"
					}
				]
			}
		},
		{
			"id": 17520,
			"name": "IncludesSeparator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17521,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17521,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 17590,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 17525,
			"name": "IsOneWord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17526,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17526,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Lowercase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 17526,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Lowercase",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17526,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Uppercase"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 17526,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Uppercase",
						"package": "typescript"
					},
					"trueType": {
						"type": "literal",
						"value": true
					},
					"falseType": {
						"type": "literal",
						"value": false
					}
				}
			}
		},
		{
			"id": 17527,
			"name": "IsCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17528,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17528,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Uncapitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 17528,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Uncapitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 17532,
			"name": "IsPascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17533,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17533,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Capitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 17533,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Capitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 17522,
			"name": "SeparatorCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "snake_case, CONSTANT_CASE, kebab-case or COBOL-CASE"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17523,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17524,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17523,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "inferred",
								"name": "Word"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 17590,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "Tail"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "reference",
					"target": 17522,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 17524,
										"name": "Tuple",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Lowercase"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Word"
											},
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Lowercase",
									"package": "typescript"
								}
							]
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17523,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "inferred",
									"name": "Word"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "rest",
								"elementType": {
									"type": "reference",
									"target": 17524,
									"name": "Tuple",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Word"
										},
										"name": "Word",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "reference",
						"target": 17524,
						"name": "Tuple",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 17529,
			"name": "CamelCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17530,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17531,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17530,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": ""
				},
				"trueType": {
					"type": "reference",
					"target": 17531,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17530,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 17591,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17530,
											"name": "Type",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "WordInCamelCase",
									"package": "@medusajs/types"
								},
								""
							],
							[
								{
									"type": "inferred",
									"name": "Tail"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17530,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "Word"
									},
									""
								],
								[
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Tail"
										},
										"name": "Tail",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									""
								]
							]
						},
						"trueType": {
							"type": "reference",
							"target": 17529,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uncapitalize"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Tail"
											},
											"name": "Tail",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Uncapitalize",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 17531,
												"name": "Tuple",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
														"qualifiedName": "Word"
													},
													"name": "Word",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										}
									]
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 17534,
			"name": "PascalCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17535,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17535,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "reference",
					"target": 17529,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Uncapitalize"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 17535,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "Uncapitalize",
							"package": "typescript"
						}
					],
					"name": "CamelCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 17326,
			"name": "SplitAnyCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17327,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17520,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17327,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "IncludesSeparator",
					"package": "@medusajs/types"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 17522,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17327,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17525,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17327,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "IsOneWord",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 17327,
												"name": "Type",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17527,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17327,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsCamelCase",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 17529,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17327,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 17532,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17327,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "IsPascalCase",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "literal",
								"value": true
							},
							"trueType": {
								"type": "reference",
								"target": 17534,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17327,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "PascalCaseParser",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "tuple"
							}
						}
					}
				}
			}
		},
		{
			"id": 17517,
			"name": "PascalCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17518,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17519,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17518,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 17517,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "rest",
										"elementType": {
											"type": "reference",
											"target": 17519,
											"name": "Tuple",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Capitalize"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
													"qualifiedName": "Head"
												},
												"name": "Head",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Capitalize",
										"package": "typescript"
									}
								]
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 17517,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 17519,
								"name": "Tuple",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 17519,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 17324,
			"name": "CamelCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17325,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17325,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "First"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": 17517,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
										"qualifiedName": "First"
									},
									"name": "First",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "PascalCapitalizer",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "tuple"
				}
			}
		},
		{
			"id": 17321,
			"name": "Join",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17322,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17323,
					"name": "JoinedString",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17322,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 17321,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 17323,
											"name": "JoinedString",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Head"
											},
											"name": "Head",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 17321,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 17323,
					"name": "JoinedString",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 17312,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 17313,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17314,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17315,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17316,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17317,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`http.cookieSecret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17318,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17313,
						17314,
						17315,
						17316,
						17317,
						17318
					]
				}
			]
		},
		{
			"id": 14038,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14145,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14146,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14147,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14148,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14147,
										14148
									]
								}
							]
						}
					}
				},
				{
					"id": 14149,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14150,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14151,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14152,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14153,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14151,
										14152,
										14153
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 16799,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput"
						}
					]
				},
				{
					"id": 14154,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14159,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14160,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14161,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14155,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14156,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14159,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 14157,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14160,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 14158,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14161,
											"name": "TDelete",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14156,
										14157,
										14158
									]
								}
							]
						}
					}
				},
				{
					"id": 14162,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14171,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14163,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14164,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14171,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 14165,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14171,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 14166,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14167,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14168,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 14169,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14170,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14168,
														14169,
														14170
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14164,
										14165,
										14166
									]
								}
							]
						}
					}
				},
				{
					"id": 14172,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14173,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14174,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14175,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 14154,
						"typeArguments": [
							{
								"type": "reference",
								"target": 14173,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 14174,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 14175,
								"name": "TDelete",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14176,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14177,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 14162,
						"typeArguments": [
							{
								"type": "reference",
								"target": 14177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14275,
					"name": "CamelCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14276,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17319,
							"typeArguments": [
								{
									"type": "reference",
									"target": 14276,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsStringLiteral",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 17321,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17324,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17326,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14276,
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "SplitAnyCase",
											"package": "@medusajs/types"
										}
									],
									"name": "CamelCapitalizer",
									"package": "@medusajs/types"
								}
							],
							"name": "Join",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 14276,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 14039,
					"name": "Prettify",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prettify complex types to a flat object structure"
							}
						]
					},
					"typeParameters": [
						{
							"id": 14041,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 14041,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 14041,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14040,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 14042,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 14043,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14044,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 14043,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 14043,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 14044,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 14043,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 14048,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 14049,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14050,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 14051,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14049,
								14050,
								14051
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14052,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 14052,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 14054,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14049,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 14055,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14050,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 14056,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14051,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 14053,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14054,
								14055,
								14056,
								14053
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14048,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14059,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 14060,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 14071,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 14061,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14062,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14063,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14064,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14065,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 14066,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 14067,
													"name": "K",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ASC"
													},
													{
														"type": "literal",
														"value": "DESC"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 14068,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14069,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 14070,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14060,
								14061,
								14062,
								14063,
								14064,
								14068,
								14069,
								14070
							]
						}
					],
					"typeParameters": [
						{
							"id": 14071,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 14107,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 14108,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`fields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14109,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
									},
									{
										"kind": "code",
										"text": "`+`"
									},
									{
										"kind": "text",
										"text": " it will be added to the default fields, using "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14110,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14111,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14112,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14108,
								14109,
								14110,
								14111,
								14112
							]
						}
					]
				},
				{
					"id": 14113,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 14114,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 17213,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 14115,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 14116,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 14117,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 14118,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 14119,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14116,
								14117,
								14118,
								14119
							]
						}
					]
				},
				{
					"id": 14120,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 14121,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14122,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14123,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14124,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14125,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14126,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14127,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14121,
								14122,
								14123,
								14124,
								14125,
								14126,
								14127
							]
						}
					]
				},
				{
					"id": 14128,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 14129,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14130,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14131,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14132,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14129,
								14130,
								14131,
								14132
							]
						}
					]
				},
				{
					"id": 14135,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14136,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 14136,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 14135,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 14135,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 14136,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 14137,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14138,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 14138,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 14137,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 14137,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 14138,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 14139,
					"name": "MetadataType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 14140,
					"name": "RawRounding",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14141,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14142,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14143,
									"name": "precision",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14142,
										14143
									]
								}
							]
						}
					}
				},
				{
					"id": 14178,
					"name": "AdminOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Admin dashboard configurations."
							}
						]
					},
					"children": [
						{
							"id": 14179,
							"name": "disable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to disable the admin dashboard. If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the admin dashboard is disabled,\nin both development and production environments. The default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14180,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the admin dashboard. The default value is "
									},
									{
										"kind": "code",
										"text": "`/app`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe value cannot be one of the reserved paths:\n- "
									},
									{
										"kind": "code",
										"text": "`/admin`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/store`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/`"
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "/",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 14181,
							"name": "outDir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The directory where the admin build is output. This is where the build process places the generated files.\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`./build`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14182,
							"name": "backendUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa backend. Defaults to an empty string, which means requests will hit the same server that serves the dashboard."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14183,
							"name": "vite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the Vite configuration for the admin dashboard. This function receives the default Vite configuration\nand returns the modified configuration. The default value is "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14184,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14185,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 14186,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
															"qualifiedName": "InlineConfig"
														},
														"name": "InlineConfig",
														"package": "vite"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
													"qualifiedName": "InlineConfig"
												},
												"name": "InlineConfig",
												"package": "vite"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14179,
								14180,
								14181,
								14182,
								14183
							]
						}
					]
				},
				{
					"id": 14187,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 14188,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14189,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14190,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14191,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14188,
								14189,
								14190,
								14191
							]
						}
					]
				},
				{
					"id": 14192,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 14193,
							"name": "databaseName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`databaseUrl`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseName: process.env.DATABASE_NAME ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14194,
							"name": "databaseUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseUrl: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14195,
							"name": "databaseSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseSchema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n})\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14196,
							"name": "databaseLogging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseLogging: [\"query\", \"error\"]\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 14198,
							"name": "databaseDriverOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option.\n\n:::note\n\nMake sure to add to the end of the database URL "
									},
									{
										"kind": "code",
										"text": "`?ssl_mode=disable`"
									},
									{
										"kind": "text",
										"text": " as well when disabling "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": ".\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseDriverOptions: process.env.NODE_ENV !== \"development\" ?\n      { ssl: { rejectUnauthorized: false } } : {}\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 14199,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14200,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 14201,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 14202,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 14203,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 14204,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						14204
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		14202
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14200
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 14205,
							"name": "redisUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisUrl: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14206,
							"name": "redisPrefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisPrefix: process.env.REDIS_URL || \"medusa:\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14207,
							"name": "redisOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisOptions: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 14208,
							"name": "sessionOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    sessionOptions: {\n      name: process.env.SESSION_NAME || \"custom\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17312,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 14210,
							"name": "jobsBatchSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    jobsBatchSize: 100\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14211,
							"name": "workerMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode.\n\nWorkers are processes running separately from the main application. They're useful for executing long-running or resource-heavy tasks in the background, such as importing products.\n\nWith a worker, these tasks are offloaded to a separate process. So, they won't affect the performance of the main application.\n\n![Diagram showcasing how the server and worker work together](https://res.cloudinary.com/dza7lstvk/image/upload/fl_lossy/f_auto/r_16/ar_16:9,c_pad/v1/Medusa%20Book/medusa-worker_klkbch.jpg?_a=BATFJtAA0)\n\nMedusa has three runtime modes:\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nIn production, it's recommended to deploy two instances:\n\n1. One having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": ".\n2. Another having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    workerMode: process.env.WORKER_MODE || \"shared\"\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						},
						{
							"id": 14212,
							"name": "http",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's http-specific settings"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\",\n      compression: {\n        // ...\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14213,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14214,
											"name": "jwtSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create authentication tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtSecret: \"supersecret\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14215,
											"name": "jwtExpiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The expiration time for the JWT token. If not provided, the default value is "
													},
													{
														"kind": "code",
														"text": "`24h`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtExpiresIn: \"2d\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14216,
											"name": "cookieSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create cookie tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14217,
											"name": "authCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
													},
													{
														"kind": "code",
														"text": "`/auth`"
													},
													{
														"kind": "text",
														"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: process.env.AUTH_CORS\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14218,
											"name": "compression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
													},
													{
														"kind": "code",
														"text": "`\"x-no-compression\": true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      compression: {\n        enabled: true,\n        level: 6,\n        memLevel: 8,\n        threshold: 1024\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14187,
												"name": "HttpCompressionOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14219,
											"name": "storeCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`store_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:8000`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: process.env.STORE_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14220,
											"name": "adminCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`admin_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: process.env.ADMIN_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14221,
											"name": "authMethodsPerActor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optionally you can specify the supported authentication providers per actor type (such as user, customer, or any custom actors).\nFor example, you only want to allow SSO logins for "
													},
													{
														"kind": "code",
														"text": "`users`"
													},
													{
														"kind": "text",
														"text": " to the admin, while you want to allow email/password logins for "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": " to the storefront.\n\n"
													},
													{
														"kind": "code",
														"text": "`authMethodsPerActor`"
													},
													{
														"kind": "text",
														"text": " is a a map where the actor type (eg. 'user') is the key, and an array of supported auth providers as the value."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authMethodsPerActor: {\n        user: [\"email\"],\n        customer: [\"emailpas\", \"google\"]\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14214,
												14215,
												14216,
												14217,
												14218,
												14219,
												14220,
												14221
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14193,
								14194,
								14195,
								14196,
								14198,
								14205,
								14206,
								14207,
								14208,
								14210,
								14211,
								14212
							]
						}
					]
				},
				{
					"id": 14222,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 14223,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": " (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "admin",
								"target": 14224,
								"tsLinkText": "admin"
							},
							{
								"kind": "text",
								"text": ": An object that holds admin-related configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ConfigModule.plugins | plugins",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
									"qualifiedName": "__type.plugins"
								},
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 14229,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 14230,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    // ...\n  },\n  admin: {\n    // ...\n  },\n  modules: {\n    // ...\n  },\n  featureFlags: {\n    // ...\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 14223,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14192,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 14224,
							"name": "admin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Admin dashboard configurations."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14178,
								"name": "AdminOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 14229,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the module's registration name. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled. This is only supported for Medusa's commerce and architectural modules;\n2. Or an object having the following properties:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the path to the module relative to "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": ", or the module's NPM package name.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object indicating the options to pass to the module.\n    3. "
									},
									{
										"kind": "code",
										"text": "`definition`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object of extra configurations, such as "
									},
									{
										"kind": "code",
										"text": "`isQueryable`"
									},
									{
										"kind": "text",
										"text": " used when a module has relationships."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  modules: {\n    helloModuleService: {\n      resolve: \"./modules/hello\"\n    }\n  }\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 16141,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 16152,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 14230,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/develop/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  featureFlags: {\n    product_categories: true,\n    // ...\n  }\n  // ...\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to run migrations as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14223,
								14224,
								14229,
								14230
							]
						}
					]
				},
				{
					"id": 14231,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14232,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14233,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14234,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14235,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14236,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14237,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14233,
										14234,
										14235,
										14236,
										14237
									]
								}
							]
						}
					}
				},
				{
					"id": 14238,
					"name": "ExecArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14239,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14240,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14243,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14241,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14240,
										14241
									]
								}
							]
						}
					}
				},
				{
					"id": 14242,
					"name": "ModuleImplementations",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
							}
						]
					}
				},
				{
					"id": 14243,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
							}
						]
					},
					"typeParameters": [
						{
							"id": 14263,
							"name": "Cradle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "reference",
								"target": 14242,
								"name": "ModuleImplementations",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
											"qualifiedName": "AwilixContainer"
										},
										"name": "AwilixContainer",
										"package": "awilix"
									},
									{
										"type": "literal",
										"value": "resolve"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14244,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14245,
											"name": "resolve",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 14246,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 14247,
															"name": "K",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															}
														}
													],
													"parameters": [
														{
															"id": 14248,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 14247,
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 14249,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 14247,
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 14263,
															"name": "Cradle",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 14250,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 14251,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 14252,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 14253,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 14251,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												14245
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 14264,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14265,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14266,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 14267,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 14268,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 14269,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 14268,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										14266
									]
								}
							]
						}
					}
				},
				{
					"id": 14144,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 14270,
					"name": "WithCalculatedPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14271,
							"name": "calculated_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14272,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14273,
											"name": "calculated_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14274,
											"name": "is_calculated_price_tax_inclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14273,
												14274
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14271
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14048,
						14052,
						14059,
						14107,
						14113,
						14114,
						14115,
						14120,
						14128,
						14178,
						14187,
						14192,
						14222,
						14242,
						14270
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						14145,
						14149,
						14154,
						14162,
						14172,
						14176,
						14275,
						14039,
						14042,
						14135,
						14137,
						14139,
						14140,
						14231,
						14238,
						14243,
						14264,
						14144
					]
				}
			]
		},
		{
			"id": 14277,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14464,
					"name": "ModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 14465,
					"name": "SoftDeletableModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 14464,
								"name": "ModelDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 14306,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 14307,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14309,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14309,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 14308,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14309,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14309,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14307,
								14308
							]
						}
					],
					"typeParameters": [
						{
							"id": 14309,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14998,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 15073,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 15191,
							"name": "AdminProductTagListParams"
						},
						{
							"type": "reference",
							"target": 15234,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 15347,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 15686,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 15755,
							"name": "FilterableInventoryLevelProps"
						},
						{
							"type": "reference",
							"target": 16443,
							"name": "FilterableNotificationProps"
						},
						{
							"type": "reference",
							"target": 16591,
							"name": "FilterableStockLocationProps"
						},
						{
							"type": "reference",
							"target": 16821,
							"name": "FilterableWorkflowExecutionProps"
						},
						{
							"type": "reference",
							"target": 17378,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 17419,
							"name": "BaseProductCategoryListParams"
						}
					]
				},
				{
					"id": 14310,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 14311,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14312,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 17333,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14318,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17333,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14318,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 14313,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14314,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14315,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14316,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14317,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 17335,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 17335,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14311,
								14312,
								14313,
								14314,
								14315,
								14316,
								14317
							]
						}
					],
					"typeParameters": [
						{
							"id": 14318,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 14319,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 14320,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 14321,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 14329,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 14284,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 14329,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 14322,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignatures": [
																{
																	"id": 14323,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 14324,
																			"name": "x",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "inferred",
																		"name": "V"
																	}
																}
															]
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 14306,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 14329,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 14284,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 14329,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 14325,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignatures": [
																		{
																			"id": 14326,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 14327,
																					"name": "x",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "inferred",
																				"name": "V"
																			}
																		}
																	]
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 14328,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14310,
								"typeArguments": [
									{
										"type": "reference",
										"target": 14329,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14321,
								14328
							]
						}
					],
					"typeParameters": [
						{
							"id": 14329,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 14330,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 14331,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 14332,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14331
							]
						}
					],
					"typeParameters": [
						{
							"id": 14332,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 14333,
					"name": "PerformedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14334,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14335,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17340,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 17341,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14336,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17340,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 17341,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14337,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17340,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 17341,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14335,
										14336,
										14337
									]
								}
							]
						}
					}
				},
				{
					"id": 14338,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 14391,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14392,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14393,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 14394,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 14395,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 14396,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 14397,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 14393,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 14398,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 14399,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 14400,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 14401,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 14393,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 14402,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																14400,
																14401,
																14402
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17346,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17345,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 14403,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14404,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14405,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 14405,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17358,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17357,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 14406,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14407,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14408,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 14408,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17361,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17360,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 14409,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14410,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14411,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 14412,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 14413,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 14411,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17364,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17363,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 14339,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14340,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14341,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14320,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14414,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14342,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14414,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14343,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14344,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14345,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14320,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14414,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14346,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14414,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14347,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14348,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14349,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 14350,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14414,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14351,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14352,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14353,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 14354,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 14355,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 14356,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	14355,
																	14356
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 14357,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14414,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14358,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14359,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14360,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 14414,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 14284,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 14414,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 14361,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignatures": [
																				{
																					"id": 14362,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"parameters": [
																						{
																							"id": 14363,
																							"name": "x",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "V"
																					}
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 14306,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 14414,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 14284,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 14414,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 14364,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignatures": [
																						{
																							"id": 14365,
																							"name": "__index",
																							"variant": "signature",
																							"kind": 8192,
																							"flags": {},
																							"parameters": [
																								{
																									"id": 14366,
																									"name": "x",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "inferred",
																								"name": "V"
																							}
																						}
																					]
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 14367,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14368,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14369,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14370,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14371,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 14372,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 14373,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14414,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14374,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14375,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14376,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 14377,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 14378,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14414,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14379,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14380,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14381,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 14382,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14414,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14383,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14384,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14385,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 14386,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14330,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14414,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14387,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 14388,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 14389,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 14414,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 14390,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 14333,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																14389,
																14390
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14391,
								14403,
								14406,
								14409,
								14339,
								14343,
								14347,
								14351,
								14358,
								14368,
								14374,
								14379,
								14383
							]
						}
					],
					"typeParameters": [
						{
							"id": 14414,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17344,
							"typeArguments": [
								{
									"type": "reference",
									"target": 14414,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14415,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 14434,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14435,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14436,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 14437,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 14438,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 14439,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 14440,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 14393,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 14441,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 14442,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 14443,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 14444,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 14393,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 14445,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																14443,
																14444,
																14445
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17346,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17345,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 14446,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14447,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14448,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 14405,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17358,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17357,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 14449,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14450,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14451,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 14408,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17361,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17360,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 14452,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14453,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 14454,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 14455,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 14456,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 14411,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 17364,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 17363,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 14416,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14417,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14418,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14320,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14457,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14419,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14114,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14420,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14457,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14421,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14422,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14423,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14320,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14457,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14424,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14114,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14425,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14457,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14426,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14427,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14428,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 14429,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14457,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14430,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14431,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14432,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 14433,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14434,
								14446,
								14449,
								14452,
								14416,
								14421,
								14426,
								14430
							]
						}
					],
					"typeParameters": [
						{
							"id": 14457,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17344,
							"typeArguments": [
								{
									"type": "reference",
									"target": 14457,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14458,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 14459,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14460,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14459
							]
						}
					],
					"typeParameters": [
						{
							"id": 14460,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 14461,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 14462,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14463,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14462
							]
						}
					],
					"typeParameters": [
						{
							"id": 14463,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 14284,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14305,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14285,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14286,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17329,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14305,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14287,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17329,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14305,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14288,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 17331,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14305,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17331,
													"typeArguments": [
														{
															"type": "reference",
															"target": 14305,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 14289,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17331,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14290,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17331,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14305,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14291,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17331,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14305,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14292,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17329,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14293,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17331,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14294,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17331,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14295,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17331,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14296,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17331,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14305,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14297,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14298,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14299,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14300,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14301,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14302,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14303,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14304,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14286,
										14287,
										14288,
										14289,
										14290,
										14291,
										14292,
										14293,
										14294,
										14295,
										14296,
										14297,
										14298,
										14299,
										14300,
										14301,
										14302,
										14303,
										14304
									]
								}
							]
						}
					}
				},
				{
					"id": 14278,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14282,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 14283,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 14283,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 14282,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 14282,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 14282,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 14284,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 14282,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 14282,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 14279,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 14280,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 14281,
																"name": "x",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"type": {
															"type": "inferred",
															"name": "V"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 14278,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 14283,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 17328,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14306,
						14310,
						14320,
						14330,
						14338,
						14415,
						14458,
						14461
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						14464,
						14465,
						14333,
						14284,
						14278
					]
				}
			]
		},
		{
			"id": 17340,
			"name": "EntityClassName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 17341,
			"name": "EntityValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 17342,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 17343,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									17343
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 17344,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 17345,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17346,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17347,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 17348,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17349,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 17350,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 17351,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 14393,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 17352,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17353,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17354,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17355,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 14393,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 17356,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17354,
														17355,
														17356
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17357,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17358,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17359,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 14405,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 17360,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17361,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17362,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 14408,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 17363,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17364,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17365,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 17366,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 17367,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14411,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						17345,
						17357,
						17360,
						17363
					]
				}
			],
			"typeParameters": [
				{
					"id": 17368,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14338,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 14415,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 17335,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17339,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17336,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 17337,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 17338,
									"name": "k",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17339,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 17329,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17330,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17330,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17330,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 17536,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 14278,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17330,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 17540,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17330,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 17331,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17332,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17332,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 17332,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 17332,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 17536,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17537,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17538,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 17539,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										17538
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17615,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17616,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17616,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 17616,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 17616,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 17605,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17614,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17614,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 17606,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 17607,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									17607
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 17615,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17614,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 17608,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17609,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17609
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 17615,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17614,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 17610,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 17611,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											17611
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 17615,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 17614,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 17612,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 17613,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												17613
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 17615,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 17594,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17595,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 17595,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 17331,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17595,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17605,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17595,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 17540,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17541,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17594,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17541,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17594,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17541,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17594,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17541,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 17328,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 17333,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17334,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 17334,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 17333,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 17334,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 17334,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 17334,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 16929,
			"name": "DmlTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16930,
					"name": "IsDmlEntity",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Symbol to identify a DML entity from an object"
							}
						]
					},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 16930,
							"name": "IsDmlEntity",
							"package": "@medusajs/types"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 16931,
					"name": "DMLSchema",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of DML schema. It must be a key-value pair\nwith string based keys and properties/relationships\nas the value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 16965,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 16983,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 16932,
					"name": "IDmlEntityConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16933,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16934,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16935,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16934,
												16935
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16936,
					"name": "InferDmlEntityNameFromConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 16941,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16932,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 16941,
							"name": "TConfig",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "reference",
							"target": 14275,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16941,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCase",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 16941,
								"name": "TConfig",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 16937,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16938,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16938
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 14275,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "name"
										},
										"objectType": {
											"type": "reference",
											"target": 16941,
											"name": "TConfig",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CamelCase",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 16941,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 16939,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 16940,
												"name": "tableName",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													16940
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": 14275,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "tableName"
											},
											"objectType": {
												"type": "reference",
												"target": 16941,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "CamelCase",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						}
					}
				},
				{
					"id": 16942,
					"name": "IDmlEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of a DML entity"
							}
						]
					},
					"children": [
						{
							"id": 16945,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 16943,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16936,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16947,
										"name": "Config",
										"package": "@medusajs/types",
										"qualifiedName": "IDmlEntity.Config",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 16944,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16946,
								"name": "Schema",
								"package": "@medusajs/types",
								"qualifiedName": "IDmlEntity.Schema",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16945,
								16943,
								16944
							]
						}
					],
					"typeParameters": [
						{
							"id": 16946,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 16947,
							"name": "Config",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16932,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 16948,
					"name": "KnownDataTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported data types"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "boolean"
							},
							{
								"type": "literal",
								"value": "enum"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "bigNumber"
							},
							{
								"type": "literal",
								"value": "dateTime"
							},
							{
								"type": "literal",
								"value": "array"
							},
							{
								"type": "literal",
								"value": "json"
							},
							{
								"type": "literal",
								"value": "id"
							}
						]
					}
				},
				{
					"id": 16949,
					"name": "RelationshipTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of available relationships at DML level"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "hasOne"
							},
							{
								"type": "literal",
								"value": "hasMany"
							},
							{
								"type": "literal",
								"value": "belongsTo"
							},
							{
								"type": "literal",
								"value": "manyToMany"
							}
						]
					}
				},
				{
					"id": 16950,
					"name": "PropertyMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the property parse method"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16951,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16952,
									"name": "fieldName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16953,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 16954,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16955,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16956,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16957,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16948,
														"name": "KnownDataTypes",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16958,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16957,
														16958
													]
												}
											]
										}
									}
								},
								{
									"id": 16959,
									"name": "indexes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 16960,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 16961,
														"name": "name",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 16962,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "index"
																},
																{
																	"type": "literal",
																	"value": "unique"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															16961,
															16962
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 16963,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16975,
											"name": "RelationshipMetadata",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 16964,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16952,
										16953,
										16954,
										16955,
										16959,
										16963,
										16964
									]
								}
							]
						}
					}
				},
				{
					"id": 16965,
					"name": "PropertyType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 16971,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16966,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16967,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16971,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 16968,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 16969,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16970,
													"name": "fieldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 16950,
												"name": "PropertyMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16967
									]
								},
								{
									"title": "Methods",
									"children": [
										16968
									]
								}
							]
						}
					}
				},
				{
					"id": 16972,
					"name": "RelationshipOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options accepted by all the relationships"
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 16973,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16974,
											"name": "mappedBy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
													},
													{
														"kind": "code",
														"text": "`belongsTo`"
													},
													{
														"kind": "text",
														"text": "\nrelationship method."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16974
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16975,
					"name": "RelationshipMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the relationship parse\nmethod"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16976,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16977,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16978,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16949,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16979,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 16980,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16981,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16982,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16977,
										16978,
										16979,
										16980,
										16981,
										16982
									]
								}
							]
						}
					}
				},
				{
					"id": 16983,
					"name": "RelationshipType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 16990,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16984,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16985,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16990,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 16986,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16949,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16987,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 16988,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16989,
													"name": "relationshipName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 16975,
												"name": "RelationshipMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16985,
										16986
									]
								},
								{
									"title": "Methods",
									"children": [
										16987
									]
								}
							]
						}
					}
				},
				{
					"id": 16991,
					"name": "EntityConstructor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
							}
						]
					},
					"children": [
						{
							"id": 16993,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 16994,
									"name": "new EntityConstructor",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16992,
										"name": "Props",
										"package": "@medusajs/types",
										"qualifiedName": "EntityConstructor.Props",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								16993
							]
						}
					],
					"typeParameters": [
						{
							"id": 16992,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Function"
							},
							"name": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 16995,
					"name": "InferForeignKeys",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "From a IDmlEntity, infer the foreign keys name and type for\n\"belongsTo\" relation meaning \"hasOne\" and \"ManyToOne\""
							}
						]
					},
					"typeParameters": [
						{
							"id": 17000,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 17000,
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 17000,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 16996,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16997,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16997
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 16949,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "string"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"nameType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 17000,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 16998,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16999,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16999
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 16949,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"_id"
										]
									]
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 17001,
					"name": "InferBelongsToFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a belongsTo relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17006,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17006,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 17002,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 17003,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 16942,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 17015,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferSchemaFields",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 17006,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 17004,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17005,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 16942,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "R"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "IDmlEntity",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								}
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 17015,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferSchemaFields",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 17007,
					"name": "InferHasOneFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a hasOne relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17008,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 17001,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17008,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferBelongsToFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17009,
					"name": "InferHasManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for hasMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17012,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17012,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 17010,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 17011,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 16942,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 17015,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "R"
										},
										"name": "R",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferSchemaFields",
								"package": "@medusajs/types"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 17013,
					"name": "InferManyToManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for manyToMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17014,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 17009,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17014,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferHasManyFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17015,
					"name": "InferSchemaFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inferring the types of the schema fields from the DML\nentity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17016,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 14039,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 17016,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 17016,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 16983,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "type"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 17016,
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "literal",
											"value": "belongsTo"
										},
										"trueType": {
											"type": "reference",
											"target": 17001,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "$dataType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 17016,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "InferBelongsToFields",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "type"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 17016,
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "literal",
												"value": "hasOne"
											},
											"trueType": {
												"type": "reference",
												"target": 17007,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "$dataType"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 17016,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												],
												"name": "InferHasOneFields",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "type"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 17016,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												"extendsType": {
													"type": "literal",
													"value": "hasMany"
												},
												"trueType": {
													"type": "reference",
													"target": 17009,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "$dataType"
															},
															"objectType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 17016,
																	"name": "Schema",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"name": "InferHasManyFields",
													"package": "@medusajs/types"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "type"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 17016,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													},
													"extendsType": {
														"type": "literal",
														"value": "manyToMany"
													},
													"trueType": {
														"type": "reference",
														"target": 17013,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "$dataType"
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 17016,
																		"name": "Schema",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"name": "InferManyToManyFields",
														"package": "@medusajs/types"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "$dataType"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 17016,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									}
								}
							}
						],
						"name": "Prettify",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17017,
					"name": "Infer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the schema type of a DmlEntity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17018,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17018,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 16942,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "Schema"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 16991,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17015,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferSchemaFields",
									"package": "@medusajs/types"
								}
							],
							"name": "EntityConstructor",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 17019,
					"name": "ExtractEntityRelations",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts names of relationships from a schema"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17022,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 17023,
							"name": "OfType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16949,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "intersection",
								"types": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 17022,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"objectType": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intersection",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 17022,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 17022,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 16983,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 17022,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 17020,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 17021,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 17023,
															"name": "OfType",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															17021
														]
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				},
				{
					"id": 17024,
					"name": "EntityCascades",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actions to cascade from a given entity to its\nrelationship."
							}
						]
					},
					"typeParameters": [
						{
							"id": 17027,
							"name": "Relationships",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17025,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17026,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The related models to delete when a record of this data model\nis deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17027,
										"name": "Relationships",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17026
									]
								}
							]
						}
					}
				},
				{
					"id": 17028,
					"name": "InferTypeOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the instance type of a IDmlEntity once converted as an Entity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17029,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16942,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "InstanceType"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 17017,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17029,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Infer",
								"package": "@medusajs/types"
							}
						],
						"name": "InstanceType",
						"package": "typescript"
					}
				},
				{
					"id": 17030,
					"name": "InferEntityType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used in the module sdk internal service to infer propert entity typings from DML"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17031,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 17031,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 16942,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 17028,
							"typeArguments": [
								{
									"type": "reference",
									"target": 17031,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferTypeOf",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 17031,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 17032,
					"name": "InferIndexableProperties",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 17035,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 17035,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": 16942,
								"typeArguments": [
									{
										"type": "inferred",
										"name": "Schema"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "intrinsic",
											"name": "string"
										},
										"nameType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reflection",
												"declaration": {
													"id": 17033,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 17034,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "inferred",
																"name": "Type"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																17034
															]
														}
													]
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Type"
													},
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "reference",
													"target": 16949,
													"name": "RelationshipTypes",
													"package": "@medusajs/types"
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"falseType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									{
										"type": "reference",
										"target": 16995,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferForeignKeys",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 17036,
					"name": "EntityIndex",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 17042,
							"name": "TSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17043,
							"name": "TWhere",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17037,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17038,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the index. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17039,
									"name": "unique",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When enabled, a unique index is created on the specified\nproperties."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 17040,
									"name": "on",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of properties to create the index on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17032,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16942,
													"typeArguments": [
														{
															"type": "reference",
															"target": 17042,
															"name": "TSchema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "IDmlEntity",
													"package": "@medusajs/types"
												}
											],
											"name": "InferIndexableProperties",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 17041,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Conditions to restrict which records are indexed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17043,
										"name": "TWhere",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17038,
										17039,
										17040,
										17041
									]
								}
							]
						}
					}
				},
				{
					"id": 17044,
					"name": "SimpleQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 17045,
					"name": "NeQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17046,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17047,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17044,
										"name": "SimpleQueryValue",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17047
									]
								}
							]
						}
					}
				},
				{
					"id": 17048,
					"name": "QueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 17044,
								"name": "SimpleQueryValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 17045,
								"name": "NeQueryValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 17049,
					"name": "QueryCondition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 17050,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 16931,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "schema"
								},
								"objectType": {
									"type": "reference",
									"target": 16942,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17050,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "IDmlEntity",
									"package": "@medusajs/types"
								}
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 17050,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "reference",
								"target": 17048,
								"name": "QueryValue",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "reference",
								"target": 17049,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17050,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryCondition",
								"package": "@medusajs/types"
							}
						},
						"optionalModifier": "+"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16942,
						16991
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						16931,
						16932,
						16936,
						16948,
						16949,
						16950,
						16965,
						16972,
						16975,
						16983,
						16995,
						17001,
						17007,
						17009,
						17013,
						17015,
						17017,
						17019,
						17024,
						17028,
						17030,
						17032,
						17036,
						17044,
						17045,
						17048,
						17049
					]
				},
				{
					"title": "Variables",
					"children": [
						16930
					]
				}
			]
		},
		{
			"id": 14466,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14467,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14471,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14468,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 14469,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14470,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14482,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14471,
														"name": "TData",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Event",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 14472,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14473,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14474,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14474
									]
								}
							]
						}
					}
				},
				{
					"id": 14475,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14476,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14477,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14478,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14467,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14477,
										14478
									]
								}
							]
						}
					}
				},
				{
					"id": 14479,
					"name": "EventMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14480,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14481,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14481
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 14482,
					"name": "Event",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14487,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14483,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14484,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14485,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14479,
										"name": "EventMetadata",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14486,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14487,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14484,
										14485,
										14486
									]
								}
							]
						}
					}
				},
				{
					"id": 14488,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14491,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 14482,
								"typeArguments": [
									{
										"type": "reference",
										"target": 14491,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14489,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14490,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14490
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 14492,
					"name": "RawMessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14501,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14493,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14494,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14495,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14501,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 14496,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14497,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14498,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14499,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "eventGroupId"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								},
								{
									"id": 14500,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14494,
										14495,
										14496,
										14497,
										14498,
										14499,
										14500
									]
								}
							]
						}
					}
				},
				{
					"id": 14520,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14521,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14522,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 14523,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 14524,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 14488,
														"typeArguments": [
															{
																"type": "reference",
																"target": 14523,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14488,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 14523,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 14525,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14526,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14527,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14528,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 14529,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14467,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14530,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14472,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 14531,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14532,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14533,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 14534,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14467,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14535,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14472,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 14536,
							"name": "releaseGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14537,
									"name": "releaseGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14538,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14539,
							"name": "clearGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14540,
									"name": "clearGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14541,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14521,
								14526,
								14531,
								14536,
								14539
							]
						}
					]
				},
				{
					"id": 14502,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14503,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14504,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14505,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 14506,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14467,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14507,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14472,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 14508,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14509,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 14510,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 14511,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14467,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14512,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14472,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 14513,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14514,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 14515,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 14516,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 14488,
														"typeArguments": [
															{
																"type": "reference",
																"target": 14515,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14488,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 14515,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14517,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 14518,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"parameters": [
										{
											"id": 14519,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 16696,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 16695,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14503,
								14508,
								14513,
								14517
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16694,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14520,
						14502
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						14467,
						14472,
						14475,
						14479,
						14482,
						14488,
						14492
					]
				}
			]
		},
		{
			"id": 14542,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14543,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14544,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14545,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14546,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 14547,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 14548,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14549,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 14550,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 14551,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14544,
								14548
							]
						}
					]
				},
				{
					"id": 14551,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 14552,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 14553,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 14554,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											14553,
											14554
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 14555,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14556,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14557,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14558,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14559,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14560,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14557,
										14558,
										14559,
										14560
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14543
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						14551,
						14555
					]
				}
			]
		},
		{
			"id": 17051,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 17052,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17053,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17052,
						17053
					]
				}
			]
		},
		{
			"id": 17054,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 17055,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 17056,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 17057,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17058,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17055,
						17056,
						17057,
						17058
					]
				}
			]
		},
		{
			"id": 17059,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 17060,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17061,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17060,
						17061
					]
				}
			]
		},
		{
			"id": 17062,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 17063,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17063
					]
				}
			]
		},
		{
			"id": 17064,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 17065,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17066,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17067,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17065,
						17066,
						17067
					]
				}
			]
		},
		{
			"id": 14561,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14562,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 14563,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14564,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14563,
								14564
							]
						}
					]
				},
				{
					"id": 14565,
					"name": "FilterableFileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 14566,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file ID to filter by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14566
							]
						}
					]
				},
				{
					"id": 14567,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 14568,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14569,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14570,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14571,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14568,
								14569,
								14570,
								14571
							]
						}
					]
				},
				{
					"id": 14615,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 14616,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14617,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14616,
								14617
							]
						}
					]
				},
				{
					"id": 14618,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 14619,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14619
							]
						}
					]
				},
				{
					"id": 14620,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 14621,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14621
							]
						}
					]
				},
				{
					"id": 14622,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 14623,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14624,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14625,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14626,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14623,
								14624,
								14625,
								14626
							]
						}
					]
				},
				{
					"id": 14627,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14628,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14629,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14630,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14622,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 14615,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14631,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14632,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14633,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14620,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14634,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14635,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14636,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14618,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14628,
								14631,
								14634
							]
						}
					]
				},
				{
					"id": 14648,
					"name": "LocalFileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14649,
							"name": "upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14650,
							"name": "private_upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14651,
							"name": "backend_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14649,
								14650,
								14651
							]
						}
					]
				},
				{
					"id": 14637,
					"name": "S3FileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14638,
							"name": "file_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14639,
							"name": "access_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14640,
							"name": "secret_access_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14641,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14642,
							"name": "bucket",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14643,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14644,
							"name": "endpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14645,
							"name": "cache_control",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14646,
							"name": "download_file_duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14647,
							"name": "additional_client_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14638,
								14639,
								14640,
								14641,
								14642,
								14643,
								14644,
								14645,
								14646,
								14647
							]
						}
					]
				},
				{
					"id": 14572,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 14573,
							"name": "createFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14574,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.createFiles([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14575,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14567,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 14576,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14562,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 14577,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.createFiles({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14578,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14567,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14579,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 14562,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14580,
							"name": "deleteFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14581,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14582,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 14583,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 14584,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14585,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14586,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14587,
							"name": "retrieveFile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14588,
									"name": "retrieveFile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieveFile(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14589,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14590,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14562,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14591,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 14562,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14592,
							"name": "listFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14593,
									"name": "listFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the list method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14594,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14565,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14595,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14562,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14596,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14562,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 14597,
							"name": "listAndCountFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 14598,
									"name": "listAndCountFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the listAndCount method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files and their count. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 14599,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14565,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14600,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14562,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14601,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 14562,
															"name": "FileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								14573,
								14580,
								14587,
								14592,
								14597
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16295,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14562,
						14565,
						14567,
						14615,
						14618,
						14620,
						14622,
						14627,
						14648,
						14637,
						14572
					]
				}
			]
		},
		{
			"id": 17369,
			"name": "BaseCollection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17370,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17371,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17372,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17373,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17374,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17375,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17376,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
								"qualifiedName": "AdminProduct"
							},
							"name": "AdminProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17377,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17370,
						17371,
						17372,
						17373,
						17374,
						17375,
						17376,
						17377
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14697,
					"name": "AdminCollection"
				},
				{
					"type": "reference",
					"target": 14748,
					"name": "StoreCollection"
				}
			]
		},
		{
			"id": 17391,
			"name": "BaseCollectionParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17392,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14771,
						"name": "SelectParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17392
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14770,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14731,
					"name": "AdminCollectionParams"
				}
			]
		},
		{
			"id": 17378,
			"name": "BaseCollectionListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 17389,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 17378,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14306,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14307,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 17390,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 17378,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14306,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14308,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 17379,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17380,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17381,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17382,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17383,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17384,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17388,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14776,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 17385,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14773,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 17386,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14774,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 17387,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14775,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17389,
						17390,
						17379,
						17380,
						17381,
						17382,
						17383,
						17384,
						17388,
						17385,
						17386,
						17387
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14772,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 14306,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17378,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14717,
					"name": "AdminCollectionListParams"
				},
				{
					"type": "reference",
					"target": 14757,
					"name": "StoreCollectionFilters"
				}
			]
		},
		{
			"id": 17393,
			"name": "BaseFile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17394,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17395,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17394,
						17395
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14792,
					"name": "AdminFile"
				},
				{
					"type": "reference",
					"target": 14796,
					"name": "StoreFile"
				}
			]
		},
		{
			"id": 17396,
			"name": "BaseUploadFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 17397,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17398,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 17399,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 17400,
																"name": "name",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 17401,
																"name": "content",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	17400,
																	17401
																]
															}
														]
													}
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
														"qualifiedName": "File"
													},
													"name": "File",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17398
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "FileList"
						},
						"name": "FileList",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 17596,
			"name": "AdminUpsertGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17597,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17598,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17599,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17597,
						17598,
						17599
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17542,
					"name": "AdminUpsertFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 17546,
					"name": "AdminUpsertFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 17551,
					"name": "AdminUpsertFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 17557,
					"name": "AdminUpsertFulfillmentSetServiceZoneZip"
				},
				{
					"type": "reference",
					"target": 17600,
					"name": "AdminUpdateGeoZone"
				}
			]
		},
		{
			"id": 17542,
			"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17544,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 17545,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17599,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 17543,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 17597,
						"name": "AdminUpsertGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17544,
						17545,
						17543
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17596,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17546,
			"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17549,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 17550,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17599,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 17547,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 17597,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 17548,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17549,
						17550,
						17547,
						17548
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17596,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17551,
			"name": "AdminUpsertFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17555,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 17556,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17599,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 17552,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 17597,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 17553,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17554,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17555,
						17556,
						17552,
						17553,
						17554
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17596,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17557,
			"name": "AdminUpsertFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17562,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 17563,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17599,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 17558,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 17597,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 17559,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17560,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17561,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17562,
						17563,
						17558,
						17559,
						17560,
						17561
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17596,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17402,
			"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 17542,
						"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17546,
						"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17551,
						"name": "AdminUpsertFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17557,
						"name": "AdminUpsertFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 17600,
			"name": "AdminUpdateGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17602,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17597,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 17603,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 17604,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17599,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 17601,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17602,
						17603,
						17604,
						17601
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17596,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17564,
					"name": "AdminUpdateFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 17569,
					"name": "AdminUpdateFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 17575,
					"name": "AdminUpdateFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 17582,
					"name": "AdminUpdateFulfillmentSetServiceZoneZip"
				}
			]
		},
		{
			"id": 17564,
			"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17567,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17603,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 17568,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17604,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 17566,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17601,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 17565,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 17602,
						"name": "AdminUpdateGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17567,
						17568,
						17566,
						17565
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17600,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17569,
			"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17573,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17603,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 17574,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17604,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 17572,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17601,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 17570,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 17602,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 17571,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17573,
						17574,
						17572,
						17570,
						17571
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17600,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17575,
			"name": "AdminUpdateFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17580,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17603,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 17581,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17604,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 17579,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17601,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 17576,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 17602,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 17577,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17578,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17580,
						17581,
						17579,
						17576,
						17577,
						17578
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17600,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17582,
			"name": "AdminUpdateFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17588,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17603,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 17589,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17604,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 17587,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17601,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 17583,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 17602,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 17584,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17585,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17586,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17588,
						17589,
						17587,
						17583,
						17584,
						17585,
						17586
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17600,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17403,
			"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 17564,
						"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17569,
						"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17575,
						"name": "AdminUpdateFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 17582,
						"name": "AdminUpdateFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 14652,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 14653,
					"name": "AdminCreateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14654,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14655,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14656,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14657,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14658,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14659,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14660,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 14661,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14662,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 14663,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 14664,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14662,
														14663,
														14664
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14654,
								14655,
								14656,
								14657,
								14658,
								14659,
								14660
							]
						}
					]
				},
				{
					"id": 14665,
					"name": "AdminUpdateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14666,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14667,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14668,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14669,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14670,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14671,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14672,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 14673,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14674,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 14675,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 14676,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14674,
														14675,
														14676
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14666,
								14667,
								14668,
								14669,
								14670,
								14671,
								14672
							]
						}
					]
				},
				{
					"id": 14677,
					"name": "CampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14678,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14679,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14680,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14681,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14682,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14683,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14684,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14685,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14686,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14687,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14688,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
													"qualifiedName": "CampaignBudgetTypeValues"
												},
												"name": "CampaignBudgetTypeValues",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 14689,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14690,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14691,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14687,
												14688,
												14689,
												14690,
												14691
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14678,
								14679,
								14680,
								14681,
								14682,
								14683,
								14684,
								14685
							]
						}
					]
				},
				{
					"id": 14692,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 14693,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14694,
											"name": "campaigns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14677,
													"name": "CampaignResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14694
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14695,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14696,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14677,
								"name": "CampaignResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14696
							]
						}
					]
				},
				{
					"id": 14697,
					"name": "AdminCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14698,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17370,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 14699,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17371,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 14700,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17372,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 14701,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17373,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 14702,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17374,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 14703,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17375,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 14704,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17376,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 14705,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17377,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14698,
								14699,
								14700,
								14701,
								14702,
								14703,
								14704,
								14705
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17369,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14706,
					"name": "AdminCreateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14707,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14708,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14709,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14707,
								14708,
								14709
							]
						}
					]
				},
				{
					"id": 14710,
					"name": "AdminUpdateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14711,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14712,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14713,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14711,
								14712,
								14713
							]
						}
					]
				},
				{
					"id": 14714,
					"name": "AdminUpdateCollectionProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14715,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14716,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14715,
								14716
							]
						}
					]
				},
				{
					"id": 14717,
					"name": "AdminCollectionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 14729,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17378,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17389,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 14730,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17378,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17390,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 14718,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 14719,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17379,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 14720,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17380,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 14721,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17381,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 14722,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17382,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 14723,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17383,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 14724,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17384,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 14728,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17388,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 14725,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17385,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 14726,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17386,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 14727,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17387,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14729,
								14730,
								14718,
								14719,
								14720,
								14721,
								14722,
								14723,
								14724,
								14728,
								14725,
								14726,
								14727
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17378,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14731,
					"name": "AdminCollectionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14732,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17392,
								"name": "BaseCollectionParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14732
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17391,
							"name": "BaseCollectionParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14733,
					"name": "AdminCollectionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14734,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14697,
								"name": "AdminCollection",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14734
							]
						}
					]
				},
				{
					"id": 14735,
					"name": "AdminCollectionListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14741,
							"name": "collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14697,
									"name": "AdminCollection",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.collections"
							}
						},
						{
							"id": 14738,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 14739,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 14740,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14741,
								14738,
								14739,
								14740
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 14736,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 14737,
												"name": "collections",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 14697,
														"name": "AdminCollection",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													14737
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14742,
					"name": "AdminCollectionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14743,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 14744,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 14745,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 14746,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14747,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14743,
								14744,
								14745,
								14746
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "collection"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14748,
					"name": "StoreCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14749,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17370,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 14750,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17371,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 14751,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17372,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 14752,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17373,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 14753,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17374,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 14754,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17375,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 14755,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17376,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 14756,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17377,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14749,
								14750,
								14751,
								14752,
								14753,
								14754,
								14755,
								14756
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17369,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14757,
					"name": "StoreCollectionFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 14768,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17378,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17389,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 14769,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17378,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17378,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17390,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 14758,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17379,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 14759,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17380,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 14760,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17381,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 14761,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17382,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 14762,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17383,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 14763,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17384,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 14767,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17388,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 14764,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17385,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 14765,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17386,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 14766,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17387,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14768,
								14769,
								14758,
								14759,
								14760,
								14761,
								14762,
								14763,
								14767,
								14764,
								14765,
								14766
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17378,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14770,
					"name": "SelectParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14771,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14771
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams"
						},
						{
							"type": "reference",
							"target": 15008,
							"name": "AdminNotificationParams"
						},
						{
							"type": "reference",
							"target": 15086,
							"name": "AdminPriceListParams"
						},
						{
							"type": "reference",
							"target": 15204,
							"name": "AdminProductTagParams"
						},
						{
							"type": "reference",
							"target": 15247,
							"name": "AdminProductTypeParams"
						},
						{
							"type": "reference",
							"target": 15702,
							"name": "AdminTaxRegionParams"
						},
						{
							"type": "reference",
							"target": 17391,
							"name": "BaseCollectionParams"
						},
						{
							"type": "reference",
							"target": 17439,
							"name": "BaseProductCategoryParams"
						}
					]
				},
				{
					"id": 14772,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14776,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 14773,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14774,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14775,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14776,
								14773,
								14774,
								14775
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14802,
							"name": "AdminFulfillmentProviderListParams"
						},
						{
							"type": "reference",
							"target": 14911,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 14955,
							"name": "AdminInventoryLevelFilters"
						},
						{
							"type": "reference",
							"target": 14998,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 15073,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 15234,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 15323,
							"name": "AdminReturnFilters"
						},
						{
							"type": "reference",
							"target": 15347,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 15459,
							"name": "AdminShippingOptionListParams"
						},
						{
							"type": "reference",
							"target": 15508,
							"name": "AdminShippingProfileListParams"
						},
						{
							"type": "reference",
							"target": 15566,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 15628,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 15686,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 17378,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 17419,
							"name": "BaseProductCategoryListParams"
						},
						{
							"type": "reference",
							"target": 17450,
							"name": "BaseProductTagListParams"
						}
					]
				},
				{
					"id": 14777,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14783,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14784,
							"name": "TParent",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 14785,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14778,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14779,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14780,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14783,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 14781,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14782,
									"name": "parent",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parent resource of the item that was deleted, if applicable."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14784,
										"name": "TParent",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14779,
										14780,
										14781,
										14782
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 14742,
							"name": "AdminCollectionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 14852,
							"name": "AdminServiceZoneDeleteResponse"
						},
						{
							"type": "reference",
							"target": 14859,
							"name": "AdminFulfillmentSetDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15097,
							"name": "AdminPriceListDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15172,
							"name": "AdminProductCategoryDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15215,
							"name": "AdminProductTagDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15258,
							"name": "AdminProductTypeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15478,
							"name": "AdminShippingOptionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15527,
							"name": "AdminShippingProfileDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15587,
							"name": "AdminStockLocationDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15649,
							"name": "AdminTaxRateDeleteResponse"
						},
						{
							"type": "reference",
							"target": 15709,
							"name": "AdminTaxRegionDeleteResponse"
						}
					]
				},
				{
					"id": 14786,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 14791,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 14787,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14788,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14789,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14790,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14788,
												14789,
												14790
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 14791,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 14735,
							"name": "AdminCollectionListResponse"
						},
						{
							"type": "reference",
							"target": 14810,
							"name": "AdminFulfillmentProviderListResponse"
						},
						{
							"type": "reference",
							"target": 15012,
							"name": "AdminNotificationListResponse"
						},
						{
							"type": "reference",
							"target": 15090,
							"name": "AdminPriceListListResponse"
						},
						{
							"type": "reference",
							"target": 15165,
							"name": "AdminProductCategoryListResponse"
						},
						{
							"type": "reference",
							"target": 15208,
							"name": "AdminProductTagListResponse"
						},
						{
							"type": "reference",
							"target": 15251,
							"name": "AdminProductTypeListResponse"
						},
						{
							"type": "reference",
							"target": 15580,
							"name": "AdminStockLocationListResponse"
						}
					]
				},
				{
					"id": 14792,
					"name": "AdminFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14793,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17394,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 14794,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17395,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14793,
								14794
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17393,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14795,
					"name": "AdminUploadFile",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17396,
						"name": "BaseUploadFile",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14796,
					"name": "StoreFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14797,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17394,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 14798,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17395,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14797,
								14798
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17393,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14799,
					"name": "AdminFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14800,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14801,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14800,
								14801
							]
						}
					]
				},
				{
					"id": 14802,
					"name": "AdminFulfillmentProviderListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14809,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 14806,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 14807,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 14808,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 14803,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14804,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14805,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14809,
								14806,
								14807,
								14808,
								14803,
								14804,
								14805
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14810,
					"name": "AdminFulfillmentProviderListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14813,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 14814,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 14815,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 14816,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14799,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.fulfillment_providers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14813,
								14814,
								14815,
								14816
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 14811,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 14812,
												"name": "fulfillment_providers",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 14799,
														"name": "AdminFulfillmentProvider",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													14812
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14817,
					"name": "AdminGeoZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14818,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14819,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/geo-zone.ts",
									"qualifiedName": "GeoZoneType"
								},
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 14820,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14821,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14822,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14823,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14824,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14825,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14826,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14818,
								14819,
								14820,
								14821,
								14822,
								14823,
								14824,
								14825,
								14826
							]
						}
					]
				},
				{
					"id": 14827,
					"name": "AdminServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14828,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14829,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14830,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14831,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14817,
									"name": "AdminGeoZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 14832,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15390,
									"name": "AdminShippingOption",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 14833,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14834,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14835,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14828,
								14829,
								14830,
								14831,
								14832,
								14833,
								14834,
								14835
							]
						}
					]
				},
				{
					"id": 14836,
					"name": "AdminFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14837,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14838,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14839,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14840,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14827,
									"name": "AdminServiceZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 14841,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14842,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14843,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14837,
								14838,
								14839,
								14840,
								14841,
								14842,
								14843
							]
						}
					]
				},
				{
					"id": 14844,
					"name": "AdminCreateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14845,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14846,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17402,
									"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14845,
								14846
							]
						}
					]
				},
				{
					"id": 14847,
					"name": "AdminUpdateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14848,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14849,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17403,
									"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14848,
								14849
							]
						}
					]
				},
				{
					"id": 14850,
					"name": "AdminServiceZoneResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14851,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14827,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14851
							]
						}
					]
				},
				{
					"id": 14852,
					"name": "AdminServiceZoneDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14853,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 14854,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "service_zone"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 14855,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 14856,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14836,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14853,
								14854,
								14855,
								14856
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "service_zone"
								},
								{
									"type": "reference",
									"target": 14836,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14857,
					"name": "AdminFulfillmentSetResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14858,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14836,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14858
							]
						}
					]
				},
				{
					"id": 14859,
					"name": "AdminFulfillmentSetDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14860,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 14861,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "fulfillment_set"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 14862,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 14863,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14864,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14860,
								14861,
								14862,
								14863
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "fulfillment_set"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14935,
					"name": "InventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14936,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14937,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14938,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14939,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14940,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14941,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14942,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14943,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14936,
								14937,
								14938,
								14939,
								14940,
								14941,
								14942,
								14943
							]
						}
					]
				},
				{
					"id": 14944,
					"name": "AdminUpdateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14945,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14946,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14945,
								14946
							]
						}
					]
				},
				{
					"id": 14947,
					"name": "AdminCreateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14948,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14949,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14950,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14948,
								14949,
								14950
							]
						}
					]
				},
				{
					"id": 14951,
					"name": "AdminBatchUpdateInventoryLevelLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14952,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14953,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 14954,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14947,
									"name": "AdminCreateInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14952,
								14953,
								14954
							]
						}
					]
				},
				{
					"id": 14955,
					"name": "AdminInventoryLevelFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14960,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 14957,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 14958,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 14959,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 14956,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14960,
								14957,
								14958,
								14959,
								14956
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14961,
					"name": "AdminInventoryLevelResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14962,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14935,
								"name": "InventoryLevel",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14962
							]
						}
					]
				},
				{
					"id": 14963,
					"name": "AdminInventoryLevelListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 14964,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14965,
											"name": "inventory_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14935,
													"name": "InventoryLevel",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14965
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14865,
					"name": "AdminInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14866,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14867,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14868,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14869,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14870,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14871,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14872,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14873,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14874,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14875,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14876,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 14877,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14878,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14879,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14880,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14866,
								14867,
								14868,
								14869,
								14870,
								14871,
								14872,
								14873,
								14874,
								14875,
								14876,
								14877,
								14878,
								14879,
								14880
							]
						}
					]
				},
				{
					"id": 14881,
					"name": "AdminCreateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14882,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14883,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14884,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14885,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14886,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14887,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14888,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14889,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14890,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14891,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14892,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14893,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14894,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14895,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14882,
								14883,
								14884,
								14885,
								14886,
								14887,
								14888,
								14889,
								14890,
								14891,
								14892,
								14893,
								14894,
								14895
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14896,
							"name": "AdminUpdateInventoryItem"
						}
					]
				},
				{
					"id": 14896,
					"name": "AdminUpdateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14897,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14882,
								"name": "AdminCreateInventoryItem.sku"
							}
						},
						{
							"id": 14898,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14883,
								"name": "AdminCreateInventoryItem.hs_code"
							}
						},
						{
							"id": 14899,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14884,
								"name": "AdminCreateInventoryItem.weight"
							}
						},
						{
							"id": 14900,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14885,
								"name": "AdminCreateInventoryItem.length"
							}
						},
						{
							"id": 14901,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14886,
								"name": "AdminCreateInventoryItem.height"
							}
						},
						{
							"id": 14902,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14887,
								"name": "AdminCreateInventoryItem.width"
							}
						},
						{
							"id": 14903,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14888,
								"name": "AdminCreateInventoryItem.origin_country"
							}
						},
						{
							"id": 14904,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14889,
								"name": "AdminCreateInventoryItem.mid_code"
							}
						},
						{
							"id": 14905,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14890,
								"name": "AdminCreateInventoryItem.material"
							}
						},
						{
							"id": 14906,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14891,
								"name": "AdminCreateInventoryItem.title"
							}
						},
						{
							"id": 14907,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14892,
								"name": "AdminCreateInventoryItem.description"
							}
						},
						{
							"id": 14908,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14893,
								"name": "AdminCreateInventoryItem.requires_shipping"
							}
						},
						{
							"id": 14909,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14894,
								"name": "AdminCreateInventoryItem.thumbnail"
							}
						},
						{
							"id": 14910,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14895,
								"name": "AdminCreateInventoryItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14897,
								14898,
								14899,
								14900,
								14901,
								14902,
								14903,
								14904,
								14905,
								14906,
								14907,
								14908,
								14909,
								14910
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14881,
							"name": "AdminCreateInventoryItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14911,
					"name": "AdminInventoryItemParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14928,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 14925,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 14926,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 14927,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 14912,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14913,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14914,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14915,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14916,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14917,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14918,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 14919,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14920,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 14921,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 14922,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 14923,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 14924,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "location_id"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14928,
								14925,
								14926,
								14927,
								14912,
								14913,
								14914,
								14915,
								14916,
								14917,
								14918,
								14919,
								14920,
								14921,
								14922,
								14923,
								14924
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 14929,
					"name": "AdminInventoryItemResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14930,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14865,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14930
							]
						}
					]
				},
				{
					"id": 14931,
					"name": "AdminInventoryItemListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 14932,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 14933,
											"name": "inventory_items",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14865,
													"name": "AdminInventoryItem",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												14933
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14934,
					"name": "AdminInventoryItemDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14777,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory_item"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14966,
					"name": "AdminAcceptInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14967,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14968,
									"name": "first_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14969,
									"name": "last_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14968,
										14969
									]
								}
							]
						}
					}
				},
				{
					"id": 14970,
					"name": "AdminCreateInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14971,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14972,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14973,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14972,
										14973
									]
								}
							]
						}
					}
				},
				{
					"id": 14974,
					"name": "AdminInviteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14975,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14976,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14977,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14978,
									"name": "accepted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14979,
									"name": "token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14980,
									"name": "expires_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 14981,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14982,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 14983,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14976,
										14977,
										14978,
										14979,
										14980,
										14981,
										14982,
										14983
									]
								}
							]
						}
					}
				},
				{
					"id": 14984,
					"name": "AdminNotification",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 14985,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14986,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14987,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14988,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14989,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 14990,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14991,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14992,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14993,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14994,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14995,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14996,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14997,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14985,
								14986,
								14987,
								14988,
								14989,
								14990,
								14991,
								14992,
								14993,
								14994,
								14995,
								14996,
								14997
							]
						}
					]
				},
				{
					"id": 14998,
					"name": "AdminNotificationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15002,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 14998,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14998,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15003,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 14998,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 14998,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15007,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15004,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15005,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15006,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 14999,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15000,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15001,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15002,
								15003,
								15007,
								15004,
								15005,
								15006,
								14999,
								15000,
								15001
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 14998,
									"name": "AdminNotificationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15008,
					"name": "AdminNotificationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15009,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15009
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15010,
					"name": "AdminNotificationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15011,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14984,
								"name": "AdminNotification",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15011
							]
						}
					]
				},
				{
					"id": 15012,
					"name": "AdminNotificationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15015,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15016,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15017,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15018,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14984,
									"name": "AdminNotification",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.notifications"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15015,
								15016,
								15017,
								15018
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15013,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15014,
												"name": "notifications",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 14984,
														"name": "AdminNotification",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15014
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15019,
					"name": "AdminPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15020,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15021,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15020,
								15021
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15022,
					"name": "AdminPriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15023,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15024,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15025,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15026,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 15027,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15028,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15029,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15030,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15031,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15019,
									"name": "AdminPriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15032,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15033,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15034,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15023,
								15024,
								15025,
								15026,
								15027,
								15028,
								15029,
								15030,
								15031,
								15032,
								15033,
								15034
							]
						}
					]
				},
				{
					"id": 15035,
					"name": "AdminCreatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15036,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15037,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15038,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15039,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15040,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15041,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15036,
								15037,
								15038,
								15039,
								15040,
								15041
							]
						}
					]
				},
				{
					"id": 15042,
					"name": "AdminCreatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15043,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15044,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15045,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15046,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15047,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15048,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15049,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 15050,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15035,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15043,
								15044,
								15045,
								15046,
								15047,
								15048,
								15049,
								15050
							]
						}
					]
				},
				{
					"id": 15051,
					"name": "AdminUpdatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15052,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15053,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15054,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15055,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15056,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15057,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15058,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15052,
								15053,
								15054,
								15055,
								15056,
								15057,
								15058
							]
						}
					]
				},
				{
					"id": 15059,
					"name": "AdminUpdatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15060,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15061,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15062,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15063,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15064,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15065,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15066,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15060,
								15061,
								15062,
								15063,
								15064,
								15065,
								15066
							]
						}
					]
				},
				{
					"id": 15067,
					"name": "AdminBatchPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15068,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15035,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15069,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15051,
									"name": "AdminUpdatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15070,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15068,
								15069,
								15070
							]
						}
					]
				},
				{
					"id": 15071,
					"name": "AdminLinkPriceListProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15072,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15072
							]
						}
					]
				},
				{
					"id": 15073,
					"name": "AdminPriceListListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15084,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15073,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15073,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15085,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15073,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15073,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15083,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15080,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15081,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15082,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15074,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15075,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15076,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15077,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15078,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
										"qualifiedName": "PriceListStatus"
									},
									"name": "PriceListStatus",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15079,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15084,
								15085,
								15083,
								15080,
								15081,
								15082,
								15074,
								15075,
								15076,
								15077,
								15078,
								15079
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15073,
									"name": "AdminPriceListListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15086,
					"name": "AdminPriceListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15087,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15087
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15088,
					"name": "AdminPriceListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15089,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15022,
								"name": "AdminPriceList",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15089
							]
						}
					]
				},
				{
					"id": 15090,
					"name": "AdminPriceListListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15093,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15094,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15095,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15096,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15022,
									"name": "AdminPriceList",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.price_lists"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15093,
								15094,
								15095,
								15096
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15091,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15092,
												"name": "price_lists",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 15022,
														"name": "AdminPriceList",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15092
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15097,
					"name": "AdminPriceListDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15098,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15099,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "price_list"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15100,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15101,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15102,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15098,
								15099,
								15100,
								15101
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "price_list"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15103,
					"name": "AdminProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15104,
							"name": "category_children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15103,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15105,
							"name": "parent_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 15103,
										"name": "AdminProductCategory",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15106,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15108,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 15107,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 15112,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.description"
							}
						},
						{
							"id": 15113,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.handle"
							}
						},
						{
							"id": 15115,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_active"
							}
						},
						{
							"id": 15116,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_internal"
							}
						},
						{
							"id": 15117,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rank"
							}
						},
						{
							"id": 15114,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.parent_category_id"
							}
						},
						{
							"id": 15109,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.created_at"
							}
						},
						{
							"id": 15110,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.updated_at"
							}
						},
						{
							"id": 15111,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15104,
								15105,
								15106,
								15108,
								15107,
								15112,
								15113,
								15115,
								15116,
								15117,
								15114,
								15109,
								15110,
								15111
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 17404,
									"name": "BaseProductCategory",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "products"
										},
										{
											"type": "literal",
											"value": "category_children"
										},
										{
											"type": "literal",
											"value": "parent_category"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 15118,
					"name": "AdminCreateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15119,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15120,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15121,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15122,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15123,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15124,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15125,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15126,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15119,
								15120,
								15121,
								15122,
								15123,
								15124,
								15125,
								15126
							]
						}
					]
				},
				{
					"id": 15127,
					"name": "AdminUpdateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15128,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15129,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15130,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15131,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15132,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15133,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15134,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15135,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15128,
								15129,
								15130,
								15131,
								15132,
								15133,
								15134,
								15135
							]
						}
					]
				},
				{
					"id": 15136,
					"name": "AdminUpdateProductCategoryProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15137,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 15138,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15137,
								15138
							]
						}
					]
				},
				{
					"id": 15139,
					"name": "AdminProductCategoryListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15157,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17419,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17419,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17437,
								"name": "BaseProductCategoryListParams.$and"
							}
						},
						{
							"id": 15158,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 17419,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17419,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProductCategoryListParams.$or"
							}
						},
						{
							"id": 15156,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17436,
								"name": "BaseProductCategoryListParams.fields"
							}
						},
						{
							"id": 15153,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17433,
								"name": "BaseProductCategoryListParams.limit"
							}
						},
						{
							"id": 15154,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17434,
								"name": "BaseProductCategoryListParams.offset"
							}
						},
						{
							"id": 15155,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProductCategoryListParams.order"
							}
						},
						{
							"id": 15140,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProductCategoryListParams.is_internal"
							}
						},
						{
							"id": 15141,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 17426,
								"name": "BaseProductCategoryListParams.is_active"
							}
						},
						{
							"id": 15142,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17420,
								"name": "BaseProductCategoryListParams.q"
							}
						},
						{
							"id": 15143,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17421,
								"name": "BaseProductCategoryListParams.id"
							}
						},
						{
							"id": 15144,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17422,
								"name": "BaseProductCategoryListParams.name"
							}
						},
						{
							"id": 15145,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17423,
								"name": "BaseProductCategoryListParams.description"
							}
						},
						{
							"id": 15146,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17424,
								"name": "BaseProductCategoryListParams.parent_category_id"
							}
						},
						{
							"id": 15147,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17425,
								"name": "BaseProductCategoryListParams.handle"
							}
						},
						{
							"id": 15148,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17428,
								"name": "BaseProductCategoryListParams.include_descendants_tree"
							}
						},
						{
							"id": 15149,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProductCategoryListParams.include_ancestors_tree"
							}
						},
						{
							"id": 15150,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17430,
								"name": "BaseProductCategoryListParams.created_at"
							}
						},
						{
							"id": 15151,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17431,
								"name": "BaseProductCategoryListParams.updated_at"
							}
						},
						{
							"id": 15152,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProductCategoryListParams.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15157,
								15158,
								15156,
								15153,
								15154,
								15155,
								15140,
								15141,
								15142,
								15143,
								15144,
								15145,
								15146,
								15147,
								15148,
								15149,
								15150,
								15151,
								15152
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17419,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15159,
					"name": "AdminProductCategoryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15162,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17442,
								"name": "BaseProductCategoryParams.fields"
							}
						},
						{
							"id": 15160,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17440,
								"name": "BaseProductCategoryParams.include_ancestors_tree"
							}
						},
						{
							"id": 15161,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17441,
								"name": "BaseProductCategoryParams.include_descendants_tree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15162,
								15160,
								15161
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17439,
							"name": "BaseProductCategoryParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15163,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15164,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15103,
								"name": "AdminProductCategory",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15164
							]
						}
					]
				},
				{
					"id": 15165,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15168,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15169,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15170,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15171,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15103,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_categories"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15168,
								15169,
								15170,
								15171
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15166,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15167,
												"name": "product_categories",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 15103,
														"name": "AdminProductCategory",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15167
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15172,
					"name": "AdminProductCategoryDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15173,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15174,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_category"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15175,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15176,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15177,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15173,
								15174,
								15175,
								15176
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_category"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15178,
					"name": "AdminProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15179,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17444,
								"name": "BaseProductTag.id"
							}
						},
						{
							"id": 15180,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17445,
								"name": "BaseProductTag.value"
							}
						},
						{
							"id": 15181,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17446,
								"name": "BaseProductTag.created_at"
							}
						},
						{
							"id": 15182,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17447,
								"name": "BaseProductTag.updated_at"
							}
						},
						{
							"id": 15183,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17448,
								"name": "BaseProductTag.deleted_at"
							}
						},
						{
							"id": 15184,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17449,
								"name": "BaseProductTag.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15179,
								15180,
								15181,
								15182,
								15183,
								15184
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17443,
							"name": "BaseProductTag",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15185,
					"name": "AdminCreateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15186,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15187,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15186,
								15187
							]
						}
					]
				},
				{
					"id": 15188,
					"name": "AdminUpdateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15189,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15190,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15189,
								15190
							]
						}
					]
				},
				{
					"id": 15191,
					"name": "AdminProductTagListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15202,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15191,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15191,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15203,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15191,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15191,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15201,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17459,
								"name": "BaseProductTagListParams.fields"
							}
						},
						{
							"id": 15198,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17456,
								"name": "BaseProductTagListParams.limit"
							}
						},
						{
							"id": 15199,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17457,
								"name": "BaseProductTagListParams.offset"
							}
						},
						{
							"id": 15200,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17458,
								"name": "BaseProductTagListParams.order"
							}
						},
						{
							"id": 15192,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15193,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17451,
								"name": "BaseProductTagListParams.q"
							}
						},
						{
							"id": 15194,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17452,
								"name": "BaseProductTagListParams.id"
							}
						},
						{
							"id": 15195,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17453,
								"name": "BaseProductTagListParams.value"
							}
						},
						{
							"id": 15196,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17454,
								"name": "BaseProductTagListParams.created_at"
							}
						},
						{
							"id": 15197,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17455,
								"name": "BaseProductTagListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15202,
								15203,
								15201,
								15198,
								15199,
								15200,
								15192,
								15193,
								15194,
								15195,
								15196,
								15197
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17450,
							"name": "BaseProductTagListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15191,
									"name": "AdminProductTagListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15204,
					"name": "AdminProductTagParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15205,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15205
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15206,
					"name": "AdminProductTagResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15207,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15178,
								"name": "AdminProductTag",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15207
							]
						}
					]
				},
				{
					"id": 15208,
					"name": "AdminProductTagListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15211,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15212,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15213,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15214,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15178,
									"name": "AdminProductTag",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_tags"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15211,
								15212,
								15213,
								15214
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15209,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15210,
												"name": "product_tags",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 15178,
														"name": "AdminProductTag",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15210
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15215,
					"name": "AdminProductTagDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15216,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15217,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_tag"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15218,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15219,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15220,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15216,
								15217,
								15218,
								15219
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_tag"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15221,
					"name": "AdminProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15222,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17461,
								"name": "BaseProductType.id"
							}
						},
						{
							"id": 15223,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17462,
								"name": "BaseProductType.value"
							}
						},
						{
							"id": 15224,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17463,
								"name": "BaseProductType.created_at"
							}
						},
						{
							"id": 15225,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17464,
								"name": "BaseProductType.updated_at"
							}
						},
						{
							"id": 15226,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17465,
								"name": "BaseProductType.deleted_at"
							}
						},
						{
							"id": 15227,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17466,
								"name": "BaseProductType.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15222,
								15223,
								15224,
								15225,
								15226,
								15227
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17460,
							"name": "BaseProductType",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15228,
					"name": "AdminCreateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15229,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15230,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15229,
								15230
							]
						}
					]
				},
				{
					"id": 15231,
					"name": "AdminUpdateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15232,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15233,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15232,
								15233
							]
						}
					]
				},
				{
					"id": 15234,
					"name": "AdminProductTypeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15245,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15234,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15234,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15246,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15234,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15234,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15244,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15241,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15242,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15243,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15235,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15236,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15237,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15238,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15239,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15240,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15245,
								15246,
								15244,
								15241,
								15242,
								15243,
								15235,
								15236,
								15237,
								15238,
								15239,
								15240
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15234,
									"name": "AdminProductTypeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15247,
					"name": "AdminProductTypeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15248,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15248
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15249,
					"name": "AdminProductTypeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15250,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15221,
								"name": "AdminProductType",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15250
							]
						}
					]
				},
				{
					"id": 15251,
					"name": "AdminProductTypeListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15254,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15255,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15256,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15257,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15221,
									"name": "AdminProductType",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15254,
								15255,
								15256,
								15257
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15252,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15253,
												"name": "product_types",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 15221,
														"name": "AdminProductType",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15253
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15258,
					"name": "AdminProductTypeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15259,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15260,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_type"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15261,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15262,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15263,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15259,
								15260,
								15261,
								15262
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_type"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15361,
					"name": "AdminReservationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15362,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17475,
								"name": "ReservationResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15362
							]
						}
					]
				},
				{
					"id": 15363,
					"name": "AdminReservationListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15364,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15365,
											"name": "reservations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17475,
													"name": "ReservationResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15365
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15333,
					"name": "AdminReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15334,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17468,
								"name": "BaseReturnReason.id"
							}
						},
						{
							"id": 15335,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17469,
								"name": "BaseReturnReason.value"
							}
						},
						{
							"id": 15336,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17470,
								"name": "BaseReturnReason.label"
							}
						},
						{
							"id": 15337,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17471,
								"name": "BaseReturnReason.description"
							}
						},
						{
							"id": 15338,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17472,
								"name": "BaseReturnReason.metadata"
							}
						},
						{
							"id": 15339,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17473,
								"name": "BaseReturnReason.created_at"
							}
						},
						{
							"id": 15340,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17474,
								"name": "BaseReturnReason.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15334,
								15335,
								15336,
								15337,
								15338,
								15339,
								15340
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17467,
							"name": "BaseReturnReason",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15341,
					"name": "AdminCreateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15342,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15343,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15344,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15342,
								15343,
								15344
							]
						}
					]
				},
				{
					"id": 15345,
					"name": "AdminReturnReasonsResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15346,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15333,
									"name": "AdminReturnReason",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15346
							]
						}
					]
				},
				{
					"id": 15347,
					"name": "AdminReturnReasonListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15359,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15347,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15347,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15360,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15347,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15347,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15358,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15355,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15356,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15357,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15348,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15349,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15350,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15351,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15352,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15353,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15354,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15359,
								15360,
								15358,
								15355,
								15356,
								15357,
								15348,
								15349,
								15350,
								15351,
								15352,
								15353,
								15354
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15347,
									"name": "AdminReturnReasonListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15264,
					"name": "AdminBaseReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15265,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15266,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15267,
							"name": "received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15268,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15269,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15270,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15271,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15272,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15265,
								15266,
								15267,
								15268,
								15269,
								15270,
								15271,
								15272
							]
						}
					]
				},
				{
					"id": 15273,
					"name": "AdminReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15274,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15275,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15276,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15277,
							"name": "exchange_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15278,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15279,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15280,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15281,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15282,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15283,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15264,
									"name": "AdminBaseReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15274,
								15275,
								15276,
								15277,
								15278,
								15279,
								15280,
								15281,
								15282,
								15283
							]
						}
					]
				},
				{
					"id": 15284,
					"name": "AdminReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15285,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15273,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15285
							]
						}
					]
				},
				{
					"id": 15286,
					"name": "AdminReturnsResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15287,
							"name": "returns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15273,
									"name": "AdminReturn",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15287
							]
						}
					]
				},
				{
					"id": 15288,
					"name": "AdminInitiateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15289,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15290,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15291,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15292,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15293,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15294,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15289,
								15290,
								15291,
								15292,
								15293,
								15294
							]
						}
					]
				},
				{
					"id": 15295,
					"name": "AdminAddReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15296,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15297,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15298,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15299,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15300,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15296,
								15297,
								15298,
								15299,
								15300
							]
						}
					]
				},
				{
					"id": 15301,
					"name": "AdminAddReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15302,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15295,
									"name": "AdminAddReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15302
							]
						}
					]
				},
				{
					"id": 15303,
					"name": "AdminUpdateReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15304,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15305,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15306,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15304,
								15305,
								15306
							]
						}
					]
				},
				{
					"id": 15307,
					"name": "AdminAddReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15308,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15309,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15310,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15311,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15312,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15308,
								15309,
								15310,
								15311,
								15312
							]
						}
					]
				},
				{
					"id": 15313,
					"name": "AdminUpdateReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15314,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15315,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15316,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15314,
								15315,
								15316
							]
						}
					]
				},
				{
					"id": 15317,
					"name": "AdminConfirmReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15318,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15318
							]
						}
					]
				},
				{
					"id": 15319,
					"name": "AdminUpdateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15320,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15321,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15322,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15320,
								15321,
								15322
							]
						}
					]
				},
				{
					"id": 15323,
					"name": "AdminReturnFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15332,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15329,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15330,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15331,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15324,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15325,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15326,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15327,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15328,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15332,
								15329,
								15330,
								15331,
								15324,
								15325,
								15326,
								15327,
								15328
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15366,
					"name": "AdminShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15367,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15368,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15369,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15370,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15371,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15372,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15373,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15374,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15367,
								15368,
								15369,
								15370,
								15371,
								15372,
								15373,
								15374
							]
						}
					]
				},
				{
					"id": 15375,
					"name": "AdminShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15376,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15377,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15378,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15379,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15380,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15381,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15382,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15383,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15376,
								15377,
								15378,
								15379,
								15380,
								15381,
								15382,
								15383
							]
						}
					]
				},
				{
					"id": 15384,
					"name": "AdminShippingOptionPriceRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15385,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15386,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15385,
								15386
							]
						}
					]
				},
				{
					"id": 15387,
					"name": "AdminShippingOptionPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15388,
							"name": "price_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15384,
									"name": "AdminShippingOptionPriceRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15389,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15388,
								15389
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15390,
					"name": "AdminShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15391,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15392,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15393,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15394,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15395,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14827,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15396,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15397,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14799,
								"name": "AdminFulfillmentProvider",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15398,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15399,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15366,
								"name": "AdminShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15400,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15401,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15492,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15402,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15375,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15403,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15387,
									"name": "AdminShippingOptionPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15404,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15405,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15406,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 15407,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 15408,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15391,
								15392,
								15393,
								15394,
								15395,
								15396,
								15397,
								15398,
								15399,
								15400,
								15401,
								15402,
								15403,
								15404,
								15405,
								15406,
								15407,
								15408
							]
						}
					]
				},
				{
					"id": 15409,
					"name": "AdminCreateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15410,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 14144,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15411,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15412,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15410,
								15411,
								15412
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 15433,
							"name": "AdminUpdateShippingOptionRule"
						}
					]
				},
				{
					"id": 15413,
					"name": "AdminCreateShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15414,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15415,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15416,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15414,
								15415,
								15416
							]
						}
					]
				},
				{
					"id": 15417,
					"name": "AdminCreateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15418,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15419,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15418,
								15419
							]
						}
					]
				},
				{
					"id": 15420,
					"name": "AdminCreateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15421,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15422,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15421,
								15422
							]
						}
					]
				},
				{
					"id": 15423,
					"name": "AdminCreateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15424,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15425,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15426,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15427,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 15428,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15429,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15430,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15413,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15431,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15417,
											"name": "AdminCreateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 15420,
											"name": "AdminCreateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 15432,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15409,
									"name": "AdminCreateShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15424,
								15425,
								15426,
								15427,
								15428,
								15429,
								15430,
								15431,
								15432
							]
						}
					]
				},
				{
					"id": 15433,
					"name": "AdminUpdateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15435,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 14144,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 15410,
								"name": "AdminCreateShippingOptionRule.operator"
							}
						},
						{
							"id": 15436,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 15411,
								"name": "AdminCreateShippingOptionRule.attribute"
							}
						},
						{
							"id": 15437,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 15412,
								"name": "AdminCreateShippingOptionRule.value"
							}
						},
						{
							"id": 15434,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15435,
								15436,
								15437,
								15434
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 15409,
							"name": "AdminCreateShippingOptionRule",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15438,
					"name": "AdminUpdateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15439,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15440,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15441,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15439,
								15440,
								15441
							]
						}
					]
				},
				{
					"id": 15442,
					"name": "AdminUpdateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15443,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15444,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15445,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15443,
								15444,
								15445
							]
						}
					]
				},
				{
					"id": 15446,
					"name": "AdminUpdateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15447,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15448,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 15449,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15450,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15451,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15452,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15413,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15453,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15438,
											"name": "AdminUpdateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 15442,
											"name": "AdminUpdateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 15454,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15409,
											"name": "AdminCreateShippingOptionRule",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 15433,
											"name": "AdminUpdateShippingOptionRule",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15447,
								15448,
								15449,
								15450,
								15451,
								15452,
								15453,
								15454
							]
						}
					]
				},
				{
					"id": 15455,
					"name": "AdminUpdateShippingOptionRules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15456,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 15457,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 15458,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15456,
								15457,
								15458
							]
						}
					]
				},
				{
					"id": 15459,
					"name": "AdminShippingOptionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15472,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15469,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15470,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15471,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15460,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15461,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15462,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15463,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15464,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15465,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15466,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15467,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15468,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15472,
								15469,
								15470,
								15471,
								15460,
								15461,
								15462,
								15463,
								15464,
								15465,
								15466,
								15467,
								15468
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15473,
					"name": "AdminShippingOptionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15474,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15390,
								"name": "AdminShippingOption",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15474
							]
						}
					]
				},
				{
					"id": 15475,
					"name": "AdminShippingOptionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15476,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15477,
											"name": "shipping_options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15390,
													"name": "AdminShippingOption",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15477
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15478,
					"name": "AdminShippingOptionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15479,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15480,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_option"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15481,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15482,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15483,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15479,
								15480,
								15481,
								15482
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_option"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15484,
					"name": "AdminUpdateShippingOptionRulesResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15485,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15375,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15486,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15375,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15487,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15488,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15489,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 15490,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "shipping_option_rule"
											}
										},
										{
											"id": 15491,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15489,
												15490,
												15491
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15485,
								15486,
								15487
							]
						}
					]
				},
				{
					"id": 15492,
					"name": "AdminShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15493,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15494,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15495,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15496,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15497,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15498,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15499,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15493,
								15494,
								15495,
								15496,
								15497,
								15498,
								15499
							]
						}
					]
				},
				{
					"id": 15500,
					"name": "AdminCreateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15501,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15502,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15503,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15501,
								15502,
								15503
							]
						}
					]
				},
				{
					"id": 15504,
					"name": "AdminUpdateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15505,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15506,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15507,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15505,
								15506,
								15507
							]
						}
					]
				},
				{
					"id": 15508,
					"name": "AdminShippingProfileListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15521,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15518,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15519,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15520,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15509,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15510,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15511,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15512,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15513,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15514,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15515,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15516,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15508,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15517,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15508,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15521,
								15518,
								15519,
								15520,
								15509,
								15510,
								15511,
								15512,
								15513,
								15514,
								15515,
								15516,
								15517
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15522,
					"name": "AdminShippingProfileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15523,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15492,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15523
							]
						}
					]
				},
				{
					"id": 15524,
					"name": "AdminShippingProfileListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15525,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15526,
											"name": "shipping_profiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15492,
													"name": "AdminShippingProfile",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15526
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15527,
					"name": "AdminShippingProfileDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15528,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15529,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_profile"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15530,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15531,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15532,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15528,
								15529,
								15530,
								15531
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_profile"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15533,
					"name": "AdminStockLocationAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15534,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15535,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15536,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15537,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15538,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15539,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15540,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15541,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15542,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15534,
								15535,
								15536,
								15537,
								15538,
								15539,
								15540,
								15541,
								15542
							]
						}
					]
				},
				{
					"id": 15543,
					"name": "AdminStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15544,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15545,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15546,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15547,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 15533,
								"name": "AdminStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15548,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/entities.ts",
										"qualifiedName": "AdminSalesChannel"
									},
									"name": "AdminSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15549,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14836,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15544,
								15545,
								15546,
								15547,
								15548,
								15549
							]
						}
					]
				},
				{
					"id": 15550,
					"name": "AdminCreateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15551,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15552,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15553,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17489,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15554,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15551,
								15552,
								15553,
								15554
							]
						}
					]
				},
				{
					"id": 15555,
					"name": "AdminUpdateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15556,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15557,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15558,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17489,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15559,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15556,
								15557,
								15558,
								15559
							]
						}
					]
				},
				{
					"id": 15560,
					"name": "AdminUpdateStockLocationSalesChannels",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15561,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 15562,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15561,
								15562
							]
						}
					]
				},
				{
					"id": 15563,
					"name": "AdminCreateStockLocationFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15564,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15565,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15564,
								15565
							]
						}
					]
				},
				{
					"id": 15566,
					"name": "AdminStockLocationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15577,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15574,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15575,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15576,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15567,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15568,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15569,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15570,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15571,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15572,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15566,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15573,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15566,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15577,
								15574,
								15575,
								15576,
								15567,
								15568,
								15569,
								15570,
								15571,
								15572,
								15573
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15578,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15579,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15543,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15579
							]
						}
					]
				},
				{
					"id": 15580,
					"name": "AdminStockLocationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15583,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 15584,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 15585,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 15586,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15543,
									"name": "AdminStockLocation",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.stock_locations"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15583,
								15584,
								15585,
								15586
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14786,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 15581,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 15582,
												"name": "stock_locations",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 15543,
														"name": "AdminStockLocation",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													15582
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15587,
					"name": "AdminStockLocationDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15588,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15589,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "stock_location"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15590,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15591,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15592,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15588,
								15589,
								15590,
								15591
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "stock_location"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15593,
					"name": "AdminTaxRateRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15594,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15595,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15594,
								15595
							]
						}
					]
				},
				{
					"id": 15596,
					"name": "AdminTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15597,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15598,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15599,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15600,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15601,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15602,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15603,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15604,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15605,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15606,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15607,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 15608,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15609,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15655,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15610,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15593,
									"name": "AdminTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15597,
								15598,
								15599,
								15600,
								15601,
								15602,
								15603,
								15604,
								15605,
								15606,
								15607,
								15608,
								15609,
								15610
							]
						}
					]
				},
				{
					"id": 15611,
					"name": "AdminCreateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15612,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15613,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15614,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15615,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15616,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17498,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15617,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15618,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15619,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15612,
								15613,
								15614,
								15615,
								15616,
								15617,
								15618,
								15619
							]
						}
					]
				},
				{
					"id": 15620,
					"name": "AdminUpdateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15621,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15622,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15623,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15624,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17498,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15625,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15626,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15627,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15621,
								15622,
								15623,
								15624,
								15625,
								15626,
								15627
							]
						}
					]
				},
				{
					"id": 15628,
					"name": "AdminTaxRateListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15643,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15640,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15641,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15642,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15629,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15630,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15631,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15632,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15633,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15634,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15635,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15636,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15637,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15638,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15639,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15643,
								15640,
								15641,
								15642,
								15629,
								15630,
								15631,
								15632,
								15633,
								15634,
								15635,
								15636,
								15637,
								15638,
								15639
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15644,
					"name": "AdminTaxRateResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15645,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15596,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15645
							]
						}
					]
				},
				{
					"id": 15646,
					"name": "AdminTaxRateListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15647,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15648,
											"name": "tax_rates",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15596,
													"name": "AdminTaxRate",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15648
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15649,
					"name": "AdminTaxRateDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15650,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15651,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_rate"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15652,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15653,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15654,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15650,
								15651,
								15652,
								15653
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_rate"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15655,
					"name": "AdminTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15656,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15657,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15658,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15659,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15660,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15661,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15662,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15663,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15664,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15665,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15666,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15667,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15668,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15669,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15670,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15671,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15596,
									"name": "AdminTaxRate",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 15672,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 15655,
										"name": "AdminTaxRegion",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15673,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15655,
									"name": "AdminTaxRegion",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15656,
								15657,
								15658,
								15659,
								15660,
								15661,
								15662,
								15663,
								15664,
								15665,
								15666,
								15667,
								15668,
								15669,
								15670,
								15671,
								15672,
								15673
							]
						}
					]
				},
				{
					"id": 15674,
					"name": "AdminCreateTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15675,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15676,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15677,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15678,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15679,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15680,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15681,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15682,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15683,
											"name": "is_combinable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 15684,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15680,
												15681,
												15682,
												15683,
												15684
											]
										}
									]
								}
							}
						},
						{
							"id": 15685,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15675,
								15676,
								15677,
								15678,
								15685
							]
						}
					]
				},
				{
					"id": 15686,
					"name": "AdminTaxRegionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 15700,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15686,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15686,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15701,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15686,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15686,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15699,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14776,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 15696,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14773,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 15697,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14774,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 15698,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14775,
								"name": "FindParams.order"
							}
						},
						{
							"id": 15687,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15688,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15689,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15690,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15691,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15692,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15693,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15694,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15695,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15700,
								15701,
								15699,
								15696,
								15697,
								15698,
								15687,
								15688,
								15689,
								15690,
								15691,
								15692,
								15693,
								15694,
								15695
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14772,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15686,
									"name": "AdminTaxRegionListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15702,
					"name": "AdminTaxRegionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15703,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14771,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15703
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14770,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15704,
					"name": "AdminTaxRegionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15705,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 15655,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15705
							]
						}
					]
				},
				{
					"id": 15706,
					"name": "AdminTaxRegionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 14786,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15707,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15708,
											"name": "tax_regions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15655,
													"name": "AdminTaxRegion",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15708
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 15709,
					"name": "AdminTaxRegionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15710,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 15711,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_region"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 15712,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 15713,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15714,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15710,
								15711,
								15712,
								15713
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14777,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_region"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						14653,
						14665,
						14677,
						14695,
						14697,
						14706,
						14710,
						14714,
						14717,
						14731,
						14733,
						14735,
						14742,
						14748,
						14757,
						14770,
						14772,
						14792,
						14796,
						14799,
						14802,
						14810,
						14817,
						14827,
						14836,
						14844,
						14847,
						14850,
						14852,
						14857,
						14859,
						14935,
						14944,
						14947,
						14951,
						14955,
						14961,
						14865,
						14881,
						14896,
						14911,
						14929,
						14984,
						14998,
						15008,
						15010,
						15012,
						15019,
						15022,
						15035,
						15042,
						15051,
						15059,
						15067,
						15071,
						15073,
						15086,
						15088,
						15090,
						15097,
						15103,
						15118,
						15127,
						15136,
						15139,
						15159,
						15163,
						15165,
						15172,
						15178,
						15185,
						15188,
						15191,
						15204,
						15206,
						15208,
						15215,
						15221,
						15228,
						15231,
						15234,
						15247,
						15249,
						15251,
						15258,
						15361,
						15333,
						15341,
						15345,
						15347,
						15264,
						15273,
						15284,
						15286,
						15288,
						15295,
						15301,
						15303,
						15307,
						15313,
						15317,
						15319,
						15323,
						15366,
						15375,
						15384,
						15387,
						15390,
						15409,
						15413,
						15417,
						15420,
						15423,
						15433,
						15438,
						15442,
						15446,
						15455,
						15459,
						15473,
						15478,
						15484,
						15492,
						15500,
						15504,
						15508,
						15522,
						15527,
						15533,
						15543,
						15550,
						15555,
						15560,
						15563,
						15566,
						15578,
						15580,
						15587,
						15593,
						15596,
						15611,
						15620,
						15628,
						15644,
						15649,
						15655,
						15674,
						15686,
						15702,
						15704,
						15709
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						14692,
						14777,
						14786,
						14795,
						14963,
						14931,
						14934,
						14966,
						14970,
						14974,
						15363,
						15475,
						15524,
						15646,
						15706
					]
				}
			]
		},
		{
			"id": 17404,
			"name": "BaseProductCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17405,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17406,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17407,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17408,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17409,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17410,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17411,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 17412,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17413,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 17404,
								"name": "BaseProductCategory",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 17414,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17404,
							"name": "BaseProductCategory",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17415,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17416,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17417,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17418,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17405,
						17406,
						17407,
						17408,
						17409,
						17410,
						17411,
						17412,
						17413,
						17414,
						17415,
						17416,
						17417,
						17418
					]
				}
			]
		},
		{
			"id": 17419,
			"name": "BaseProductCategoryListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 17437,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 17419,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14306,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17419,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14307,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 17438,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 17419,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14306,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17419,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14308,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 17436,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14776,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 17433,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14773,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 17434,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14774,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 17435,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14775,
						"name": "FindParams.order"
					}
				},
				{
					"id": 17420,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17421,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17422,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17423,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17424,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17425,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17426,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17427,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17428,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17429,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17430,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17431,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17432,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17437,
						17438,
						17436,
						17433,
						17434,
						17435,
						17420,
						17421,
						17422,
						17423,
						17424,
						17425,
						17426,
						17427,
						17428,
						17429,
						17430,
						17431,
						17432
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14772,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 14306,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17419,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15139,
					"name": "AdminProductCategoryListParams"
				}
			]
		},
		{
			"id": 17439,
			"name": "BaseProductCategoryParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17442,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14771,
						"name": "SelectParams.fields"
					}
				},
				{
					"id": 17440,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17441,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17442,
						17440,
						17441
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14770,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15159,
					"name": "AdminProductCategoryParams"
				}
			]
		},
		{
			"id": 17443,
			"name": "BaseProductTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17444,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17445,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17446,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17447,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17448,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17449,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17444,
						17445,
						17446,
						17447,
						17448,
						17449
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15178,
					"name": "AdminProductTag"
				}
			]
		},
		{
			"id": 17450,
			"name": "BaseProductTagListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17459,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14776,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 17456,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14773,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 17457,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14774,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 17458,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14775,
						"name": "FindParams.order"
					}
				},
				{
					"id": 17451,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17452,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17453,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17454,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17455,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 14284,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17459,
						17456,
						17457,
						17458,
						17451,
						17452,
						17453,
						17454,
						17455
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14772,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15191,
					"name": "AdminProductTagListParams"
				}
			]
		},
		{
			"id": 17460,
			"name": "BaseProductType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17461,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17462,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17463,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17464,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17465,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17466,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17461,
						17462,
						17463,
						17464,
						17465,
						17466
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15221,
					"name": "AdminProductType"
				}
			]
		},
		{
			"id": 17475,
			"name": "ReservationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17476,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17477,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17478,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17479,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17480,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17481,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17482,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17483,
					"name": "inventory_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17484,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17485,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17486,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 17487,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 17488,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17476,
						17477,
						17478,
						17479,
						17480,
						17481,
						17482,
						17483,
						17484,
						17485,
						17486,
						17487,
						17488
					]
				}
			]
		},
		{
			"id": 17467,
			"name": "BaseReturnReason",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17468,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17469,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17470,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17471,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17472,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 17473,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17474,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17468,
						17469,
						17470,
						17471,
						17472,
						17473,
						17474
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15333,
					"name": "AdminReturnReason"
				}
			]
		},
		{
			"id": 17489,
			"name": "AdminUpsertStockLocationAddress",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17490,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17491,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17492,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17493,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17494,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17495,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17496,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17497,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17490,
						17491,
						17492,
						17493,
						17494,
						17495,
						17496,
						17497
					]
				}
			]
		},
		{
			"id": 17498,
			"name": "AdminCreateTaxRateRule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17499,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17500,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17499,
						17500
					]
				}
			]
		},
		{
			"id": 15715,
			"name": "InventoryTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 15716,
					"name": "InventoryItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item details."
							}
						]
					},
					"children": [
						{
							"id": 15717,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15718,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15719,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15720,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15721,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15722,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mid code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15723,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15724,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15725,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15726,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15727,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15728,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15729,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15730,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15731,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15732,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15733,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15734,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15717,
								15718,
								15719,
								15720,
								15721,
								15722,
								15723,
								15724,
								15725,
								15726,
								15727,
								15728,
								15729,
								15730,
								15731,
								15732,
								15733,
								15734
							]
						}
					]
				},
				{
					"id": 15735,
					"name": "FilterableInventoryItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved inventory items."
							}
						]
					},
					"children": [
						{
							"id": 15736,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search term to search inventory items' attributes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15737,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15738,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15739,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKUs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14120,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15740,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15741,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS Codes to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14120,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15742,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by whether they require shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15736,
								15737,
								15738,
								15739,
								15740,
								15741,
								15742
							]
						}
					]
				},
				{
					"id": 15743,
					"name": "InventoryLevelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory level details."
							}
						]
					},
					"children": [
						{
							"id": 15744,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15745,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15746,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15747,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15748,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15749,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15750,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The available quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15751,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15752,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15753,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15754,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15744,
								15745,
								15746,
								15747,
								15748,
								15749,
								15750,
								15751,
								15752,
								15753,
								15754
							]
						}
					]
				},
				{
					"id": 15755,
					"name": "FilterableInventoryLevelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved inventory levels."
							}
						]
					},
					"children": [
						{
							"id": 15761,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15755,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15755,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 15762,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 15755,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 15755,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 15756,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15757,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15758,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`stocked_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15759,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`reserved_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15760,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`incoming_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15761,
								15762,
								15756,
								15757,
								15758,
								15759,
								15760
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 15755,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 15763,
					"name": "ReservationItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation item details."
							}
						]
					},
					"children": [
						{
							"id": 15764,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reservation item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15765,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15766,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15767,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the reservation item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17287,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15768,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15769,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15770,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15771,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created by of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15772,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15773,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15774,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15775,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15764,
								15765,
								15766,
								15767,
								15768,
								15769,
								15770,
								15771,
								15772,
								15773,
								15774,
								15775
							]
						}
					]
				},
				{
					"id": 15776,
					"name": "FilterableReservationItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved reservation items."
							}
						]
					},
					"children": [
						{
							"id": 15777,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15779,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15780,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15781,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15782,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`description`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 14120,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 15783,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The \"created by\" values to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 15784,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 14128,
										"name": "NumericalComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15777,
								15779,
								15780,
								15781,
								15782,
								15783,
								15784
							]
						}
					]
				},
				{
					"id": 15785,
					"name": "UpdateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15786,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15787,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.sku"
							}
						},
						{
							"id": 15788,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.origin_country"
							}
						},
						{
							"id": 15789,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.mid_code"
							}
						},
						{
							"id": 15790,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.material"
							}
						},
						{
							"id": 15791,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.weight"
							}
						},
						{
							"id": 15792,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.length"
							}
						},
						{
							"id": 15793,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.height"
							}
						},
						{
							"id": 15794,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.width"
							}
						},
						{
							"id": 15795,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.title"
							}
						},
						{
							"id": 15796,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 15797,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.thumbnail"
							}
						},
						{
							"id": 15798,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 15799,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.hs_code"
							}
						},
						{
							"id": 15800,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.requires_shipping"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15786,
								15787,
								15788,
								15789,
								15790,
								15791,
								15792,
								15793,
								15794,
								15795,
								15796,
								15797,
								15798,
								15799,
								15800
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 15801,
									"name": "CreateInventoryItemInput",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 15801,
					"name": "CreateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the inventory item to be created."
							}
						]
					},
					"children": [
						{
							"id": 15802,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15803,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15804,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15805,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15806,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15807,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15808,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15809,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 15810,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15811,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15812,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15813,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15814,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15815,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15802,
								15803,
								15804,
								15805,
								15806,
								15807,
								15808,
								15809,
								15810,
								15811,
								15812,
								15813,
								15814,
								15815
							]
						}
					]
				},
				{
					"id": 15816,
					"name": "CreateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15817,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15818,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15819,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15820,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15817,
								15818,
								15819,
								15820
							]
						}
					]
				},
				{
					"id": 15821,
					"name": "UpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level."
							}
						]
					},
					"children": [
						{
							"id": 15822,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15823,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15824,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15822,
								15823,
								15824
							]
						}
					]
				},
				{
					"id": 15825,
					"name": "BulkUpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
							}
						]
					},
					"children": [
						{
							"id": 15828,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15829,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15830,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15826,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15827,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15828,
								15829,
								15830,
								15826,
								15827
							]
						}
					]
				},
				{
					"id": 15831,
					"name": "BulkAdjustInventoryLevelInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 15832,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 15833,
											"name": "inventory_item_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated inventory level."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15834,
											"name": "location_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15835,
											"name": "adjustment",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to adjust the inventory level by."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17287,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15833,
												15834,
												15835
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 15821,
								"name": "UpdateInventoryLevelInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 15836,
					"name": "UpdateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in a reservation item."
							}
						]
					},
					"children": [
						{
							"id": 15837,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15838,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17287,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15839,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15840,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15841,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15842,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15837,
								15838,
								15839,
								15840,
								15841,
								15842
							]
						}
					]
				},
				{
					"id": 15843,
					"name": "CreateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reservation item to be created."
							}
						]
					},
					"children": [
						{
							"id": 15844,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15845,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15846,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15847,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17287,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15848,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 15849,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15850,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user or system that created the reservation. Can be any form of identification string."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15851,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An ID associated with an external third-party system that the reservation item is connected to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15852,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15844,
								15845,
								15846,
								15847,
								15848,
								15849,
								15850,
								15851,
								15852
							]
						}
					]
				},
				{
					"id": 15853,
					"name": "ReserveQuantityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15854,
							"name": "locationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15855,
							"name": "lineItemId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15856,
							"name": "salesChannelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15854,
								15855,
								15856
							]
						}
					]
				},
				{
					"id": 15857,
					"name": "IInventoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Inventory Module."
							}
						]
					},
					"children": [
						{
							"id": 15858,
							"name": "listInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15859,
									"name": "listInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15860,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15735,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15861,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15716,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15862,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15716,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15863,
							"name": "listAndCountInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15864,
									"name": "listAndCountInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15865,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15735,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15866,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15716,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15867,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 15716,
															"name": "InventoryItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15868,
							"name": "listReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15869,
									"name": "listReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15870,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15776,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15871,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15763,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15872,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15763,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15873,
							"name": "listAndCountReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15874,
									"name": "listAndCountReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15875,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15776,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15876,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15763,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15877,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 15763,
															"name": "ReservationItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15878,
							"name": "listInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15879,
									"name": "listInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15880,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15755,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15881,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15743,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15882,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15743,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15883,
							"name": "listAndCountInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15884,
									"name": "listAndCountInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15885,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15755,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15886,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15743,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15887,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 15743,
															"name": "InventoryLevelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15888,
							"name": "retrieveInventoryItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15889,
									"name": "retrieveInventoryItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15890,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15891,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15716,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15892,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15716,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15893,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15894,
									"name": "retrieveInventoryLevelByItemAndLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level based on its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15895,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15896,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15897,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15743,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15898,
							"name": "retrieveInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15899,
									"name": "retrieveInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory level by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15900,
											"name": "inventoryLevelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory level's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15901,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15743,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15902,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15743,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15903,
							"name": "retrieveReservationItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15904,
									"name": "retrieveReservationItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a reservation item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15905,
											"name": "reservationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15906,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15763,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15907,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15763,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15908,
							"name": "createReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15909,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15910,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15843,
													"name": "CreateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15911,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15763,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15912,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15913,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15843,
												"name": "CreateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15914,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15763,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15915,
							"name": "createInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15916,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15917,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15801,
													"name": "CreateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15918,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15716,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15919,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15920,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15801,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15921,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15716,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15922,
							"name": "createInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15923,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15924,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory levels to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15816,
													"name": "CreateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15925,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15743,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15926,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15927,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory level to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15816,
												"name": "CreateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15928,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15743,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15929,
							"name": "updateInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15930,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15931,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15825,
													"name": "BulkUpdateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15932,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15743,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15933,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15934,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15825,
												"name": "BulkUpdateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15935,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15743,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15936,
							"name": "updateInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15937,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15938,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15785,
												"name": "UpdateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15939,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15716,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15940,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15941,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15785,
													"name": "UpdateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15942,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15716,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15943,
							"name": "updateReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15944,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15945,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 15836,
												"name": "UpdateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15946,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15763,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 15947,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15948,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the reservation items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15836,
													"name": "UpdateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 15949,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15763,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15950,
							"name": "deleteReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15951,
									"name": "deleteReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation item by its associated line item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15952,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15953,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15954,
							"name": "restoreReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15955,
									"name": "restoreReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation items are successfully deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15956,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID(s) of the line item(s)."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15957,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15958,
							"name": "deleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15959,
									"name": "deleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15960,
											"name": "reservationItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation items' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15961,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15962,
							"name": "softDeleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15963,
									"name": "softDeleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 15964,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 15965,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 15966,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14458,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15964,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15967,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15968,
							"name": "restoreReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15969,
									"name": "restoreReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 15970,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 15971,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 15972,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the reservation's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14461,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15970,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15973,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15974,
							"name": "deleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15975,
									"name": "deleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory items are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15976,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15977,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15978,
							"name": "softDeleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15979,
									"name": "softDeleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 15980,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 15981,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 15982,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14458,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15980,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15983,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15984,
							"name": "restoreInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15985,
									"name": "restoreInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 15986,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 15987,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 15988,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory item's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`location_levels`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14461,
												"typeArguments": [
													{
														"type": "reference",
														"target": 15986,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 15989,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15990,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15991,
									"name": "deleteInventoryItemLevelByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory item's level by the associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15992,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15993,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15994,
							"name": "deleteReservationItemByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15995,
									"name": "deleteReservationItemByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when then reservation items are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 15996,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 15997,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 15998,
							"name": "deleteInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 15999,
									"name": "deleteInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level by its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory level is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16000,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16001,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16002,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16003,
							"name": "deleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16004,
									"name": "deleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory levels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16005,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 16006,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16007,
							"name": "softDeleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16008,
									"name": "softDeleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 16009,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 16010,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16011,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14458,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16009,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16012,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16013,
							"name": "restoreInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16014,
									"name": "restoreInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 16015,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 16016,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16017,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory level's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14461,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16015,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16018,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16019,
							"name": "adjustInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16020,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adjusts the inventory quantity of an item in a location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16021,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 16022,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 16023,
																"name": "inventoryItemId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 16024,
																"name": "locationId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 16025,
																"name": "adjustment",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 17287,
																	"name": "BigNumberInput",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	16023,
																	16024,
																	16025
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 16026,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 15743,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16027,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16028,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16029,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16030,
											"name": "adjustment",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 17287,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16031,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 15743,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16032,
							"name": "confirmInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16033,
									"name": "confirmInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the quantity is available."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16034,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16035,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16036,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to confirm its availability."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17287,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16037,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16038,
							"name": "retrieveAvailableQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16039,
									"name": "retrieveAvailableQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the available quantity of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The available quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16040,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16041,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16042,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17274,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16043,
							"name": "retrieveStockedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16044,
									"name": "retrieveStockedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stocked quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16045,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16046,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16047,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17274,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16048,
							"name": "retrieveReservedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16049,
									"name": "retrieveReservedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reserved quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16050,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16051,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16052,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17274,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								15858,
								15863,
								15868,
								15873,
								15878,
								15883,
								15888,
								15893,
								15898,
								15903,
								15908,
								15915,
								15922,
								15929,
								15936,
								15943,
								15950,
								15954,
								15958,
								15962,
								15968,
								15974,
								15978,
								15984,
								15990,
								15994,
								15998,
								16003,
								16007,
								16013,
								16019,
								16032,
								16038,
								16043,
								16048
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16295,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						15716,
						15735,
						15743,
						15755,
						15763,
						15776,
						15785,
						15801,
						15816,
						15821,
						15825,
						15836,
						15843,
						15853,
						15857
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						15831
					]
				}
			]
		},
		{
			"id": 17068,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17069,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17070,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17071,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17072,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17073,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17074,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17075,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17076,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17070,
								17071,
								17072,
								17073,
								17074,
								17075,
								17076
							]
						}
					]
				}
			}
		},
		{
			"id": 17077,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17078,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17079,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17078,
						17079
					]
				}
			]
		},
		{
			"id": 17080,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17081,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17082,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 17077,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17077,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 17083,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 17084,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17085,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17086,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17085,
														17086
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17087,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17088,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17068,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17089,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 17090,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 17091,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 17092,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 17068,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											17091,
											17092
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 17093,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17081,
						17082,
						17083,
						17087,
						17088,
						17089,
						17093
					]
				}
			]
		},
		{
			"id": 17094,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17095,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17096,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17095,
						17096
					]
				}
			]
		},
		{
			"id": 17097,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17098,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17099,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17098,
						17099
					]
				}
			]
		},
		{
			"id": 17100,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17101,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17102,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17103,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 17104,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 17105,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 17106,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 17107,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 17094,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 17108,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 17109,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 17110,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 17111,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": 17097,
																"name": "JoinerDirective",
																"package": "@medusajs/types"
															}
														}
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											17105,
											17106,
											17107,
											17108
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 17112,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17113,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17094,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17114,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17115,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 17116,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 17117,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17097,
											"name": "JoinerDirective",
											"package": "@medusajs/types"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17101,
						17102,
						17103,
						17112,
						17113,
						17114
					]
				}
			]
		},
		{
			"id": 17118,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17119,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17120,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17119,
						17120
					]
				}
			]
		},
		{
			"id": 17121,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignatures": [
				{
					"id": 17122,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 17123,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17124,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17125,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 17126,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17094,
											"name": "JoinerArgument",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 17127,
									"name": "expands",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17121,
										"name": "RemoteNestedExpands",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17125,
										17126,
										17127
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 17128,
			"name": "InternalJoinerServiceConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 17080,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "relationships"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17130,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 17068,
												"name": "JoinerRelationship",
												"package": "@medusajs/types"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17130
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17131,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17132,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17133,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17134,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 17128,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17135,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17128,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17136,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17137,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17094,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 17138,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 17121,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17132,
						17133,
						17134,
						17135,
						17136,
						17137,
						17138
					]
				}
			]
		},
		{
			"id": 17187,
			"name": "PlannerActionLinkDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Link descriptor containing metadata about the link's\nmodules and models."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17188,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17189,
							"name": "fromModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17190,
							"name": "toModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17191,
							"name": "fromModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17192,
							"name": "toModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17189,
								17190,
								17191,
								17192
							]
						}
					]
				}
			}
		},
		{
			"id": 17193,
			"name": "LinkMigrationsPlannerAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of actions prepared and executed by\nthe \"ILinkMigrationsPlanner\"."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 17194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17195,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "create"
											},
											{
												"type": "literal",
												"value": "update"
											},
											{
												"type": "literal",
												"value": "notify"
											}
										]
									}
								},
								{
									"id": 17196,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17187,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17197,
									"name": "sql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17198,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17195,
										17196,
										17197,
										17198
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17199,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17200,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "noop"
									}
								},
								{
									"id": 17201,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17202,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17187,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17200,
										17201,
										17202
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17203,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17204,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "delete"
									}
								},
								{
									"id": 17205,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17187,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17206,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17204,
										17205,
										17206
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17207,
			"name": "ILinkMigrationsPlanner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17208,
					"name": "createPlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17209,
							"name": "createPlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17193,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17210,
					"name": "executePlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17211,
							"name": "executePlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17212,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17193,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						17208,
						17210
					]
				}
			]
		},
		{
			"id": 17139,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17140,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17141,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17142,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 17143,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14059,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17144,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17145,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17146,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17147,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 17148,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14059,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17149,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17150,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17151,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17152,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 17153,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17154,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17155,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17156,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17157,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 17158,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17159,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17160,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17161,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17162,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 17163,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17164,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17165,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17166,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 17167,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14458,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17168,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17169,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17170,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17171,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 17172,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14461,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17173,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17239,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						17140,
						17145,
						17150,
						17155,
						17160,
						17164,
						17169
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16295,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 16066,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16067,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16068,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16069,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16070,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16071,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16072,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16073,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16074,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16075,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16076,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16077,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16078,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16079,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16080,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16081,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16082,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16083,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16084,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16085,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16086,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16087,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16088,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16089,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16090,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16091,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 16092,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16093,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16094,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16095,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16096,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 16097,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16098,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16099,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16100,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16101,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 16102,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16103,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16104,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16105,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16106,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 16107,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16108,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16109,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16110,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16111,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16112,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16113,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16114,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16115,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16116,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16117,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16118,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16119,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 16120,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16121,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16122,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16123,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16068,
								16072,
								16076,
								16080,
								16083,
								16088,
								16093,
								16098,
								16103,
								16108,
								16112,
								16116,
								16120
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16067
					]
				}
			]
		},
		{
			"id": 16124,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16125,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 16131,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16126,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 16127,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 16130,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 16131,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 16128,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 16129,
															"name": "__type",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 16131,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 16132,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 16133,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16132,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 16134,
					"name": "CustomModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16135,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16136,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16137,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16138,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16139,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16140,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16136,
										16137,
										16138,
										16139,
										16140
									]
								}
							]
						}
					}
				},
				{
					"id": 16141,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16142,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16143,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "internal"
									}
								},
								{
									"id": 16144,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "isolated"
											}
										]
									}
								},
								{
									"id": 16145,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16146,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16134,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16147,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 16248,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 16148,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 16149,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16150,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16151,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16143,
										16144,
										16145,
										16146,
										16147,
										16148,
										16149,
										16150,
										16151
									]
								}
							]
						}
					}
				},
				{
					"id": 16152,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16153,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16154,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "external"
									}
								},
								{
									"id": 16155,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16134,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16156,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16157,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16158,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 16159,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16160,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16158,
														16159,
														16160
													]
												}
											]
										}
									}
								},
								{
									"id": 16161,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 16162,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16163,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16154,
										16155,
										16156,
										16161,
										16162,
										16163
									]
								}
							]
						}
					}
				},
				{
					"id": 16164,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16165,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16166,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 16167,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16172,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16168,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 16169,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16170,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 16141,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 16152,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 16171,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16248,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16166,
										16167,
										16168,
										16169,
										16170,
										16171
									]
								}
							]
						}
					}
				},
				{
					"id": 16172,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16173,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16174,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16175,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16176,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 16177,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16178,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16179,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16180,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16182,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 16141,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 16152,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16174,
										16175,
										16176,
										16177,
										16178,
										16179,
										16180,
										16182
									]
								}
							]
						}
					}
				},
				{
					"id": 16183,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16184,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16185,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16186,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16187,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16188,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16189,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16141,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16185,
										16186,
										16187,
										16188,
										16189
									]
								}
							]
						}
					}
				},
				{
					"id": 16190,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 17501,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16191,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16192,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16193,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16194,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16172,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16192,
												16193,
												16194
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16195,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16196,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16197,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16221,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16198,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16172,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16197,
												16198
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16199,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 16205,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16200,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16201,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14243,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16202,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16205,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 16203,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16067,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16204,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16201,
										16202,
										16203,
										16204
									]
								}
							]
						}
					}
				},
				{
					"id": 16206,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16207,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16208,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16209,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16199,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16210,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 16141,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 16211,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 16212,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 16213,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 16214,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											16213,
											16214
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 16215,
					"name": "LinkModulesExtraFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16216,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16217,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "date"
													},
													{
														"type": "literal",
														"value": "time"
													},
													{
														"type": "literal",
														"value": "datetime"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "blob"
													},
													{
														"type": "literal",
														"value": "uint8array"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "enumArray"
													},
													{
														"type": "literal",
														"value": "enum"
													},
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "integer"
													},
													{
														"type": "literal",
														"value": "smallint"
													},
													{
														"type": "literal",
														"value": "tinyint"
													},
													{
														"type": "literal",
														"value": "mediumint"
													},
													{
														"type": "literal",
														"value": "float"
													},
													{
														"type": "literal",
														"value": "double"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "decimal"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "uuid"
													},
													{
														"type": "literal",
														"value": "text"
													}
												]
											}
										},
										{
											"id": 16218,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16219,
											"name": "nullable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16220,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Mikro-orm options for the column"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16217,
												16218,
												16219,
												16220
											]
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 16221,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 17080,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16222,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16223,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16224,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16245,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 16225,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 16226,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 16227,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 16228,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 16229,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 16230,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 16231,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 16232,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									16230,
																									16231,
																									16232
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 16233,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 16245,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	16227,
																	16228,
																	16233
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 16234,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16235,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16236,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16237,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 16238,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16239,
											"name": "extraDataFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16240,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16241,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16242,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16243,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16244,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 16215,
																"name": "LinkModulesExtraFields",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16242,
																16243,
																16244
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16223,
												16224,
												16225,
												16234,
												16235,
												16236,
												16237,
												16238,
												16239,
												16240
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16245,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 17068,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16246,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16247,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16247
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16248,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 16264,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 16125,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16249,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16250,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 16251,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16206,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 16252,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 16253,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16254,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16199,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16255,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 16141,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 16256,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 16257,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16258,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16199,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16259,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 16141,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 16260,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 16261,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 16262,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16199,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16263,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 16141,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16250,
										16251
									]
								},
								{
									"title": "Methods",
									"children": [
										16252,
										16256,
										16260
									]
								}
							]
						}
					}
				},
				{
					"id": 16265,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16266,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16267,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16268,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16269,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16270,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16271,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16272,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16273,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16274,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16275,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16276,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16277,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16278,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16278
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 16279,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16280,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16268,
												16269,
												16270,
												16271,
												16272,
												16273,
												16274,
												16275,
												16276,
												16279,
												16280
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16266
							]
						}
					]
				},
				{
					"id": 16281,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16282,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16283,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 16284,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16285,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignatures": [
												{
													"id": 16286,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 16287,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 16125,
														"typeArguments": [
															{
																"type": "reference",
																"target": 14338,
																"name": "RepositoryService",
																"package": "@medusajs/types"
															}
														],
														"name": "Constructor",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16283,
										16284
									]
								}
							]
						}
					}
				},
				{
					"id": 16288,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 16141,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 16152,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 16289,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16291,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16292,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 17100,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 16293,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 16294,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17118,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 16295,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 14572,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 15857,
							"name": "IInventoryService"
						},
						{
							"type": "reference",
							"target": 16470,
							"name": "INotificationModuleService"
						},
						{
							"type": "reference",
							"target": 16625,
							"name": "IStockLocationService"
						},
						{
							"type": "reference",
							"target": 16848,
							"name": "IWorkflowEngineService"
						},
						{
							"type": "reference",
							"target": 17139,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 16309,
					"name": "IMedusaInternalService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16310,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 16311,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 16413,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "IMedusaInternalService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 16312,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16313,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16314,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16315,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16316,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16411,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16317,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16318,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 16319,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16320,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16411,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16321,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16322,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16323,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16324,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 14306,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 16325,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 16326,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16327,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16328,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16329,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16330,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16331,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 14306,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 16332,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 16333,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16334,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 17030,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 16411,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16335,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16336,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16337,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 16338,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16339,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16340,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16341,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16411,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16342,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16343,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16344,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 16345,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16346,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16347,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16348,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16411,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16349,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16350,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16351,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16352,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16353,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 14306,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 16354,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 16355,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16352,
																16355
															]
														}
													]
												}
											}
										},
										{
											"id": 16356,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16357,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16358,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 16359,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 16360,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 16361,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 14306,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 16362,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 16363,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	16360,
																	16363
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 16364,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16365,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16366,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16367,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16368,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16369,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16370,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16371,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16372,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16373,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 16374,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16375,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16376,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 16377,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16378,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16379,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16380,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16381,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16382,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 14306,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 16383,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16381
															]
														}
													]
												}
											}
										},
										{
											"id": 16384,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16385,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16386,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16387,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16388,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 16389,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 16390,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 17030,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 16411,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16391,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16392,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16393,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 16395,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 17030,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 16411,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16396,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16397,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16398,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 16399,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17030,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16411,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16400,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16401,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16402,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16411,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16403,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16404,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16405,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 16406,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14330,
												"typeArguments": [
													{
														"type": "reference",
														"target": 17030,
														"typeArguments": [
															{
																"type": "reference",
																"target": 16411,
																"name": "TEntity",
																"package": "@medusajs/types",
																"qualifiedName": "IMedusaInternalService.TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "InferEntityType",
														"package": "@medusajs/types"
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16407,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 16408,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16409,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 17030,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 16411,
																			"name": "TEntity",
																			"package": "@medusajs/types",
																			"qualifiedName": "IMedusaInternalService.TEntity",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferEntityType",
																	"package": "@medusajs/types"
																}
															}
														},
														{
															"id": 16410,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 14333,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16409,
																16410
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								16310
							]
						},
						{
							"title": "Methods",
							"children": [
								16312,
								16321,
								16328,
								16335,
								16342,
								16365,
								16385,
								16391,
								16396,
								16403
							]
						}
					],
					"typeParameters": [
						{
							"id": 16411,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16412,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 16413,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 16414,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16415,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16416,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16125,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16416
									]
								}
							]
						}
					}
				},
				{
					"id": 16417,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16418,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16419,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 16414,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 16420,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16421,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16419,
										16420,
										16421
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16265,
						16295,
						16309
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						16125,
						16132,
						16133,
						16134,
						16141,
						16152,
						16164,
						16172,
						16183,
						16190,
						16195,
						16199,
						16206,
						16211,
						16215,
						16221,
						16245,
						16248,
						16281,
						16288,
						16289,
						16414,
						16417
					]
				}
			]
		},
		{
			"id": 17501,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 16152,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 16141,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 16422,
			"name": "NotificationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16423,
					"name": "NotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification's data."
							}
						]
					},
					"children": [
						{
							"id": 16424,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16425,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16426,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16427,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16428,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 16429,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16430,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16431,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16432,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16433,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16434,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification in the external system, if applicable"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16435,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16436,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the notification provider"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16438,
								"name": "NotificationProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 16437,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the notification was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16424,
								16425,
								16426,
								16427,
								16428,
								16429,
								16430,
								16431,
								16432,
								16433,
								16434,
								16435,
								16436,
								16437
							]
						}
					]
				},
				{
					"id": 16438,
					"name": "NotificationProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the notification provider"
							}
						]
					},
					"children": [
						{
							"id": 16439,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16440,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16441,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A user-friendly name of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16442,
							"name": "channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supported channels by the notification provider."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16439,
								16440,
								16441,
								16442
							]
						}
					]
				},
				{
					"id": 16443,
					"name": "FilterableNotificationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved notifications."
							}
						]
					},
					"children": [
						{
							"id": 16453,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16443,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16443,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 16454,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16443,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16443,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 16444,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search through the notifications' attributes, such as trigger types and recipients, using this search term."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16445,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the recipient of the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16446,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16447,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the template name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16448,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the trigger type."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16449,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the resource that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16450,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "T* Filter based on the resource type that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16451,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the customer ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16452,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters a notification based on when it was sent and created in the database"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14284,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16453,
								16454,
								16444,
								16445,
								16446,
								16447,
								16448,
								16449,
								16450,
								16451,
								16452
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16443,
									"name": "FilterableNotificationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 16459,
					"name": "CreateNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification to send and have created in the DB"
							}
						]
					},
					"children": [
						{
							"id": 16460,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16461,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16462,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16463,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 16464,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16465,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16466,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16467,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16468,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16469,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An idempotency key that ensures the same notification is not sent multiple times."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16460,
								16461,
								16462,
								16463,
								16464,
								16465,
								16466,
								16467,
								16468,
								16469
							]
						}
					]
				},
				{
					"id": 16506,
					"name": "ProviderSendNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the notification to send."
							}
						]
					},
					"children": [
						{
							"id": 16507,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16508,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16509,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16510,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16507,
								16508,
								16509,
								16510
							]
						}
					]
				},
				{
					"id": 16511,
					"name": "ProviderSendNotificationResultsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of sending the notification"
							}
						]
					},
					"children": [
						{
							"id": 16512,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification in the external system, if provided in the response"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16512
							]
						}
					]
				},
				{
					"id": 16513,
					"name": "INotificationProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16514,
							"name": "send",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16515,
									"name": "send",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The result of sending the notification."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16516,
											"name": "notification",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "All information needed to send a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16506,
												"name": "ProviderSendNotificationDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16511,
												"name": "ProviderSendNotificationResultsDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								16514
							]
						}
					]
				},
				{
					"id": 16455,
					"name": "LocalNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 16456,
					"name": "SendgridNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16457,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16458,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16457,
								16458
							]
						}
					]
				},
				{
					"id": 16470,
					"name": "INotificationModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Notification Module."
							}
						]
					},
					"children": [
						{
							"id": 16471,
							"name": "createNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16472,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send multiple notifications, and store the requests in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sent notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16473,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notifications to be sent."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16459,
													"name": "CreateNotificationDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 16474,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16423,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16475,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification, and store the request in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sent notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16476,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification to be sent."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16459,
												"name": "CreateNotificationDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16477,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16423,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16478,
							"name": "retrieveNotification",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16479,
									"name": "retrieveNotification",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a notification by its ID"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16480,
											"name": "notificationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the notification to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16481,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notification is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16423,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16482,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16423,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16483,
							"name": "listNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16484,
									"name": "listNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16485,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16443,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16486,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16423,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16487,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16423,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16488,
							"name": "listAndCountNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16489,
									"name": "listAndCountNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16490,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16443,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16491,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16423,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16492,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 16423,
															"name": "NotificationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								16471,
								16478,
								16483,
								16488
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16295,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16423,
						16438,
						16443,
						16459,
						16506,
						16511,
						16513,
						16455,
						16456,
						16470
					]
				}
			]
		},
		{
			"id": 17213,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17214,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17215,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17214,
						17215
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14114,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 16517,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16518,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16519,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16520,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 16521,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16522,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16523,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 16524,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 16525,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16520,
										16521,
										16522
									]
								}
							]
						}
					}
				},
				{
					"id": 16526,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16527,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 16528,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16529,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16530,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16531,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16532,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16533,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16534,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16535,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16536,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16537,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16538,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 16539,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16540,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16541,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16542,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16543,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 16544,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16545,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16546,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16547,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16548,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16549,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16550,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16551,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16552,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16553,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16554,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16555,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 16556,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 16557,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16558,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16559,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16560,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16527
							]
						},
						{
							"title": "Methods",
							"children": [
								16528,
								16532,
								16535,
								16540,
								16545,
								16549,
								16552,
								16557
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16526
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						16518
					]
				}
			]
		},
		{
			"id": 17216,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 17217,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 17218,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17217,
						17218
					]
				}
			]
		},
		{
			"id": 17219,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17220,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17221,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17222,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 17223,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 17224,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17220,
						17221
					]
				}
			]
		},
		{
			"id": 17225,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17226,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17227,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17228,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 14488,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14488,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 17229,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17230,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17231,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 17219,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14488,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17232,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17233,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 17234,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17235,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17236,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17237,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 14492,
												"typeArguments": [
													{
														"type": "reference",
														"target": 17236,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14492,
													"typeArguments": [
														{
															"type": "reference",
															"target": 17236,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 17238,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						17226,
						17229,
						17232,
						17234
					]
				}
			]
		},
		{
			"id": 17239,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 17240,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 17241,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17250,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 17242,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17250,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 17243,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17244,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17245,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17246,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17247,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17225,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17248,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17249,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17240,
						17241,
						17242,
						17243,
						17244,
						17245,
						17246,
						17247,
						17248,
						17249
					]
				}
			],
			"typeParameters": [
				{
					"id": 17250,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 16561,
			"name": "StockLocationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16562,
					"name": "StockLocationAddressDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16563,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16564,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16565,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 1 of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16566,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 2 of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16567,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The company of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16568,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16569,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16570,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16571,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16572,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16573,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14139,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16574,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 16575,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 16576,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16564,
										16565,
										16566,
										16567,
										16568,
										16569,
										16570,
										16571,
										16572,
										16573,
										16574,
										16575,
										16576
									]
								}
							]
						}
					}
				},
				{
					"id": 16577,
					"name": "StockLocationDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16578,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16579,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16580,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16581,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16582,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16583,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the stock location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16562,
										"name": "StockLocationAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16584,
									"name": "fulfillment_sets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fulfillment sets for the location"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-set.ts",
												"qualifiedName": "FulfillmentSetDTO"
											},
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 16585,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 16586,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 16587,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16579,
										16580,
										16581,
										16582,
										16583,
										16584,
										16585,
										16586,
										16587
									]
								}
							]
						}
					}
				},
				{
					"id": 16588,
					"name": "StockLocationExpandedDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 16577,
								"name": "StockLocationDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16589,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16590,
											"name": "sales_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16590
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 16591,
					"name": "FilterableStockLocationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved stock locations."
							}
						]
					},
					"children": [
						{
							"id": 16595,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16591,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16591,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 16596,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16591,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16591,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 16592,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search parameter for stock location names"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16593,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 16594,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16595,
								16596,
								16592,
								16593,
								16594
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16591,
									"name": "FilterableStockLocationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 16597,
					"name": "StockLocationAddressInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address Input"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16598,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16599,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16600,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16601,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16602,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16603,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16604,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16605,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16606,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14139,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16599,
										16600,
										16601,
										16602,
										16603,
										16604,
										16605,
										16606
									]
								}
							]
						}
					}
				},
				{
					"id": 16607,
					"name": "CreateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to create a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16608,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16609,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16610,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16611,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 16597,
												"name": "StockLocationAddressInput",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 16612,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14139,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16609,
										16610,
										16611,
										16612
									]
								}
							]
						}
					}
				},
				{
					"id": 16613,
					"name": "UpdateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to update a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16614,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16615,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16616,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 16617,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16597,
										"name": "StockLocationAddressInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16618,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14139,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16615,
										16616,
										16617,
										16618
									]
								}
							]
						}
					}
				},
				{
					"id": 16619,
					"name": "UpsertStockLocationInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stock location to create or update. If the "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property isn't provided,\nthe stock location is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"children": [
						{
							"id": 16620,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16621,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16622,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16597,
								"name": "StockLocationAddressInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 16623,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 14139,
								"name": "MetadataType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 16624,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location, if updating."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16620,
								16621,
								16622,
								16623,
								16624
							]
						}
					]
				},
				{
					"id": 16625,
					"name": "IStockLocationService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Stock Location Module."
							}
						]
					},
					"children": [
						{
							"id": 16626,
							"name": "listStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16627,
									"name": "listStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations({\n  id: [\"sloc_123\", \"sloc_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16628,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16591,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16629,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16577,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16630,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16577,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16631,
							"name": "listAndCountStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16632,
									"name": "listAndCountStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations along with the total count of available stock locations satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations({\n    id: [\"sloc_123\", \"sloc_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16633,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16591,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16634,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16577,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16635,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 16577,
															"name": "StockLocationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16636,
							"name": "retrieveStockLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16637,
									"name": "retrieveStockLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation =\n  await stockLocationModuleService.retrieveStockLocation(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16638,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16639,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16577,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16640,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16577,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16641,
							"name": "createStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16642,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a stock location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation = await stockLocationModuleService.createStockLocations(\n  {\n    name: \"Warehouse\",\n    address: {\n      address_1: \"1855 Powder Mill Rd\",\n      country_code: \"us\",\n    },\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16643,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16607,
												"name": "CreateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16644,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16577,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16645,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.createStockLocations([\n    {\n      name: \"Warehouse\",\n      address: {\n        address_1: \"1855 Powder Mill Rd\",\n        country_code: \"us\",\n      },\n    },\n    {\n      name: \"Warehouse 2\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16646,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock locations to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16607,
													"name": "CreateStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 16647,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16577,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16648,
							"name": "upsertStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16649,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates stock location service nexts if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service nexts."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16650,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of Make all properties in t optional"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16619,
													"name": "UpsertStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 16651,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16577,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16652,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates a stock location service next if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service next."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16653,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16619,
												"name": "UpsertStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16654,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16577,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16655,
							"name": "updateStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16656,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations([\n    {\n      id: \"sloc_123\",\n      name: \"Warehouse\",\n    },\n    {\n      id: \"sloc_321\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16657,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16658,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16613,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16659,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16577,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 16660,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations matching the specified filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations(\n    {\n      name: \"Warehouse\",\n    },\n    {\n      address_id: \"laddr_123\",\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16661,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters specifying which stock locations to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16591,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16662,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16613,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16663,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16577,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16664,
							"name": "deleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16665,
									"name": "deleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stock location is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.deleteStockLocations(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16666,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 16667,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16668,
							"name": "softDeleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16669,
									"name": "softDeleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the stock location through this relation, such as the IDs of associated address.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.softDeleteStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 16670,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 16671,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16672,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14458,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16670,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16673,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16674,
							"name": "restoreStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16675,
									"name": "restoreStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the stock location through this relation,\nsuch as the ID of associated address.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.restoreStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 16676,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 16677,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16678,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stock location. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stock location's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`address`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 14461,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16676,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16679,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								16626,
								16631,
								16636,
								16641,
								16648,
								16655,
								16664,
								16668,
								16674
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16295,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16591,
						16619,
						16625
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						16562,
						16577,
						16588,
						16597,
						16607,
						16613
					]
				}
			]
		},
		{
			"id": 17274,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17275,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17276,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 17282,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17277,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 17278,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17279,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 17280,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17281,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17275,
						17276,
						17277
					]
				},
				{
					"title": "Methods",
					"children": [
						17278,
						17280
					]
				}
			]
		},
		{
			"id": 17282,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17283,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17284,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17284
							]
						}
					],
					"indexSignatures": [
						{
							"id": 17285,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 17286,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 17287,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 17282,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 17274,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 17288,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 17274,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 17251,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17252,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17253,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17254,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17255,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17256,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17257,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17258,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17259,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17260,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17261,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17262,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17263,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17264,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17265,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17266,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17267,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17268,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17269,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17270,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17271,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17272,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17273,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17288,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17253,
								17254,
								17255,
								17256,
								17257,
								17258,
								17259,
								17260,
								17261,
								17262,
								17263,
								17264,
								17265,
								17266,
								17267,
								17268,
								17269,
								17270,
								17271,
								17272,
								17273
							]
						}
					]
				}
			}
		},
		{
			"id": 16693,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16694,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16695,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16696,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16697,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								16695
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 14502,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16694
					]
				}
			]
		},
		{
			"id": 16698,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16699,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16700,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16701,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16702,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16703,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 16704,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16703,
														16704
													]
												}
											]
										}
									}
								},
								{
									"id": 16705,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16706,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16707,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 16708,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16707,
														16708
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16701,
										16705
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16700
							]
						}
					]
				},
				{
					"id": 16709,
					"name": "InventoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16710,
							"name": "CreateInventoryItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16711,
									"name": "sku",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16712,
									"name": "hs_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16713,
									"name": "weight",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16714,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16715,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16716,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16717,
									"name": "origin_country",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16718,
									"name": "mid_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16719,
									"name": "material",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16720,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16721,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16722,
									"name": "thumbnail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16723,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16711,
										16712,
										16713,
										16714,
										16715,
										16716,
										16717,
										16718,
										16719,
										16720,
										16721,
										16722,
										16723
									]
								}
							]
						},
						{
							"id": 16724,
							"name": "CreateInventoryItemsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16725,
									"name": "inventoryItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16710,
											"name": "CreateInventoryItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16725
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16710,
								16724
							]
						}
					]
				},
				{
					"id": 16726,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16731,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16732,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16733,
									"name": "auth_identity_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16734,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16735,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16736,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16737,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 16738,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 16739,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 16740,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16736,
														16737,
														16738,
														16739,
														16740
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16732,
										16733,
										16734
									]
								}
							]
						},
						{
							"id": 16727,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16728,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16728
									]
								}
							]
						},
						{
							"id": 16729,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16730,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16730
									]
								}
							]
						},
						{
							"id": 16741,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16742,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16742
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16731,
								16727,
								16729,
								16741
							]
						}
					]
				},
				{
					"id": 16743,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16744,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16745,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16746,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16747,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16748,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 16749,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 16750,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 16751,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 16752,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 16753,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 16754,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 16755,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															16751,
															16752,
															16753,
															16754,
															16755
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 16756,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 16757,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 16758,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															16758
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16745,
										16746,
										16747,
										16748,
										16749,
										16756
									]
								}
							]
						},
						{
							"id": 16759,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16760,
									"name": "attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16761,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16760,
										16761
									]
								}
							]
						},
						{
							"id": 16762,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16763,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16764,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16765,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 16766,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16767,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16768,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16763,
										16764,
										16765,
										16766,
										16767,
										16768
									]
								}
							]
						},
						{
							"id": 16769,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16770,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16780,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16770
									]
								}
							]
						},
						{
							"id": 16771,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16772,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16773,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16772,
										16773
									]
								}
							]
						},
						{
							"id": 16774,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16775,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16776,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16775,
										16776
									]
								}
							]
						},
						{
							"id": 16777,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16778,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16779,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16778,
										16779
									]
								}
							]
						},
						{
							"id": 16780,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16781,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16782,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16783,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16784,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16785,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 16786,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 16787,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16788,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16789,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17502,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 16790,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16781,
										16782,
										16783,
										16784,
										16785,
										16786,
										16787,
										16788,
										16789,
										16790
									]
								}
							]
						},
						{
							"id": 16791,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16792,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16792
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16744,
								16759,
								16762,
								16769,
								16771,
								16774,
								16777,
								16780,
								16791
							]
						}
					]
				},
				{
					"id": 16793,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16794,
							"name": "CreateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16795,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCategoryDTO"
											},
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16795
									]
								}
							]
						},
						{
							"id": 16796,
							"name": "UpdateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16797,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductCategoryProps"
										},
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16798,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16797,
										16798
									]
								}
							]
						},
						{
							"id": 16799,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16800,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.id"
									}
								},
								{
									"id": 16801,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.add"
									}
								},
								{
									"id": 16802,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.remove"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16800,
										16801,
										16802
									]
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 14149,
									"name": "LinkWorkflowInput",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16794,
								16796,
								16799
							]
						}
					]
				},
				{
					"id": 16803,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 16804,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16805,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15843,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16805
									]
								}
							]
						},
						{
							"id": 16806,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15763,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 16807,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 16808,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 15836,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16808
									]
								}
							]
						},
						{
							"id": 16809,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 15763,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								16804,
								16807
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								16806,
								16809
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						16699,
						16709,
						16726,
						16743,
						16793,
						16803
					]
				}
			]
		},
		{
			"id": 17502,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17503,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17504,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17505,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17506,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17507,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17508,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17503,
						17504,
						17505,
						17506,
						17507,
						17508
					]
				}
			]
		},
		{
			"id": 16810,
			"name": "WorkflowsSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16811,
					"name": "WorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16812,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16813,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16814,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16815,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16816,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16817,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 16818,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 16819,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 16820,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16812,
								16813,
								16814,
								16815,
								16816,
								16817,
								16818,
								16819,
								16820
							]
						}
					]
				},
				{
					"id": 16821,
					"name": "FilterableWorkflowExecutionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 16826,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16821,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16821,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14307,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 16827,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 16821,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 14306,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16821,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 14308,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 16822,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16823,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16824,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 16825,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 14284,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16826,
								16827,
								16822,
								16823,
								16824,
								16825
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 14306,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16821,
									"name": "FilterableWorkflowExecutionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 16828,
					"name": "UpsertWorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16829,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16830,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16831,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 16832,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 16833,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16829,
								16830,
								16831,
								16832,
								16833
							]
						}
					]
				},
				{
					"id": 16834,
					"name": "WorkflowOrchestratorRunDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16836,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 16841,
								"name": "T",
								"package": "@medusajs/types",
								"qualifiedName": "WorkflowOrchestratorRunDTO.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.input"
							}
						},
						{
							"id": 16837,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 17239,
								"name": "Context",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.context"
							}
						},
						{
							"id": 16838,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.resultFrom"
							}
						},
						{
							"id": 16839,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.throwOnError"
							}
						},
						{
							"id": 16840,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.events"
							}
						},
						{
							"id": 16835,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16836,
								16837,
								16838,
								16839,
								16840,
								16835
							]
						}
					],
					"typeParameters": [
						{
							"id": 16841,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 17509,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16841,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "WorkflowOrchestratorRunDTO.T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlowRunOptions",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 16842,
					"name": "IdempotencyKeyParts",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16843,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16844,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16845,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16846,
									"name": "stepId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16847,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16844,
										16845,
										16846,
										16847
									]
								}
							]
						}
					}
				},
				{
					"id": 16848,
					"name": "IWorkflowEngineService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 16849,
							"name": "retrieveWorkflowExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16850,
									"name": "retrieveWorkflowExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16851,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16852,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16853,
																	"name": "workflow_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 16854,
																	"name": "transaction_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16853,
																		16854
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 16855,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16811,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16856,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 16811,
												"name": "WorkflowExecutionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16857,
							"name": "listWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16858,
									"name": "listWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16859,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 16821,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16860,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16811,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16861,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16811,
													"name": "WorkflowExecutionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16862,
							"name": "listAndCountWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16863,
									"name": "listAndCountWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16864,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 16821,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16865,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 14059,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16811,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16866,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 16811,
															"name": "WorkflowExecutionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16867,
							"name": "run",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16868,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16869,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16870,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 16834,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowOrchestratorRunDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 16871,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 16872,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16873,
															"name": "errors",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Error"
																	},
																	"name": "Error",
																	"package": "typescript"
																}
															}
														},
														{
															"id": 16874,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 16875,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 16876,
															"name": "acknowledgement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16873,
																16874,
																16875,
																16876
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16877,
							"name": "getRunningTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16878,
									"name": "getRunningTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16879,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16880,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16881,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 16882,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16883,
							"name": "setStepSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16884,
									"name": "setStepSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16885,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16886,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16887,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 16842,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 16888,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 16889,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16887,
																16888,
																16889
															]
														}
													]
												}
											}
										},
										{
											"id": 16890,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 16891,
							"name": "setStepFailure",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16892,
									"name": "setStepFailure",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16893,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16894,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16895,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 16842,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 16896,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 16897,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16895,
																16896,
																16897
															]
														}
													]
												}
											}
										},
										{
											"id": 16898,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 16899,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16900,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16901,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16902,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16903,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16904,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16905,
															"name": "subscriber",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Function"
																},
																"name": "Function",
																"package": "typescript"
															}
														},
														{
															"id": 16906,
															"name": "subscriberId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16903,
																16904,
																16905,
																16906
															]
														}
													]
												}
											}
										},
										{
											"id": 16907,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 16908,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16909,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16910,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16911,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16912,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16913,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 16914,
															"name": "subscriberOrId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Function"
																		},
																		"name": "Function",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16912,
																16913,
																16914
															]
														}
													]
												}
											}
										},
										{
											"id": 16915,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17239,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								16849,
								16857,
								16862,
								16867,
								16877,
								16883,
								16891,
								16899,
								16908
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 16295,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						16811,
						16821,
						16828,
						16834,
						16848
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						16842
					]
				}
			]
		},
		{
			"id": 17509,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17516,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17510,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17511,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17516,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 17512,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17239,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17513,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 17514,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17515,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17511,
								17512,
								17513,
								17514,
								17515
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 16834,
					"name": "WorkflowOrchestratorRunDTO"
				}
			]
		},
		{
			"id": 17295,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17296,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17297,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17297
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17298,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						"name": "ProductTypes.UpsertProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17299,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17300,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17300
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17301,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17302,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17303,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 17304,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 17305,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															17305
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 17306,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17295,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17303,
										17306
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17307,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17308,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17309,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 17310,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 17311,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															17311
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17309
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17289,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17290,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17291,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17292,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17293,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17294,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17293,
										17294
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17290,
						17291
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				14023,
				14024,
				14038,
				14277,
				16929,
				14466,
				14542,
				14561,
				14652,
				15715,
				16066,
				16124,
				16422,
				16517,
				16561,
				16693,
				16698,
				16810
			]
		},
		{
			"title": "Interfaces",
			"children": [
				14020,
				17312,
				17344,
				17051,
				17054,
				17059,
				17062,
				17064,
				17369,
				17391,
				17378,
				17393,
				17596,
				17542,
				17546,
				17551,
				17557,
				17600,
				17564,
				17569,
				17575,
				17582,
				17404,
				17419,
				17439,
				17443,
				17450,
				17460,
				17475,
				17467,
				17489,
				17498,
				17077,
				17080,
				17094,
				17097,
				17100,
				17118,
				17121,
				17131,
				17207,
				17139,
				17213,
				17216,
				17219,
				17225,
				17239,
				17274,
				17502,
				17289
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				14005,
				17319,
				17591,
				17590,
				17520,
				17525,
				17527,
				17532,
				17522,
				17529,
				17534,
				17326,
				17517,
				17324,
				17321,
				17340,
				17341,
				17335,
				17329,
				17331,
				17536,
				17615,
				17605,
				17594,
				17540,
				17328,
				17333,
				17396,
				17402,
				17403,
				17068,
				17128,
				17187,
				17193,
				17501,
				17282,
				17287,
				17288,
				17251,
				17509,
				17295,
				17298,
				17301,
				17307
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"14004": {
			"sourceFileName": "../../../../packages/core/types/src/index.ts",
			"qualifiedName": ""
		},
		"14005": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"14006": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"14007": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"14008": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"14009": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"14010": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"14011": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"14012": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"14013": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"14014": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"14015": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"14016": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"14017": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"14018": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"14019": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"14020": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps"
		},
		"14021": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.data"
		},
		"14022": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.TData"
		},
		"14023": {
			"sourceFileName": "../../../../packages/core/types/src/admin/index.ts",
			"qualifiedName": ""
		},
		"14024": {
			"sourceFileName": "../../../../packages/core/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"14025": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"14026": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"14027": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"14028": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"14029": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"14030": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"14031": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"14032": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"14033": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"14034": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"14035": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"14036": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"14037": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"14038": {
			"sourceFileName": "../../../../packages/core/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"14039": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "Prettify"
		},
		"14040": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"14041": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"14042": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"14043": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"14044": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"14048": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"14049": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"14050": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"14051": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"14052": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"14053": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"14054": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"14055": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"14056": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"14059": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"14060": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"14061": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"14062": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"14063": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"14064": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"14065": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"14066": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"14068": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"14069": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"14070": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"14071": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"14107": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"14108": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"14109": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"14110": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"14111": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"14112": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"14113": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"14114": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"14115": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"14116": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"14117": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"14118": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"14119": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"14120": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"14121": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"14122": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"14123": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"14124": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"14125": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"14126": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"14127": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"14128": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"14129": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"14130": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"14131": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"14132": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"14135": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"14136": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"14137": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"14138": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"14139": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"14140": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RawRounding"
		},
		"14141": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"14142": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.value"
		},
		"14143": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.precision"
		},
		"14144": {
			"sourceFileName": "../../../../packages/core/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"14145": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"14146": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"14147": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"14148": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"14149": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"14150": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"14151": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"14152": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"14153": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"14154": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"14155": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"14156": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"14157": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"14158": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"14159": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"14160": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"14161": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"14162": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"14163": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"14164": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"14165": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"14166": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"14167": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"14168": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"14169": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"14170": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"14171": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"14172": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"14173": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"14174": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"14175": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"14176": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"14177": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"14178": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions"
		},
		"14179": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.disable"
		},
		"14180": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.path"
		},
		"14181": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.outDir"
		},
		"14182": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.backendUrl"
		},
		"14183": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.vite"
		},
		"14184": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14185": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14186": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "config"
		},
		"14187": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"14188": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"14189": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"14190": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"14191": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"14192": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"14193": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseName"
		},
		"14194": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseUrl"
		},
		"14195": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseSchema"
		},
		"14196": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseLogging"
		},
		"14198": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseDriverOptions"
		},
		"14199": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14200": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"14201": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14202": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"14203": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14204": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"14205": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisUrl"
		},
		"14206": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisPrefix"
		},
		"14207": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisOptions"
		},
		"14208": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.sessionOptions"
		},
		"14210": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobsBatchSize"
		},
		"14211": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.workerMode"
		},
		"14212": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.http"
		},
		"14213": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14214": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtSecret"
		},
		"14215": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtExpiresIn"
		},
		"14216": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookieSecret"
		},
		"14217": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authCors"
		},
		"14218": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.compression"
		},
		"14219": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storeCors"
		},
		"14220": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.adminCors"
		},
		"14221": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authMethodsPerActor"
		},
		"14222": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"14223": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"14224": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin"
		},
		"14229": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"14230": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"14231": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"14232": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"14233": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"14234": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"14235": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"14236": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"14237": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"14238": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "ExecArgs"
		},
		"14239": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type"
		},
		"14240": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.container"
		},
		"14241": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.args"
		},
		"14242": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"14243": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"14244": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"14245": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"14246": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"14247": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"14248": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"14249": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"14250": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"14251": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"14252": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"14253": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"14263": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"14264": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"14265": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"14266": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"14267": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"14268": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"14269": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"14270": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice"
		},
		"14271": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice.calculated_price"
		},
		"14272": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type"
		},
		"14273": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.calculated_amount"
		},
		"14274": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.is_calculated_price_tax_inclusive"
		},
		"14275": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCase"
		},
		"14276": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"14277": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"14278": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"14279": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14280": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"14282": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"14283": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"14284": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"14285": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14286": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"14287": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"14288": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"14289": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"14290": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"14291": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"14292": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"14293": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"14294": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"14295": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"14296": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"14297": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"14298": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"14299": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"14300": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"14301": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"14302": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"14303": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"14304": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"14305": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"14306": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"14307": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14308": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14309": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"14310": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"14311": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"14312": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"14313": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"14314": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"14315": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"14316": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"14317": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"14318": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"14319": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"14320": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"14321": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"14322": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14323": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"14325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14326": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"14328": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"14329": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"14330": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"14331": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"14332": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"14333": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "PerformedActions"
		},
		"14334": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14335": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.created"
		},
		"14336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.updated"
		},
		"14337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.deleted"
		},
		"14338": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"14339": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"14340": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"14341": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14342": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14343": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"14344": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"14345": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14346": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14347": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"14348": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"14349": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14350": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14351": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"14352": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"14353": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14355": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"14356": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"14357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"14359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"14360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"14361": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14362": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"14364": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14365": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"14367": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14368": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"14369": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"14370": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"14371": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14372": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14373": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14374": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"14375": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"14376": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"14377": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"14378": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14379": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"14380": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"14381": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14382": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14383": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"14384": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"14385": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14386": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"14387": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14388": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entities"
		},
		"14390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"14391": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"14392": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"14393": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14394": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"14395": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14396": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14397": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"14398": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14399": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14400": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"14401": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"14402": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"14403": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"14404": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"14405": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14406": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"14407": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"14408": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14409": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"14410": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"14411": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"14412": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14413": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14414": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"14415": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"14416": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"14417": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"14418": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14419": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"14420": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14421": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"14422": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"14423": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14424": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"14425": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"14427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"14428": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14429": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14430": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"14431": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"14432": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"14433": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14434": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"14435": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"14436": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14437": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"14438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14439": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14440": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"14441": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"14442": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"14443": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"14444": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"14445": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"14446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"14447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"14448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"14450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"14451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"14452": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"14453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"14454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"14455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"14456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"14457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"14458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"14459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"14460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"14462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"14463": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14464": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "ModelDateColumns"
		},
		"14465": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableModelDateColumns"
		},
		"14466": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"14467": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"14468": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14469": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14470": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"14471": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14472": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"14473": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14474": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"14475": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"14476": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14477": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"14478": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"14479": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"14480": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14481": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"14482": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"14483": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14484": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"14485": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"14486": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"14487": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14488": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"14489": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14490": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"14491": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14492": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"14493": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14494": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"14495": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"14496": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"14497": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"14498": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"14499": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"14500": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"14501": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14502": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"14503": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"14504": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"14505": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"14506": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"14507": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"14508": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"14509": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"14510": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"14511": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"14512": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"14513": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"14514": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"14515": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"14516": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"14517": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"14518": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"14519": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"14520": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"14521": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"14522": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"14523": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"14524": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"14525": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"14526": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"14527": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"14528": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"14529": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"14530": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"14531": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"14532": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"14533": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"14534": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"14535": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"14536": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"14537": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"14538": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"14539": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"14540": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"14541": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"14542": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"14543": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"14544": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"14545": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14546": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14547": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"14548": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"14549": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14550": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14551": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"14552": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14553": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"14554": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"14555": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"14556": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"14557": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"14558": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"14559": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"14560": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"14561": {
			"sourceFileName": "../../../../packages/core/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"14562": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"14563": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"14564": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"14565": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps"
		},
		"14566": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps.id"
		},
		"14567": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"14568": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"14569": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"14570": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"14571": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.access"
		},
		"14572": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"14573": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"14574": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"14575": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"14576": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14577": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"14578": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"14579": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14580": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"14581": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"14582": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"14583": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14584": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"14585": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"14586": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14587": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"14588": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"14589": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"14590": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"14591": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14592": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"14593": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"14594": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"14595": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"14596": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14597": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"14598": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"14599": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"14600": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"14601": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14615": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"14616": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"14617": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"14618": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"14619": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"14620": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"14621": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"14622": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"14623": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"14624": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"14625": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"14626": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.access"
		},
		"14627": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"14628": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"14629": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"14630": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"14631": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"14632": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"14633": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"14634": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"14635": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"14636": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"14637": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions"
		},
		"14638": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.file_url"
		},
		"14639": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.access_key_id"
		},
		"14640": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.secret_access_key"
		},
		"14641": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.region"
		},
		"14642": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.bucket"
		},
		"14643": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.prefix"
		},
		"14644": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.endpoint"
		},
		"14645": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.cache_control"
		},
		"14646": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.download_file_duration"
		},
		"14647": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.additional_client_config"
		},
		"14648": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions"
		},
		"14649": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.upload_dir"
		},
		"14650": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.private_upload_dir"
		},
		"14651": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.backend_url"
		},
		"14652": {
			"sourceFileName": "../../../../packages/core/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"14653": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign"
		},
		"14654": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.name"
		},
		"14655": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.description"
		},
		"14656": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.currency"
		},
		"14657": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.campaign_identifier"
		},
		"14658": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.starts_at"
		},
		"14659": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.ends_at"
		},
		"14660": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.budget"
		},
		"14661": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"14662": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"14663": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"14664": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"14665": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign"
		},
		"14666": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.name"
		},
		"14667": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.description"
		},
		"14668": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.currency"
		},
		"14669": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.campaign_identifier"
		},
		"14670": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.starts_at"
		},
		"14671": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.ends_at"
		},
		"14672": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.budget"
		},
		"14673": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"14674": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"14675": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"14676": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"14677": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse"
		},
		"14678": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.id"
		},
		"14679": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.name"
		},
		"14680": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.description"
		},
		"14681": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.currency"
		},
		"14682": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.campaign_identifier"
		},
		"14683": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.starts_at"
		},
		"14684": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.ends_at"
		},
		"14685": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.budget"
		},
		"14686": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14687": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.id"
		},
		"14688": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.type"
		},
		"14689": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.currency_code"
		},
		"14690": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.limit"
		},
		"14691": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.used"
		},
		"14692": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"14693": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14694": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.campaigns"
		},
		"14695": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"14696": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"14697": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/entities.ts",
			"qualifiedName": "AdminCollection"
		},
		"14698": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"14699": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"14700": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"14701": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"14702": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"14703": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"14704": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"14705": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"14706": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection"
		},
		"14707": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.title"
		},
		"14708": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.handle"
		},
		"14709": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.metadata"
		},
		"14710": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection"
		},
		"14711": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.title"
		},
		"14712": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.handle"
		},
		"14713": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.metadata"
		},
		"14714": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts"
		},
		"14715": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.add"
		},
		"14716": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.remove"
		},
		"14717": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams"
		},
		"14718": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams.deleted_at"
		},
		"14719": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"14720": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"14721": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"14722": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"14723": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"14724": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"14725": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14726": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14727": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14728": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14729": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14730": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14731": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionParams"
		},
		"14732": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14733": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse"
		},
		"14734": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse.collection"
		},
		"14735": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionListResponse"
		},
		"14736": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14737": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"14738": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"14739": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"14740": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"14741": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"14742": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionDeleteResponse"
		},
		"14743": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"14744": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"14745": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"14746": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"14747": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"14748": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/store.ts",
			"qualifiedName": "StoreCollection"
		},
		"14749": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"14750": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"14751": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"14752": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"14753": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"14754": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"14755": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"14756": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"14757": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/store.ts",
			"qualifiedName": "StoreCollectionFilters"
		},
		"14758": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"14759": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"14760": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"14761": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"14762": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"14763": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"14764": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14765": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14766": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14767": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14768": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14769": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14770": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams"
		},
		"14771": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14772": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams"
		},
		"14773": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14774": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14775": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14776": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14777": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponse"
		},
		"14778": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"14779": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"14780": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"14781": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"14782": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"14783": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"14784": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TParent"
		},
		"14785": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"14786": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"14787": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"14788": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"14789": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"14790": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"14791": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"14792": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminFile"
		},
		"14793": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"14794": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"14795": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminUploadFile"
		},
		"14796": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/store.ts",
			"qualifiedName": "StoreFile"
		},
		"14797": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"14798": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"14799": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider"
		},
		"14800": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider.id"
		},
		"14801": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider.is_enabled"
		},
		"14802": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams"
		},
		"14803": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.id"
		},
		"14804": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.q"
		},
		"14805": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.is_enabled"
		},
		"14806": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14807": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14808": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14809": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14810": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentProviderListResponse"
		},
		"14811": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14812": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"14813": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"14814": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"14815": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"14816": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"14817": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone"
		},
		"14818": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.id"
		},
		"14819": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.type"
		},
		"14820": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.country_code"
		},
		"14821": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.province_code"
		},
		"14822": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.city"
		},
		"14823": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.postal_expression"
		},
		"14824": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.created_at"
		},
		"14825": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.updated_at"
		},
		"14826": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.deleted_at"
		},
		"14827": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone"
		},
		"14828": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.id"
		},
		"14829": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.name"
		},
		"14830": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set_id"
		},
		"14831": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.geo_zones"
		},
		"14832": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.shipping_options"
		},
		"14833": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.created_at"
		},
		"14834": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.updated_at"
		},
		"14835": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.deleted_at"
		},
		"14836": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet"
		},
		"14837": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.id"
		},
		"14838": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.name"
		},
		"14839": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.type"
		},
		"14840": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.service_zones"
		},
		"14841": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.created_at"
		},
		"14842": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.updated_at"
		},
		"14843": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.deleted_at"
		},
		"14844": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
		},
		"14845": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.name"
		},
		"14846": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.geo_zones"
		},
		"14847": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
		},
		"14848": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.name"
		},
		"14849": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.geo_zones"
		},
		"14850": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse"
		},
		"14851": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse.service_zone"
		},
		"14852": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneDeleteResponse"
		},
		"14853": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"14854": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"14855": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"14856": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"14857": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse"
		},
		"14858": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse.fulfillment_set"
		},
		"14859": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetDeleteResponse"
		},
		"14860": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"14861": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"14862": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"14863": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"14864": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"14865": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem"
		},
		"14866": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.id"
		},
		"14867": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.sku"
		},
		"14868": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.origin_country"
		},
		"14869": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.hs_code"
		},
		"14870": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.requires_shipping"
		},
		"14871": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.mid_code"
		},
		"14872": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.material"
		},
		"14873": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.weight"
		},
		"14874": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.length"
		},
		"14875": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.height"
		},
		"14876": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.width"
		},
		"14877": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.title"
		},
		"14878": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.description"
		},
		"14879": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.thumbnail"
		},
		"14880": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.metadata"
		},
		"14881": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem"
		},
		"14882": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"14883": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"14884": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"14885": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"14886": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"14887": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"14888": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"14889": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"14890": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"14891": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"14892": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"14893": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"14894": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"14895": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"14896": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryItem"
		},
		"14897": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"14898": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"14899": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"14900": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"14901": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"14902": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"14903": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"14904": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"14905": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"14906": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"14907": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"14908": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"14909": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"14910": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"14911": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams"
		},
		"14912": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.id"
		},
		"14913": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.q"
		},
		"14914": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.sku"
		},
		"14915": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.origin_country"
		},
		"14916": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.mid_code"
		},
		"14917": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.hs_code"
		},
		"14918": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.material"
		},
		"14919": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.requires_shipping"
		},
		"14920": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.weight"
		},
		"14921": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.length"
		},
		"14922": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.height"
		},
		"14923": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.width"
		},
		"14924": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.location_levels"
		},
		"14925": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14926": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14927": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14928": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14929": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse"
		},
		"14930": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse.inventory_item"
		},
		"14931": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemListResponse"
		},
		"14932": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14933": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"14934": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemDeleteResponse"
		},
		"14935": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel"
		},
		"14936": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.id"
		},
		"14937": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.inventory_item_id"
		},
		"14938": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.location_id"
		},
		"14939": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.stocked_quantity"
		},
		"14940": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.reserved_quantity"
		},
		"14941": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.available_quantity"
		},
		"14942": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.incoming_quantity"
		},
		"14943": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.metadata"
		},
		"14944": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel"
		},
		"14945": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.stocked_quantity"
		},
		"14946": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.incoming_quantity"
		},
		"14947": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel"
		},
		"14948": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.location_id"
		},
		"14949": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.stocked_quantity"
		},
		"14950": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.incoming_quantity"
		},
		"14951": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation"
		},
		"14952": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.delete"
		},
		"14953": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.update"
		},
		"14954": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.create"
		},
		"14955": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters"
		},
		"14956": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters.location_id"
		},
		"14957": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"14958": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"14959": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"14960": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"14961": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse"
		},
		"14962": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse.inventory_level"
		},
		"14963": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelListResponse"
		},
		"14964": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"14965": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type.inventory_levels"
		},
		"14966": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminAcceptInvite"
		},
		"14967": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"14968": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.first_name"
		},
		"14969": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.last_name"
		},
		"14970": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminCreateInvite"
		},
		"14971": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"14972": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.email"
		},
		"14973": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.metadata"
		},
		"14974": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminInviteResponse"
		},
		"14975": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"14976": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.id"
		},
		"14977": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.email"
		},
		"14978": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.accepted"
		},
		"14979": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.token"
		},
		"14980": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.expires_at"
		},
		"14981": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.metadata"
		},
		"14982": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.created_at"
		},
		"14983": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.updated_at"
		},
		"14984": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification"
		},
		"14985": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.id"
		},
		"14986": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.to"
		},
		"14987": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.channel"
		},
		"14988": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.template"
		},
		"14989": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.data"
		},
		"14990": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.trigger_type"
		},
		"14991": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_id"
		},
		"14992": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_type"
		},
		"14993": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.receiver_id"
		},
		"14994": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.original_notification_id"
		},
		"14995": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.external_id"
		},
		"14996": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.provider_id"
		},
		"14997": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.created_at"
		},
		"14998": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams"
		},
		"14999": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.q"
		},
		"15000": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.id"
		},
		"15001": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.channel"
		},
		"15002": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15003": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15004": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15005": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15006": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15007": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15008": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationParams"
		},
		"15009": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15010": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse"
		},
		"15011": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse.notification"
		},
		"15012": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationListResponse"
		},
		"15013": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15014": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"15015": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15016": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15017": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15018": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"15019": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice"
		},
		"15020": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.variant_id"
		},
		"15021": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.rules"
		},
		"15022": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList"
		},
		"15023": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.id"
		},
		"15024": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.title"
		},
		"15025": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.description"
		},
		"15026": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.rules"
		},
		"15027": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.starts_at"
		},
		"15028": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.ends_at"
		},
		"15029": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.status"
		},
		"15030": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.type"
		},
		"15031": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.prices"
		},
		"15032": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.created_at"
		},
		"15033": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.updated_at"
		},
		"15034": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.deleted_at"
		},
		"15035": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice"
		},
		"15036": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.currency_code"
		},
		"15037": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.amount"
		},
		"15038": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.variant_id"
		},
		"15039": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.min_quantity"
		},
		"15040": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.max_quantity"
		},
		"15041": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.rules"
		},
		"15042": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList"
		},
		"15043": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.title"
		},
		"15044": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.description"
		},
		"15045": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.starts_at"
		},
		"15046": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.ends_at"
		},
		"15047": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.status"
		},
		"15048": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.type"
		},
		"15049": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.rules"
		},
		"15050": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.prices"
		},
		"15051": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice"
		},
		"15052": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.id"
		},
		"15053": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.currency_code"
		},
		"15054": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.amount"
		},
		"15055": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.variant_id"
		},
		"15056": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.min_quantity"
		},
		"15057": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.max_quantity"
		},
		"15058": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.rules"
		},
		"15059": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList"
		},
		"15060": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.title"
		},
		"15061": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.description"
		},
		"15062": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.starts_at"
		},
		"15063": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.ends_at"
		},
		"15064": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.status"
		},
		"15065": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.type"
		},
		"15066": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.rules"
		},
		"15067": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice"
		},
		"15068": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.create"
		},
		"15069": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.update"
		},
		"15070": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.delete"
		},
		"15071": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts"
		},
		"15072": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts.remove"
		},
		"15073": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams"
		},
		"15074": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.q"
		},
		"15075": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.id"
		},
		"15076": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.starts_at"
		},
		"15077": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.ends_at"
		},
		"15078": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.status"
		},
		"15079": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.rules_count"
		},
		"15080": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15081": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15082": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15083": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15084": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15085": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15086": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListParams"
		},
		"15087": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15088": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse"
		},
		"15089": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse.price_list"
		},
		"15090": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListListResponse"
		},
		"15091": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15092": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"15093": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15094": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15095": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15096": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"15097": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListDeleteResponse"
		},
		"15098": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15099": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15100": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15101": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15102": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15103": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory"
		},
		"15104": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.category_children"
		},
		"15105": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.parent_category"
		},
		"15106": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.products"
		},
		"15107": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "name"
		},
		"15108": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "id"
		},
		"15109": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "created_at"
		},
		"15110": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "updated_at"
		},
		"15111": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "deleted_at"
		},
		"15112": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "description"
		},
		"15113": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "handle"
		},
		"15114": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "parent_category_id"
		},
		"15115": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_active"
		},
		"15116": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_internal"
		},
		"15117": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "rank"
		},
		"15118": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory"
		},
		"15119": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.name"
		},
		"15120": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.description"
		},
		"15121": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.handle"
		},
		"15122": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_internal"
		},
		"15123": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_active"
		},
		"15124": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.parent_category_id"
		},
		"15125": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.rank"
		},
		"15126": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.metadata"
		},
		"15127": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory"
		},
		"15128": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.name"
		},
		"15129": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.description"
		},
		"15130": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.handle"
		},
		"15131": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_internal"
		},
		"15132": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_active"
		},
		"15133": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.parent_category_id"
		},
		"15134": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.rank"
		},
		"15135": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.metadata"
		},
		"15136": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts"
		},
		"15137": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.add"
		},
		"15138": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.remove"
		},
		"15139": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams"
		},
		"15140": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_internal"
		},
		"15141": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_active"
		},
		"15142": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"15143": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"15144": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"15145": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"15146": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"15147": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"15148": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"15149": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"15150": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"15151": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"15152": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"15153": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15154": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15155": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15156": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15157": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15158": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15159": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryParams"
		},
		"15160": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"15161": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"15162": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15163": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"15164": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"15165": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"15166": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15167": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"15168": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15169": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15170": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15171": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"15172": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryDeleteResponse"
		},
		"15173": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15174": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15175": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15176": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15177": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15178": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/entities.ts",
			"qualifiedName": "AdminProductTag"
		},
		"15179": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"15180": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"15181": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"15182": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"15183": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"15184": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"15185": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag"
		},
		"15186": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.value"
		},
		"15187": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.metadata"
		},
		"15188": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag"
		},
		"15189": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.value"
		},
		"15190": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.metadata"
		},
		"15191": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams"
		},
		"15192": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams.deleted_at"
		},
		"15193": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"15194": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"15195": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"15196": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"15197": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"15198": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15199": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15200": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15201": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15202": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15203": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15204": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagParams"
		},
		"15205": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15206": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse"
		},
		"15207": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse.product_tag"
		},
		"15208": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagListResponse"
		},
		"15209": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15210": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"15211": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15212": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15213": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15214": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"15215": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagDeleteResponse"
		},
		"15216": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15217": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15218": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15219": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15220": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15221": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/entities.ts",
			"qualifiedName": "AdminProductType"
		},
		"15222": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"15223": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"15224": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"15225": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"15226": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"15227": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"15228": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType"
		},
		"15229": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.value"
		},
		"15230": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.metadata"
		},
		"15231": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType"
		},
		"15232": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.value"
		},
		"15233": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.metadata"
		},
		"15234": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams"
		},
		"15235": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.q"
		},
		"15236": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.id"
		},
		"15237": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.value"
		},
		"15238": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.created_at"
		},
		"15239": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.updated_at"
		},
		"15240": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.deleted_at"
		},
		"15241": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15242": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15243": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15244": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15246": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15247": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeParams"
		},
		"15248": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15249": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse"
		},
		"15250": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse.product_type"
		},
		"15251": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeListResponse"
		},
		"15252": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15253": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"15254": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15255": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15256": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15257": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"15258": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeDeleteResponse"
		},
		"15259": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15260": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15261": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15262": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15263": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15264": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem"
		},
		"15265": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.id"
		},
		"15266": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.quantity"
		},
		"15267": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.received_quantity"
		},
		"15268": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.reason_id"
		},
		"15269": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.note"
		},
		"15270": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.item_id"
		},
		"15271": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.return_id"
		},
		"15272": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.metadata"
		},
		"15273": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn"
		},
		"15274": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.id"
		},
		"15275": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_id"
		},
		"15276": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.status"
		},
		"15277": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.exchange_id"
		},
		"15278": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.claim_id"
		},
		"15279": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_version"
		},
		"15280": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.display_id"
		},
		"15281": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.no_notification"
		},
		"15282": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.refund_amount"
		},
		"15283": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.items"
		},
		"15284": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse"
		},
		"15285": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse.return"
		},
		"15286": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse"
		},
		"15287": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse.returns"
		},
		"15288": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest"
		},
		"15289": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.order_id"
		},
		"15290": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.location_id"
		},
		"15291": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.description"
		},
		"15292": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.internal_note"
		},
		"15293": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.no_notification"
		},
		"15294": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.metadata"
		},
		"15295": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem"
		},
		"15296": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.id"
		},
		"15297": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.quantity"
		},
		"15298": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.description"
		},
		"15299": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.internal_note"
		},
		"15300": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.metadata"
		},
		"15301": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems"
		},
		"15302": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems.items"
		},
		"15303": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems"
		},
		"15304": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.quantity"
		},
		"15305": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.internal_note"
		},
		"15306": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.reason_id"
		},
		"15307": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping"
		},
		"15308": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.shipping_option_id"
		},
		"15309": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.custom_price"
		},
		"15310": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.description"
		},
		"15311": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.internal_note"
		},
		"15312": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.metadata"
		},
		"15313": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping"
		},
		"15314": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.custom_price"
		},
		"15315": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.internal_note"
		},
		"15316": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.metadata"
		},
		"15317": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest"
		},
		"15318": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest.no_notification"
		},
		"15319": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest"
		},
		"15320": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.location_id"
		},
		"15321": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.no_notification"
		},
		"15322": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.metadata"
		},
		"15323": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters"
		},
		"15324": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.id"
		},
		"15325": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.order_id"
		},
		"15326": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.status"
		},
		"15327": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.created_at"
		},
		"15328": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.updated_at"
		},
		"15329": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15330": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15331": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15332": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15333": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReason"
		},
		"15334": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"15335": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"15336": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"15337": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"15338": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"15339": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"15340": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"15341": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason"
		},
		"15342": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.value"
		},
		"15343": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.label"
		},
		"15344": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.description"
		},
		"15345": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonsResponse"
		},
		"15346": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonsResponse.return_reasons"
		},
		"15347": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams"
		},
		"15348": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.id"
		},
		"15349": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.value"
		},
		"15350": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.label"
		},
		"15351": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.description"
		},
		"15352": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.parent_return_reason_id"
		},
		"15353": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.created_at"
		},
		"15354": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.updated_at"
		},
		"15355": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15356": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15357": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15358": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15361": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse"
		},
		"15362": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse.reservation"
		},
		"15363": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationListResponse"
		},
		"15364": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type"
		},
		"15365": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type.reservations"
		},
		"15366": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType"
		},
		"15367": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.id"
		},
		"15368": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.label"
		},
		"15369": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.description"
		},
		"15370": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.code"
		},
		"15371": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.shipping_option_id"
		},
		"15372": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.created_at"
		},
		"15373": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.updated_at"
		},
		"15374": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.deleted_at"
		},
		"15375": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule"
		},
		"15376": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.id"
		},
		"15377": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.attribute"
		},
		"15378": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.operator"
		},
		"15379": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.value"
		},
		"15380": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.shipping_option_id"
		},
		"15381": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.created_at"
		},
		"15382": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.updated_at"
		},
		"15383": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.deleted_at"
		},
		"15384": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule"
		},
		"15385": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.id"
		},
		"15386": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.value"
		},
		"15387": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice"
		},
		"15388": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.price_rules"
		},
		"15389": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.rules_count"
		},
		"15390": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption"
		},
		"15391": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.id"
		},
		"15392": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.name"
		},
		"15393": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.price_type"
		},
		"15394": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone_id"
		},
		"15395": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone"
		},
		"15396": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider_id"
		},
		"15397": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider"
		},
		"15398": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_option_type_id"
		},
		"15399": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.type"
		},
		"15400": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile_id"
		},
		"15401": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile"
		},
		"15402": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.rules"
		},
		"15403": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.prices"
		},
		"15404": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.data"
		},
		"15405": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.metadata"
		},
		"15406": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.created_at"
		},
		"15407": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.updated_at"
		},
		"15408": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.deleted_at"
		},
		"15409": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule"
		},
		"15410": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"15411": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"15412": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"15413": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType"
		},
		"15414": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.label"
		},
		"15415": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.description"
		},
		"15416": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.code"
		},
		"15417": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency"
		},
		"15418": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.currency_code"
		},
		"15419": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.amount"
		},
		"15420": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion"
		},
		"15421": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.region_id"
		},
		"15422": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.amount"
		},
		"15423": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption"
		},
		"15424": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.name"
		},
		"15425": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.service_zone_id"
		},
		"15426": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.shipping_profile_id"
		},
		"15427": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.data"
		},
		"15428": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.price_type"
		},
		"15429": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.provider_id"
		},
		"15430": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.type"
		},
		"15431": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.prices"
		},
		"15432": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.rules"
		},
		"15433": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule"
		},
		"15434": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule.id"
		},
		"15435": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"15436": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"15437": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"15438": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency"
		},
		"15439": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.id"
		},
		"15440": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.currency_code"
		},
		"15441": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.amount"
		},
		"15442": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion"
		},
		"15443": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.id"
		},
		"15444": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.region_id"
		},
		"15445": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.amount"
		},
		"15446": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption"
		},
		"15447": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.name"
		},
		"15448": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.data"
		},
		"15449": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.price_type"
		},
		"15450": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.provider_id"
		},
		"15451": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.shipping_profile_id"
		},
		"15452": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.type"
		},
		"15453": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.prices"
		},
		"15454": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.rules"
		},
		"15455": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules"
		},
		"15456": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.create"
		},
		"15457": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.update"
		},
		"15458": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.delete"
		},
		"15459": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams"
		},
		"15460": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.id"
		},
		"15461": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.q"
		},
		"15462": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.service_zone_id"
		},
		"15463": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_profile_id"
		},
		"15464": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.provider_id"
		},
		"15465": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_option_type_id"
		},
		"15466": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.created_at"
		},
		"15467": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.updated_at"
		},
		"15468": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.deleted_at"
		},
		"15469": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15470": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15471": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15472": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15473": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse"
		},
		"15474": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse.shipping_option"
		},
		"15475": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionListResponse"
		},
		"15476": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15477": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"15478": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionDeleteResponse"
		},
		"15479": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15480": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15481": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15482": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15483": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15484": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
		},
		"15485": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.created"
		},
		"15486": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.updated"
		},
		"15487": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.deleted"
		},
		"15488": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15489": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"15490": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"15491": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"15492": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile"
		},
		"15493": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.id"
		},
		"15494": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.name"
		},
		"15495": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.type"
		},
		"15496": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.metadata"
		},
		"15497": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.created_at"
		},
		"15498": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.updated_at"
		},
		"15499": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.deleted_at"
		},
		"15500": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile"
		},
		"15501": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.name"
		},
		"15502": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.type"
		},
		"15503": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.metadata"
		},
		"15504": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile"
		},
		"15505": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.name"
		},
		"15506": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.type"
		},
		"15507": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.metadata"
		},
		"15508": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams"
		},
		"15509": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.id"
		},
		"15510": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.q"
		},
		"15511": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.type"
		},
		"15512": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.name"
		},
		"15513": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.created_at"
		},
		"15514": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.updated_at"
		},
		"15515": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.deleted_at"
		},
		"15516": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$and"
		},
		"15517": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$or"
		},
		"15518": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15519": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15520": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15521": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15522": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse"
		},
		"15523": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse.shipping_profile"
		},
		"15524": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileListResponse"
		},
		"15525": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15526": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"15527": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileDeleteResponse"
		},
		"15528": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15529": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15530": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15531": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15532": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15533": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress"
		},
		"15534": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.id"
		},
		"15535": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_1"
		},
		"15536": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_2"
		},
		"15537": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.company"
		},
		"15538": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.country_code"
		},
		"15539": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.city"
		},
		"15540": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.phone"
		},
		"15541": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.postal_code"
		},
		"15542": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.province"
		},
		"15543": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation"
		},
		"15544": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.id"
		},
		"15545": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.name"
		},
		"15546": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address_id"
		},
		"15547": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address"
		},
		"15548": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.sales_channels"
		},
		"15549": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_sets"
		},
		"15550": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation"
		},
		"15551": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.name"
		},
		"15552": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address_id"
		},
		"15553": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address"
		},
		"15554": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.metadata"
		},
		"15555": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation"
		},
		"15556": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.name"
		},
		"15557": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address_id"
		},
		"15558": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address"
		},
		"15559": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.metadata"
		},
		"15560": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels"
		},
		"15561": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.add"
		},
		"15562": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.remove"
		},
		"15563": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
		},
		"15564": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.name"
		},
		"15565": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.type"
		},
		"15566": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams"
		},
		"15567": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.id"
		},
		"15568": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.q"
		},
		"15569": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.name"
		},
		"15570": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.address_id"
		},
		"15571": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.sales_channel_id"
		},
		"15572": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$and"
		},
		"15573": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$or"
		},
		"15574": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15575": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15576": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15577": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15578": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"15579": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse.stock_location"
		},
		"15580": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationListResponse"
		},
		"15581": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15582": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"15583": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"15584": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"15585": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"15586": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"15587": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationDeleteResponse"
		},
		"15588": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15589": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15590": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15591": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15592": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15593": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule"
		},
		"15594": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference"
		},
		"15595": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference_id"
		},
		"15596": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate"
		},
		"15597": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.id"
		},
		"15598": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rate"
		},
		"15599": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.code"
		},
		"15600": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.name"
		},
		"15601": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.metadata"
		},
		"15602": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region_id"
		},
		"15603": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_combinable"
		},
		"15604": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_default"
		},
		"15605": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_at"
		},
		"15606": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.updated_at"
		},
		"15607": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.deleted_at"
		},
		"15608": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_by"
		},
		"15609": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region"
		},
		"15610": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rules"
		},
		"15611": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate"
		},
		"15612": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.name"
		},
		"15613": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.tax_region_id"
		},
		"15614": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rate"
		},
		"15615": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.code"
		},
		"15616": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rules"
		},
		"15617": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_default"
		},
		"15618": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_combinable"
		},
		"15619": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.metadata"
		},
		"15620": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate"
		},
		"15621": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.name"
		},
		"15622": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rate"
		},
		"15623": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.code"
		},
		"15624": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rules"
		},
		"15625": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_default"
		},
		"15626": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_combinable"
		},
		"15627": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.metadata"
		},
		"15628": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams"
		},
		"15629": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.id"
		},
		"15630": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.q"
		},
		"15631": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.tax_region_id"
		},
		"15632": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.is_default"
		},
		"15633": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.service_zone_id"
		},
		"15634": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_profile_id"
		},
		"15635": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.provider_id"
		},
		"15636": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_option_type_id"
		},
		"15637": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.created_at"
		},
		"15638": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.updated_at"
		},
		"15639": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.deleted_at"
		},
		"15640": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15641": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15642": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15643": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15644": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse"
		},
		"15645": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse.tax_rate"
		},
		"15646": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateListResponse"
		},
		"15647": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15648": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"15649": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateDeleteResponse"
		},
		"15650": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15651": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15652": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15653": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15654": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15655": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion"
		},
		"15656": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.id"
		},
		"15657": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.rate"
		},
		"15658": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.code"
		},
		"15659": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.country_code"
		},
		"15660": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.province_code"
		},
		"15661": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.name"
		},
		"15662": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.metadata"
		},
		"15663": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_region_id"
		},
		"15664": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_combinable"
		},
		"15665": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_default"
		},
		"15666": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent_id"
		},
		"15667": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_at"
		},
		"15668": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.updated_at"
		},
		"15669": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.deleted_at"
		},
		"15670": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_by"
		},
		"15671": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_rates"
		},
		"15672": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent"
		},
		"15673": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.children"
		},
		"15674": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion"
		},
		"15675": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.country_code"
		},
		"15676": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.province_code"
		},
		"15677": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.parent_id"
		},
		"15678": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.default_tax_rate"
		},
		"15679": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"15680": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.rate"
		},
		"15681": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.code"
		},
		"15682": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.name"
		},
		"15683": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.is_combinable"
		},
		"15684": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"15685": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.metadata"
		},
		"15686": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams"
		},
		"15687": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.id"
		},
		"15688": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.q"
		},
		"15689": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.parent_id"
		},
		"15690": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.country_code"
		},
		"15691": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.province_code"
		},
		"15692": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_at"
		},
		"15693": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.updated_at"
		},
		"15694": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.deleted_at"
		},
		"15695": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_by"
		},
		"15696": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"15697": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"15698": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"15699": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15700": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15701": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15702": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionParams"
		},
		"15703": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"15704": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse"
		},
		"15705": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse.tax_region"
		},
		"15706": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionListResponse"
		},
		"15707": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"15708": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type.tax_regions"
		},
		"15709": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionDeleteResponse"
		},
		"15710": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"15711": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"15712": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"15713": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"15714": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"15715": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"15716": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"15717": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"15718": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"15719": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"15720": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"15721": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"15722": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"15723": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"15724": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"15725": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"15726": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"15727": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"15728": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"15729": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"15730": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"15731": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"15732": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"15733": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"15734": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"15735": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"15736": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"15737": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"15738": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"15739": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"15740": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"15741": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"15742": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"15743": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"15744": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"15745": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"15746": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"15747": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"15748": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"15749": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"15750": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"15751": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"15752": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"15753": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"15754": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"15755": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"15756": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"15757": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"15758": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"15759": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"15760": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"15761": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"15762": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"15763": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"15764": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"15765": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"15766": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"15767": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"15768": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"15769": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"15770": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"15771": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"15772": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"15773": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"15774": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"15775": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"15776": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"15777": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"15779": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"15780": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"15781": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"15782": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"15783": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"15784": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"15785": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"15786": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"15787": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"15788": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"15789": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"15790": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"15791": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"15792": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"15793": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"15794": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"15795": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"15796": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"15797": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"15798": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"15799": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"15800": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"15801": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"15802": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"15803": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"15804": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"15805": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"15806": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"15807": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"15808": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"15809": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"15810": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"15811": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"15812": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"15813": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"15814": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"15815": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"15816": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"15817": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"15818": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"15819": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"15820": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"15821": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"15822": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"15823": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"15824": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"15825": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"15826": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"15827": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"15828": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"15829": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"15830": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"15831": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkAdjustInventoryLevelInput"
		},
		"15832": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type"
		},
		"15833": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"15834": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"15835": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.adjustment"
		},
		"15836": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"15837": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"15838": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"15839": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"15840": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"15841": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"15842": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"15843": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"15844": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"15845": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"15846": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"15847": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"15848": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"15849": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"15850": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"15851": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"15852": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"15853": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext"
		},
		"15854": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.locationId"
		},
		"15855": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.lineItemId"
		},
		"15856": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.salesChannelId"
		},
		"15857": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"15858": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"15859": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"15860": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15861": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15862": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15863": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"15864": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"15865": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15866": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15867": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15868": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"15869": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"15870": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15871": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15872": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15873": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"15874": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"15875": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15876": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15877": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15878": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"15879": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"15880": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15881": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15882": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15883": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"15884": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"15885": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"15886": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15887": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15888": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"15889": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"15890": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15891": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15892": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15893": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"15894": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"15895": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15896": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"15897": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15898": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"15899": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"15900": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"15901": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15902": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15903": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"15904": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"15905": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"15906": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15907": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15908": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"15909": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"15910": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15911": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15912": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"15913": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15914": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15915": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"15916": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"15917": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15918": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15919": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"15920": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15921": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15922": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"15923": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"15924": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"15925": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15926": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"15927": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"15928": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15929": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"15930": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"15931": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"15932": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15933": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"15934": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"15935": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15936": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"15937": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"15938": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15939": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15940": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"15941": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15942": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15943": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"15944": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"15945": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15946": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15947": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"15948": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"15949": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15950": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"15951": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"15952": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"15953": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15954": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"15955": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"15956": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"15957": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15958": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"15959": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"15960": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"15961": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15962": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"15963": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"15964": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15965": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"15966": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15967": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15968": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"15969": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"15970": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15971": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"15972": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15973": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15974": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"15975": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"15976": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"15977": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15978": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"15979": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"15980": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15981": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"15982": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15983": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15984": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"15985": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"15986": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15987": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"15988": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"15989": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15990": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"15991": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"15992": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"15993": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15994": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"15995": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"15996": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"15997": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"15998": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"15999": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"16000": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16001": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"16002": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16003": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"16004": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"16005": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"16006": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16007": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"16008": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"16009": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16010": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"16011": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"16012": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16013": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"16014": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"16015": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16016": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"16017": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"16018": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16019": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"16020": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"16021": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"16022": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"16023": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"16024": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"16025": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"16026": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16027": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"16028": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16029": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"16030": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"16031": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16032": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"16033": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"16034": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16035": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"16036": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"16037": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16038": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"16039": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"16040": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16041": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"16042": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16043": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"16044": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"16045": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16046": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"16047": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16048": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"16049": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"16050": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"16051": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"16052": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"16066": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"16067": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"16068": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"16069": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16070": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16071": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"16072": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"16073": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16074": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16075": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"16076": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"16077": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16078": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16079": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"16080": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"16081": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16082": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16083": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"16084": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16085": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16086": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16087": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"16088": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"16089": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16090": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16091": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"16092": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16093": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"16094": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16095": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16096": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"16097": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"16098": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"16099": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16100": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16101": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"16102": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16103": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"16104": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16105": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16106": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"16107": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16108": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"16109": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16110": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16111": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16112": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"16113": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16114": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16115": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16116": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"16117": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16118": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16119": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"16120": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"16121": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16122": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"16123": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"16124": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"16125": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"16126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16127": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16128": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16129": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16130": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"16131": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"16132": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"16133": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"16134": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"16135": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16136": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"16137": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"16138": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"16139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"16140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"16141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"16142": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16143": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"16144": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"16145": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"16146": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"16147": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"16148": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16149": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"16150": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"16151": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"16152": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"16153": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16154": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"16155": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"16156": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"16157": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16158": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"16159": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"16160": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"16161": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16162": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"16163": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"16164": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"16165": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16166": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"16167": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"16168": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16169": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"16170": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"16171": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"16172": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"16173": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16174": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"16175": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"16176": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"16177": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"16178": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"16179": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"16180": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"16182": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"16183": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"16184": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16185": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"16186": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"16187": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"16188": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"16189": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"16190": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"16191": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"16193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"16194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"16195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"16196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"16198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"16199": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"16200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"16202": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"16204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"16205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"16206": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"16207": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16208": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16209": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"16210": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"16211": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"16212": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16213": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"16214": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"16215": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"16216": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16217": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"16218": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"16219": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"16220": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16221": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"16222": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16223": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"16224": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"16225": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"16226": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16227": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16228": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"16229": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16230": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"16231": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"16232": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"16233": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"16234": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16235": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"16236": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"16237": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"16238": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"16239": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"16240": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"16241": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16242": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"16243": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"16244": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"16245": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"16246": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16247": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"16248": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"16249": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16250": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"16251": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"16252": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"16253": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"16254": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"16255": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"16256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"16257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"16258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"16259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"16260": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"16261": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"16262": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"16263": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"16264": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"16265": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"16266": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"16267": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16268": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"16269": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"16270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"16271": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"16272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"16273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"16274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"16275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"16276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"16277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"16279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"16280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"16281": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"16282": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16283": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"16284": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"16285": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16286": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"16288": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"16289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"16290": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16291": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16292": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"16293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"16294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"16295": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"16309": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService"
		},
		"16310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"16311": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"16312": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"16313": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"16314": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"16315": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"16316": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16317": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"16318": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"16319": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"16320": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16321": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"16322": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"16323": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"16324": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16326": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"16327": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16328": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"16329": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"16330": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"16331": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16332": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16333": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"16334": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16335": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"16336": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"16337": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16338": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16339": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"16340": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16341": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16342": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"16343": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"16344": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16345": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16346": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"16347": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16348": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16349": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"16350": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"16351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"16352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"16353": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16355": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"16356": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16357": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"16358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"16359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"16360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"16361": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16362": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16363": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"16364": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16365": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16366": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16367": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"16368": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16369": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16370": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"16371": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16372": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16373": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"16374": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16375": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16376": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"16377": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16378": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"16379": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"16380": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"16381": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"16382": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16383": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16384": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16385": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"16386": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"16387": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"16388": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16390": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16391": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"16392": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"16393": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"16394": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16395": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16396": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"16397": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"16398": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16399": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16400": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"16401": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16402": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16403": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"16404": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"16405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"16406": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"16407": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"16408": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"16409": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.entities"
		},
		"16410": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"16411": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TEntity"
		},
		"16412": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"16413": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TContainer"
		},
		"16414": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"16415": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"16416": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"16417": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"16418": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"16419": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"16420": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.id"
		},
		"16421": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"16422": {
			"sourceFileName": "../../../../packages/core/types/src/notification/index.ts",
			"qualifiedName": ""
		},
		"16423": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO"
		},
		"16424": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.id"
		},
		"16425": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.to"
		},
		"16426": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.channel"
		},
		"16427": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.template"
		},
		"16428": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.data"
		},
		"16429": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.trigger_type"
		},
		"16430": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_id"
		},
		"16431": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_type"
		},
		"16432": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.receiver_id"
		},
		"16433": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.original_notification_id"
		},
		"16434": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.external_id"
		},
		"16435": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider_id"
		},
		"16436": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider"
		},
		"16437": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.created_at"
		},
		"16438": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO"
		},
		"16439": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.id"
		},
		"16440": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.handle"
		},
		"16441": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.name"
		},
		"16442": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.channels"
		},
		"16443": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps"
		},
		"16444": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.q"
		},
		"16445": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.to"
		},
		"16446": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.channel"
		},
		"16447": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.template"
		},
		"16448": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.trigger_type"
		},
		"16449": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_id"
		},
		"16450": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_type"
		},
		"16451": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.receiver_id"
		},
		"16452": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.created_at"
		},
		"16453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16455": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/logger.ts",
			"qualifiedName": "LocalNotificationServiceOptions"
		},
		"16456": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions"
		},
		"16457": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.api_key"
		},
		"16458": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.from"
		},
		"16459": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO"
		},
		"16460": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.to"
		},
		"16461": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.channel"
		},
		"16462": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.template"
		},
		"16463": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.data"
		},
		"16464": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.trigger_type"
		},
		"16465": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_id"
		},
		"16466": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_type"
		},
		"16467": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.receiver_id"
		},
		"16468": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.original_notification_id"
		},
		"16469": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.idempotency_key"
		},
		"16470": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"16471": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"16472": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"16473": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"16474": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16475": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"16476": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"16477": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16478": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"16479": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"16480": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"16481": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"16482": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16483": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"16484": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"16485": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"16486": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"16487": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16488": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"16489": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"16490": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"16491": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"16492": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16506": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationDTO"
		},
		"16507": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.to"
		},
		"16508": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.channel"
		},
		"16509": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.template"
		},
		"16510": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.data"
		},
		"16511": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationResultsDTO"
		},
		"16512": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.id"
		},
		"16513": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider"
		},
		"16514": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"16515": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"16516": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "notification"
		},
		"16517": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"16518": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"16519": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"16520": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"16521": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"16522": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"16523": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"16524": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"16525": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"16526": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"16527": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"16528": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"16529": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"16530": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16531": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"16532": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"16533": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"16534": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16535": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"16536": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"16537": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16538": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"16539": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"16540": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"16541": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"16542": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16543": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"16544": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"16545": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"16546": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"16547": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16548": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"16549": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"16550": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"16551": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16552": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"16553": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"16554": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16555": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"16556": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"16557": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"16558": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"16559": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"16560": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"16561": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/index.ts",
			"qualifiedName": ""
		},
		"16562": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"16563": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16564": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"16565": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"16566": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"16567": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"16568": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"16569": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"16570": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"16571": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"16572": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"16573": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16574": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"16575": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"16576": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"16577": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"16578": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16579": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"16580": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"16581": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16582": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"16583": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"16584": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"16585": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"16586": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"16587": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"16588": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"16589": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16590": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"16591": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps"
		},
		"16592": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.q"
		},
		"16593": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.id"
		},
		"16594": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.name"
		},
		"16595": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16596": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16597": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressInput"
		},
		"16598": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16599": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"16600": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"16601": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"16602": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"16603": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"16604": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"16605": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"16606": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16607": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "CreateStockLocationInput"
		},
		"16608": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16609": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"16610": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"16611": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"16612": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16613": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpdateStockLocationInput"
		},
		"16614": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"16615": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"16616": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"16617": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"16618": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16619": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpsertStockLocationInput"
		},
		"16620": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "name"
		},
		"16621": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address_id"
		},
		"16622": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address"
		},
		"16623": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "metadata"
		},
		"16624": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"16625": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService"
		},
		"16626": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"16627": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"16628": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"16629": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"16630": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16631": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"16632": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"16633": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"16634": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"16635": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16636": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"16637": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"16638": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"16639": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"16640": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16641": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"16642": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"16643": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"16644": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16645": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"16646": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"16647": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16648": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"16649": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"16650": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"16651": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16652": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"16653": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"16654": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16655": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"16656": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"16657": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"16658": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"16659": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16660": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"16661": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"16662": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"16663": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16664": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"16665": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"16666": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"16667": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"16668": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"16669": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"16670": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16671": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"16672": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"16673": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16674": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"16675": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"16676": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16677": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"16678": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"16679": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16693": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"16694": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"16695": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"16696": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"16697": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"16698": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"16699": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"16700": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"16701": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"16702": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"16703": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"16704": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"16705": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"16706": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"16707": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"16708": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"16709": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"qualifiedName": ""
		},
		"16710": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO"
		},
		"16711": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.sku"
		},
		"16712": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.hs_code"
		},
		"16713": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.weight"
		},
		"16714": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.length"
		},
		"16715": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.height"
		},
		"16716": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.width"
		},
		"16717": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.origin_country"
		},
		"16718": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.mid_code"
		},
		"16719": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.material"
		},
		"16720": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.title"
		},
		"16721": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.description"
		},
		"16722": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.thumbnail"
		},
		"16723": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.metadata"
		},
		"16724": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO"
		},
		"16725": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO.inventoryItems"
		},
		"16726": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"16727": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"16728": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"16729": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"16730": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"16731": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"16732": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"16733": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_identity_id"
		},
		"16734": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"16735": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"16736": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"16737": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"16738": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"16739": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"16740": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"16741": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"16742": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"16743": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"16744": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"16745": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"16746": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"16747": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"16748": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"16749": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"16750": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"16751": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"16752": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"16753": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"16754": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"16755": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"16756": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"16757": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"16758": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"16759": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"16760": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.attribute"
		},
		"16761": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"16762": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"16763": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"16764": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"16765": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"16766": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"16767": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"16768": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"16769": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"16770": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"16771": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"16772": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"16773": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"16774": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"16775": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"16776": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"16777": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"16778": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"16779": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"16780": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"16781": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"16782": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"16783": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"16784": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"16785": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"16786": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"16787": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"16788": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"16789": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"16790": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"16791": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"16792": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"16793": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"16794": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput"
		},
		"16795": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput.product_categories"
		},
		"16796": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput"
		},
		"16797": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.selector"
		},
		"16798": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.update"
		},
		"16799": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
		},
		"16800": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"16801": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"16802": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"16803": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"16804": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"16805": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"16806": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"16807": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"16808": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"16809": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"16810": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"qualifiedName": ""
		},
		"16811": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO"
		},
		"16812": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.id"
		},
		"16813": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.workflow_id"
		},
		"16814": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.transaction_id"
		},
		"16815": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.execution"
		},
		"16816": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.context"
		},
		"16817": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.state"
		},
		"16818": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.created_at"
		},
		"16819": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.updated_at"
		},
		"16820": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.deleted_at"
		},
		"16821": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps"
		},
		"16822": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.id"
		},
		"16823": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.workflow_id"
		},
		"16824": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.transaction_id"
		},
		"16825": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.state"
		},
		"16826": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16827": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16828": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO"
		},
		"16829": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.workflow_id"
		},
		"16830": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.transaction_id"
		},
		"16831": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.execution"
		},
		"16832": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.context"
		},
		"16833": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.state"
		},
		"16834": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO"
		},
		"16835": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.transactionId"
		},
		"16836": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"16837": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"16838": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"16839": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"16840": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"16841": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.T"
		},
		"16842": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IdempotencyKeyParts"
		},
		"16843": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16844": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"16845": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"16846": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepId"
		},
		"16847": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.action"
		},
		"16848": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService"
		},
		"16849": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"16850": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"16851": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "idOrObject"
		},
		"16852": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16853": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflow_id"
		},
		"16854": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"16855": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"16856": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16857": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"16858": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"16859": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"16860": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"16861": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16862": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"16863": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"16864": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"16865": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"16866": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16867": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"16868": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"16869": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"16870": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"16871": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16872": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16873": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.errors"
		},
		"16874": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction"
		},
		"16875": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.result"
		},
		"16876": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"16877": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"16878": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"16879": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"16880": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "transactionId"
		},
		"16881": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"16882": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16883": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"16884": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"16885": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"16886": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16887": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"16888": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"16889": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"16890": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16891": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"16892": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"16893": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"16894": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16895": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"16896": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"16897": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"16898": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16899": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"16900": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"16901": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"16902": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16903": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"16904": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"16905": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriber"
		},
		"16906": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"16907": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16908": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"16909": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"16910": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"16911": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"16912": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"16913": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"16914": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberOrId"
		},
		"16915": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16929": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": ""
		},
		"16930": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IsDmlEntity"
		},
		"16931": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"16932": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntityConfig"
		},
		"16933": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16934": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"16935": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"16936": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferDmlEntityNameFromConfig"
		},
		"16937": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16938": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"16939": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16940": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"16941": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TConfig"
		},
		"16942": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"16943": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.name"
		},
		"16944": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"16945": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.[IsDmlEntity]"
		},
		"16946": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"16947": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Config"
		},
		"16948": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		},
		"16949": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"16950": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"16951": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16952": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"16953": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"16954": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"16955": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"16956": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16957": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"16958": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"16959": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"16960": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16961": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"16962": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"16963": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"16964": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"16965": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"16966": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16967": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"16968": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"16969": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"16970": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"16971": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"16972": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"16973": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16974": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"16975": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"16976": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16977": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"16978": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"16979": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"16980": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"16981": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"16982": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"16983": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"16984": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16985": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"16986": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"16987": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"16988": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"16989": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"16990": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"16991": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"16992": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"16993": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"16994": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"16995": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"16996": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16997": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"16998": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"16999": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17000": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"17001": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferBelongsToFields"
		},
		"17002": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17003": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17004": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17005": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17006": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"17007": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasOneFields"
		},
		"17008": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"17009": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasManyFields"
		},
		"17010": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17011": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17012": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"17013": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferManyToManyFields"
		},
		"17014": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"17015": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferSchemaFields"
		},
		"17016": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"17017": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"17018": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17019": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"17020": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17021": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17022": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"17023": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"17024": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"17025": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17026": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"17027": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"17028": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferTypeOf"
		},
		"17029": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17030": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferEntityType"
		},
		"17031": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17032": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"17033": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17034": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17035": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17036": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"17037": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17038": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17039": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"17040": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"17041": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"17042": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"17043": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TWhere"
		},
		"17044": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "SimpleQueryValue"
		},
		"17045": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "NeQueryValue"
		},
		"17046": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17047": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$ne"
		},
		"17048": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryValue"
		},
		"17049": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryCondition"
		},
		"17050": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17051": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"17052": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"17053": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"17054": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"17055": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"17056": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"17057": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"17058": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"17059": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"17060": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"17061": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"17062": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"17063": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"17064": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"17065": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"17066": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"17067": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"17068": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"17069": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17070": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"17071": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"17072": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17073": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"17074": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"17075": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"17076": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"17077": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"17078": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"17079": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"17080": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"17081": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"17082": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"17083": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"17084": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17085": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"17086": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"17087": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"17088": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"17089": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"17090": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17091": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"17092": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"17093": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"17094": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"17095": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"17096": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"17097": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"17098": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"17099": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"17100": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"17101": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"17102": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"17103": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"17104": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17105": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"17106": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"17107": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"17108": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"17109": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17110": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"17112": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"17113": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"17114": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"17115": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17116": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"17118": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"17119": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"17120": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"17121": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"17122": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"17124": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17125": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"17126": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"17127": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"17128": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "InternalJoinerServiceConfig"
		},
		"17129": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"17130": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"17131": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"17132": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"17133": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"17134": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"17135": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"17136": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"17137": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"17138": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"17139": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule"
		},
		"17140": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"17141": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"17142": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"17143": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"17144": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17145": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"17146": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"17147": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"17148": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"17149": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17150": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"17151": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"17152": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"17153": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"17154": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17155": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"17156": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"17157": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"17158": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"17159": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17160": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"17161": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"17162": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"17163": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17164": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"17165": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"17166": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"17167": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"17168": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17169": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"17170": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"17171": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"17172": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"17173": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17187": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "PlannerActionLinkDescriptor"
		},
		"17188": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"17189": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModule"
		},
		"17190": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModule"
		},
		"17191": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModel"
		},
		"17192": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModel"
		},
		"17193": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "LinkMigrationsPlannerAction"
		},
		"17194": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"17195": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"17196": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"17197": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.sql"
		},
		"17198": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"17199": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"17200": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"17201": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"17202": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"17203": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"17204": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"17205": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"17206": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"17207": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner"
		},
		"17208": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"17209": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"17210": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"17211": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"17212": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "actions"
		},
		"17213": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"17214": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"17215": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"17216": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"17217": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"17218": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"17219": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"17220": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"17221": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"17222": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"17223": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"17225": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"17226": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"17227": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"17228": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"17229": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"17230": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"17231": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"17232": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"17233": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"17234": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"17235": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"17236": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"17237": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"17238": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"17239": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"17240": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"17241": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"17242": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"17243": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"17244": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"17245": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"17246": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"17247": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"17248": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"17249": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"17250": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"17251": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"17252": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"17253": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"17254": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"17255": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"17256": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"17257": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"17258": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"17259": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"17260": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"17261": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"17262": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"17263": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"17264": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"17265": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"17266": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"17267": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"17268": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"17269": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"17270": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"17271": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"17272": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"17273": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"17274": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"17275": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"17276": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"17277": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"17278": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"17279": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"17280": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"17281": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"17282": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"17283": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"17284": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"17285": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"17287": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"17288": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"17289": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"17290": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"17291": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"17292": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"17293": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"17294": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"17295": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"17296": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17297": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"17298": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"17299": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17300": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"17301": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"17302": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17303": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"17304": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17305": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"17306": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"17307": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"17308": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17309": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"17310": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"17311": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"17312": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"17313": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"17314": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"17315": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"17316": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"17317": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"17318": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"17319": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsStringLiteral"
		},
		"17320": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17321": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Join"
		},
		"17322": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17323": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "JoinedString"
		},
		"17324": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCapitalizer"
		},
		"17325": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17326": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SplitAnyCase"
		},
		"17327": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17328": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"17329": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"17330": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17331": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"17332": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17333": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"17334": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17335": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"17336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"17339": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17340": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityClassName"
		},
		"17341": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityValues"
		},
		"17342": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"17343": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.id"
		},
		"17344": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"17345": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"17346": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"17347": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"17348": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"17349": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"17350": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"17351": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"17352": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"17353": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"17354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"17355": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"17356": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"17357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"17358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"17359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"17360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"17361": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"17362": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"17363": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"17364": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"17365": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"17366": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"17367": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"17368": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"17369": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection"
		},
		"17370": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"17371": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"17372": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"17373": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"17374": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"17375": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"17376": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"17377": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"17378": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams"
		},
		"17379": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"17380": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"17381": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"17382": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"17383": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"17384": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"17385": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"17386": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"17387": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"17388": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"17389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"17390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"17391": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionParams"
		},
		"17392": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"17393": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile"
		},
		"17394": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"17395": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"17396": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseUploadFile"
		},
		"17397": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"17398": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.files"
		},
		"17399": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"17400": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.name"
		},
		"17401": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.content"
		},
		"17402": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneGeoZone"
		},
		"17403": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneGeoZone"
		},
		"17404": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory"
		},
		"17405": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.id"
		},
		"17406": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.name"
		},
		"17407": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.description"
		},
		"17408": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.handle"
		},
		"17409": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_active"
		},
		"17410": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_internal"
		},
		"17411": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.rank"
		},
		"17412": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category_id"
		},
		"17413": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category"
		},
		"17414": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.category_children"
		},
		"17415": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.products"
		},
		"17416": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.created_at"
		},
		"17417": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.updated_at"
		},
		"17418": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.deleted_at"
		},
		"17419": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams"
		},
		"17420": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"17421": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"17422": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"17423": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"17424": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"17425": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"17426": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_active"
		},
		"17427": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_internal"
		},
		"17428": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"17429": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"17430": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"17431": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"17432": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"17433": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"17434": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"17435": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"17436": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"17437": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"17438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"17439": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams"
		},
		"17440": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"17441": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"17442": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"17443": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag"
		},
		"17444": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"17445": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"17446": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"17447": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"17448": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"17449": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"17450": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams"
		},
		"17451": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"17452": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"17453": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"17454": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"17455": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"17456": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"17457": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"17458": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"17459": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"17460": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType"
		},
		"17461": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"17462": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"17463": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"17464": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"17465": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"17466": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"17467": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason"
		},
		"17468": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"17469": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"17470": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"17471": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"17472": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"17473": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"17474": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"17475": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse"
		},
		"17476": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.id"
		},
		"17477": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.line_item_id"
		},
		"17478": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.location_id"
		},
		"17479": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.quantity"
		},
		"17480": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.external_id"
		},
		"17481": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.description"
		},
		"17482": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item_id"
		},
		"17483": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item"
		},
		"17484": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.metadata"
		},
		"17485": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_by"
		},
		"17486": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.deleted_at"
		},
		"17487": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_at"
		},
		"17488": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.updated_at"
		},
		"17489": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress"
		},
		"17490": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_1"
		},
		"17491": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_2"
		},
		"17492": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.company"
		},
		"17493": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.country_code"
		},
		"17494": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.city"
		},
		"17495": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.phone"
		},
		"17496": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.postal_code"
		},
		"17497": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.province"
		},
		"17498": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule"
		},
		"17499": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference"
		},
		"17500": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference_id"
		},
		"17501": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"17502": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"17503": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"17504": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"17505": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"17506": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"17507": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"17508": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"17509": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"17510": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"17511": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"17512": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"17513": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"17514": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"17515": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"17516": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "TData"
		},
		"17517": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCapitalizer"
		},
		"17518": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17519": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"17520": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IncludesSeparator"
		},
		"17521": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17522": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SeparatorCaseParser"
		},
		"17523": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17524": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"17525": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsOneWord"
		},
		"17526": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17527": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsCamelCase"
		},
		"17528": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17529": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCaseParser"
		},
		"17530": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17531": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"17532": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsPascalCase"
		},
		"17533": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17534": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCaseParser"
		},
		"17535": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17536": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"17537": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17538": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"17539": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"17540": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"17541": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17542": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry"
		},
		"17543": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry.type"
		},
		"17544": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17545": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17546": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince"
		},
		"17547": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.type"
		},
		"17548": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.province_code"
		},
		"17549": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17550": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17551": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity"
		},
		"17552": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.type"
		},
		"17553": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.province_code"
		},
		"17554": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.city"
		},
		"17555": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17556": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17557": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip"
		},
		"17558": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.type"
		},
		"17559": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.province_code"
		},
		"17560": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.city"
		},
		"17561": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.postal_expression"
		},
		"17562": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17563": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17564": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry"
		},
		"17565": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry.type"
		},
		"17566": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"17567": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17568": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17569": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince"
		},
		"17570": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.type"
		},
		"17571": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.province_code"
		},
		"17572": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"17573": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17574": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17575": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity"
		},
		"17576": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.type"
		},
		"17577": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.province_code"
		},
		"17578": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.city"
		},
		"17579": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"17580": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17581": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17582": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip"
		},
		"17583": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.type"
		},
		"17584": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.province_code"
		},
		"17585": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.city"
		},
		"17586": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.postal_expression"
		},
		"17587": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"17588": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17589": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17590": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Separator"
		},
		"17591": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "WordInCamelCase"
		},
		"17592": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"17593": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Word"
		},
		"17594": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"17595": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17596": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone"
		},
		"17597": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"17598": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17599": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17600": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone"
		},
		"17601": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"17602": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"17603": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"17604": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"17605": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"17606": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17607": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"17608": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17609": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"17610": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17611": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"17612": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"17613": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"17614": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"17615": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"17616": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/index.ts",
			"2": "../../../../packages/core/types/src/admin/index.ts",
			"3": "../../../../packages/core/types/src/cache/index.ts",
			"4": "../../../../packages/core/types/src/common/index.ts",
			"5": "../../../../packages/core/types/src/dal/index.ts",
			"6": "../../../../packages/core/types/src/event-bus/index.ts",
			"7": "../../../../packages/core/types/src/feature-flag/index.ts",
			"8": "../../../../packages/core/types/src/file/index.ts",
			"9": "../../../../packages/core/types/src/http/index.ts",
			"10": "../../../../packages/core/types/src/inventory/index.ts",
			"11": "../../../../packages/core/types/src/logger/index.ts",
			"12": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"13": "../../../../packages/core/types/src/notification/index.ts",
			"14": "../../../../packages/core/types/src/search/index.ts",
			"15": "../../../../packages/core/types/src/stock-location/index.ts",
			"16": "../../../../packages/core/types/src/transaction-base/index.ts",
			"17": "../../../../packages/core/types/src/workflow/index.ts",
			"18": "../../../../packages/core/types/src/workflow/common.ts",
			"19": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"20": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"21": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"22": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"23": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"24": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"25": "../../../../packages/core/types/src/dml/index.ts"
		},
		"reflections": {
			"1": 14004,
			"2": 14023,
			"3": 14024,
			"4": 14038,
			"5": 14277,
			"6": 14466,
			"7": 14542,
			"8": 14561,
			"9": 14652,
			"10": 15715,
			"11": 16066,
			"12": 16124,
			"13": 16422,
			"14": 16517,
			"15": 16561,
			"16": 16693,
			"17": 16698,
			"18": 16699,
			"19": 16709,
			"20": 16726,
			"21": 16743,
			"22": 16793,
			"23": 16803,
			"24": 16810,
			"25": 16929
		}
	}
}