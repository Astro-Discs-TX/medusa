{
	"id": 34457,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 34458,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 34459,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 34460,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34461,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34462,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34463,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34464,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34465,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34466,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34467,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34468,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34469,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 34470,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34471,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34472,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34460,
								34461,
								34462,
								34463,
								34464,
								34465,
								34466,
								34467,
								34468,
								34469,
								34470,
								34471,
								34472
							]
						}
					]
				}
			}
		},
		{
			"id": 34473,
			"name": "DetailWidgetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for detail widgets. All widgets that are rendered in a detail view,\ne.g. the product detail view, should implement this interface.\n\nThe type of the data prop should be the same as the data that is passed to the widget.\nIf the widget is rendered in the product detail view, the data prop should be of\ntype AdminProduct."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```tsx\nimport type { DetailWidgetProps, AdminProduct } from \"@medusajs/types\"\nimport { defineWidgetConfig } from \"@medusajs/admin-sdk\"\n\nconst ProductWidget = ({ data }: DetailWidgetProps<AdminProduct>) => {\n return <div>{data.title}</div>\n}\n\nexport const config = defineWidgetConfig({\n zone: \"product.details.after\",\n})\n\nexport default ProductWidget\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 34474,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 34475,
						"name": "TData",
						"package": "@medusajs/types",
						"qualifiedName": "DetailWidgetProps.TData",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						34474
					]
				}
			],
			"typeParameters": [
				{
					"id": 34475,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 34476,
			"name": "AdminTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 34477,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34478,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34479,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34480,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 34481,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 34482,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 34481,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34483,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34484,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34485,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34486,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 34487,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34488,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34489,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34490,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34479,
								34483,
								34488
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34478
					]
				}
			]
		},
		{
			"id": 38046,
			"name": "CreateCartCreateLineItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38047,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38487,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38048,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38049,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38050,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38051,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38052,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38053,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38054,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38055,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38056,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38057,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38058,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38059,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38060,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38061,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38062,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38063,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38064,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38065,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38066,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38067,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 38487,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38068,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 38487,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38069,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38047,
						38048,
						38049,
						38050,
						38051,
						38052,
						38053,
						38054,
						38055,
						38056,
						38057,
						38058,
						38059,
						38060,
						38061,
						38062,
						38063,
						38064,
						38065,
						38066,
						38067,
						38068,
						38069
					]
				}
			]
		},
		{
			"id": 38070,
			"name": "UpdateLineItemInCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38071,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
							"qualifiedName": "CartDTO"
						},
						"name": "CartDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38072,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
							"qualifiedName": "CartLineItemDTO"
						},
						"name": "CartLineItemDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38073,
					"name": "update",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "UpdateLineItemDTO"
								},
								"name": "UpdateLineItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38071,
						38072,
						38073
					]
				}
			]
		},
		{
			"id": 38074,
			"name": "CreateCartAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38075,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38076,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38077,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38078,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38079,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38080,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38081,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38082,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38083,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38084,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38085,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38075,
						38076,
						38077,
						38078,
						38079,
						38080,
						38081,
						38082,
						38083,
						38084,
						38085
					]
				}
			]
		},
		{
			"id": 38086,
			"name": "CreateCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38087,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38088,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38089,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38090,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38091,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38092,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38093,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38094,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 38074,
								"name": "CreateCartAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38095,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 38074,
								"name": "CreateCartAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38096,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38097,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38046,
							"name": "CreateCartCreateLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38098,
					"name": "promo_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38087,
						38088,
						38089,
						38090,
						38091,
						38092,
						38093,
						38094,
						38095,
						38096,
						38097,
						38098
					]
				}
			]
		},
		{
			"id": 38099,
			"name": "AddToCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38100,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38046,
							"name": "CreateCartCreateLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38101,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38114,
						"name": "CartWorkflowDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38100,
						38101
					]
				}
			]
		},
		{
			"id": 38102,
			"name": "UpdateCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38103,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38104,
					"name": "promo_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 38105,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38106,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38107,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38108,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38109,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38110,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38103,
						38104,
						38105,
						38106,
						38107,
						38108,
						38109,
						38110
					]
				}
			]
		},
		{
			"id": 38111,
			"name": "CreatePaymentCollectionForCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38112,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38113,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38112,
						38113
					]
				}
			]
		},
		{
			"id": 38114,
			"name": "CartWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38115,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
							"qualifiedName": "CustomerDTO"
						},
						"name": "CustomerDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38116,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "ProductDTO"
						},
						"name": "ProductDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38117,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/region/common.ts",
							"qualifiedName": "RegionDTO"
						},
						"name": "RegionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38118,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CartDTO.id"
					}
				},
				{
					"id": 38119,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
							"qualifiedName": "PaymentCollectionDTO"
						},
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38115,
						38116,
						38117,
						38118,
						38119
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
						"qualifiedName": "CartDTO"
					},
					"name": "CartDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38120,
			"name": "ListShippingOptionsForCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38121,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38122,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38123,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38124,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38126,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38127,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38128,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38126,
										38127,
										38128
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38121,
						38122,
						38123,
						38124
					]
				}
			]
		},
		{
			"id": 38129,
			"name": "PricedShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38130,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38487,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38130
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
						"qualifiedName": "ShippingOptionDTO"
					},
					"name": "ShippingOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38131,
			"name": "CompleteCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38132,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38132
					]
				}
			]
		},
		{
			"id": 38133,
			"name": "ConfirmVariantInventoryWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38134,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38135,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38136,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38137,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38138,
										"name": "manage_inventory",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									{
										"id": 38139,
										"name": "inventory_items",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 38140,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38141,
															"name": "inventory_item_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 38142,
															"name": "variant_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 38143,
															"name": "required_quantity",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 38487,
																"name": "BigNumberInput",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 38144,
															"name": "inventory",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 38145,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 38146,
																				"name": "location_levels",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "reflection",
																					"declaration": {
																						"id": 38147,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 38148,
																								"name": "stock_locations",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "reflection",
																										"declaration": {
																											"id": 38149,
																											"name": "__type",
																											"variant": "declaration",
																											"kind": 65536,
																											"flags": {},
																											"children": [
																												{
																													"id": 38150,
																													"name": "id",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													}
																												},
																												{
																													"id": 38151,
																													"name": "sales_channels",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"type": {
																														"type": "array",
																														"elementType": {
																															"type": "reflection",
																															"declaration": {
																																"id": 38152,
																																"name": "__type",
																																"variant": "declaration",
																																"kind": 65536,
																																"flags": {},
																																"children": [
																																	{
																																		"id": 38153,
																																		"name": "id",
																																		"variant": "declaration",
																																		"kind": 1024,
																																		"flags": {},
																																		"type": {
																																			"type": "unknown",
																																			"name": "..."
																																		}
																																	}
																																],
																																"groups": [
																																	{
																																		"title": "Properties",
																																		"children": [
																																			38153
																																		]
																																	}
																																]
																															}
																														}
																													}
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"children": [
																														38150,
																														38151
																													]
																												}
																											]
																										}
																									}
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									38148
																								]
																							}
																						]
																					}
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					38146
																				]
																			}
																		]
																	}
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38141,
																38142,
																38143,
																38144
															]
														}
													]
												}
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38137,
											38138,
											38139
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 38154,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38155,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38156,
										"name": "variant_id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38157,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 38487,
											"name": "BigNumberInput",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38156,
											38157
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 38158,
					"name": "itemsToUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38159,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38160,
										"name": "data",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 38161,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38162,
														"name": "variant_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 38163,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": 38487,
															"name": "BigNumberInput",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38162,
															38163
														]
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38160
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38134,
						38135,
						38154,
						38158
					]
				}
			]
		},
		{
			"id": 38519,
			"name": "IsStringLiteral",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38520,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38520,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "intrinsic",
						"name": "string"
					},
					"extendsType": {
						"type": "reference",
						"target": 38520,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 38946,
			"name": "WordInCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38947,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 38948,
					"name": "Word",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38947,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "reference",
								"target": 38948,
								"name": "Word",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "NextCharacter"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "_"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "NextCharacter"
						},
						"name": "NextCharacter",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Capitalize"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "NextCharacter"
								},
								"name": "NextCharacter",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Capitalize",
						"package": "typescript"
					},
					"trueType": {
						"type": "reference",
						"target": 38948,
						"name": "Word",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"falseType": {
						"type": "reference",
						"target": 38946,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38947,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 38948,
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "NextCharacter"
											},
											"name": "NextCharacter",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "WordInCamelCase",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 38948,
					"name": "Word",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 38945,
			"name": "Separator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "_"
					},
					{
						"type": "literal",
						"value": "-"
					}
				]
			}
		},
		{
			"id": 38875,
			"name": "IncludesSeparator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38876,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38876,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 38945,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 38880,
			"name": "IsOneWord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38881,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38881,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Lowercase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 38881,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Lowercase",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38881,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Uppercase"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 38881,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Uppercase",
						"package": "typescript"
					},
					"trueType": {
						"type": "literal",
						"value": true
					},
					"falseType": {
						"type": "literal",
						"value": false
					}
				}
			}
		},
		{
			"id": 38882,
			"name": "IsCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38883,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38883,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Uncapitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 38883,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Uncapitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 38887,
			"name": "IsPascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38888,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38888,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Capitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 38888,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Capitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 38877,
			"name": "SeparatorCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "snake_case, CONSTANT_CASE, kebab-case or COBOL-CASE"
					}
				]
			},
			"typeParameters": [
				{
					"id": 38878,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 38879,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38878,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "inferred",
								"name": "Word"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 38945,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "Tail"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "reference",
					"target": 38877,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 38879,
										"name": "Tuple",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Lowercase"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Word"
											},
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Lowercase",
									"package": "typescript"
								}
							]
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38878,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "inferred",
									"name": "Word"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "rest",
								"elementType": {
									"type": "reference",
									"target": 38879,
									"name": "Tuple",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Word"
										},
										"name": "Word",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "reference",
						"target": 38879,
						"name": "Tuple",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 38884,
			"name": "CamelCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38885,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 38886,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38885,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": ""
				},
				"trueType": {
					"type": "reference",
					"target": 38886,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38885,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 38946,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38885,
											"name": "Type",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "WordInCamelCase",
									"package": "@medusajs/types"
								},
								""
							],
							[
								{
									"type": "inferred",
									"name": "Tail"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38885,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "Word"
									},
									""
								],
								[
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Tail"
										},
										"name": "Tail",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									""
								]
							]
						},
						"trueType": {
							"type": "reference",
							"target": 38884,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uncapitalize"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Tail"
											},
											"name": "Tail",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Uncapitalize",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 38886,
												"name": "Tuple",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
														"qualifiedName": "Word"
													},
													"name": "Word",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										}
									]
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 38889,
			"name": "PascalCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38890,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38890,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "reference",
					"target": 38884,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Uncapitalize"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 38890,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "Uncapitalize",
							"package": "typescript"
						}
					],
					"name": "CamelCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 38526,
			"name": "SplitAnyCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38527,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38875,
					"typeArguments": [
						{
							"type": "reference",
							"target": 38527,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "IncludesSeparator",
					"package": "@medusajs/types"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 38877,
					"typeArguments": [
						{
							"type": "reference",
							"target": 38527,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38880,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38527,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "IsOneWord",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 38527,
												"name": "Type",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38882,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38527,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsCamelCase",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 38884,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38527,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38887,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38527,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "IsPascalCase",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "literal",
								"value": true
							},
							"trueType": {
								"type": "reference",
								"target": 38889,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38527,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "PascalCaseParser",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "tuple"
							}
						}
					}
				}
			}
		},
		{
			"id": 38872,
			"name": "PascalCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38873,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 38874,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38873,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 38872,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "rest",
										"elementType": {
											"type": "reference",
											"target": 38874,
											"name": "Tuple",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Capitalize"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
													"qualifiedName": "Head"
												},
												"name": "Head",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Capitalize",
										"package": "typescript"
									}
								]
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 38872,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 38874,
								"name": "Tuple",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 38874,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 38524,
			"name": "CamelCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38525,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38525,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "First"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": 38872,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
										"qualifiedName": "First"
									},
									"name": "First",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "PascalCapitalizer",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "tuple"
				}
			}
		},
		{
			"id": 38521,
			"name": "Join",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38522,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 38523,
					"name": "JoinedString",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38522,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 38521,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 38523,
											"name": "JoinedString",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Head"
											},
											"name": "Head",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 38521,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 38523,
					"name": "JoinedString",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 38512,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 38513,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38514,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38515,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38516,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38517,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`http.cookieSecret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38518,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38513,
						38514,
						38515,
						38516,
						38517,
						38518
					]
				}
			]
		},
		{
			"id": 34491,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34569,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34570,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34571,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34572,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34571,
										34572
									]
								}
							]
						}
					}
				},
				{
					"id": 34573,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34574,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34575,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34576,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34577,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34575,
										34576,
										34577
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 37791,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput"
						}
					]
				},
				{
					"id": 34578,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34583,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34584,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34585,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34579,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34580,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34583,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 34581,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34584,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 34582,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34585,
											"name": "TDelete",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34580,
										34581,
										34582
									]
								}
							]
						}
					}
				},
				{
					"id": 34586,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34591,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34587,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34588,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34591,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 34589,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34591,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 34590,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34588,
										34589,
										34590
									]
								}
							]
						}
					}
				},
				{
					"id": 34592,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34593,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34594,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34595,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 34578,
						"typeArguments": [
							{
								"type": "reference",
								"target": 34593,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 34594,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 34595,
								"name": "TDelete",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34596,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34597,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 34586,
						"typeArguments": [
							{
								"type": "reference",
								"target": 34597,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34696,
					"name": "CamelCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34697,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38519,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34697,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsStringLiteral",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 38521,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38524,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38526,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34697,
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "SplitAnyCase",
											"package": "@medusajs/types"
										}
									],
									"name": "CamelCapitalizer",
									"package": "@medusajs/types"
								}
							],
							"name": "Join",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 34697,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 34492,
					"name": "Prettify",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prettify complex types to a flat object structure"
							}
						]
					},
					"typeParameters": [
						{
							"id": 34494,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 34494,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 34494,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34493,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 34495,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 34496,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34497,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 34496,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 34496,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 34497,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 34496,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 34501,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 34502,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34503,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34504,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34502,
								34503,
								34504
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 34505,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 34505,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 34507,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34502,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 34508,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34503,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 34509,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34504,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 34506,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34507,
								34508,
								34509,
								34506
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34501,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34510,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 34511,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 34522,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 34512,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34513,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34514,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 34515,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34516,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 34517,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 34518,
													"name": "K",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ASC"
													},
													{
														"type": "literal",
														"value": "DESC"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 34519,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34520,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 34521,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34511,
								34512,
								34513,
								34514,
								34515,
								34519,
								34520,
								34521
							]
						}
					],
					"typeParameters": [
						{
							"id": 34522,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 34524,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 34525,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`fields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34526,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
									},
									{
										"kind": "code",
										"text": "`+`"
									},
									{
										"kind": "text",
										"text": " it will be added to the default fields, using "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34527,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34528,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34529,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34525,
								34526,
								34527,
								34528,
								34529
							]
						}
					]
				},
				{
					"id": 34530,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 34531,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38395,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 34532,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 34533,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34534,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34535,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34536,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34533,
								34534,
								34535,
								34536
							]
						}
					]
				},
				{
					"id": 34537,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 34538,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34539,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34540,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34541,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34542,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34543,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34544,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34538,
								34539,
								34540,
								34541,
								34542,
								34543,
								34544
							]
						}
					]
				},
				{
					"id": 34545,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 34546,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34547,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34548,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34549,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34546,
								34547,
								34548,
								34549
							]
						}
					]
				},
				{
					"id": 34552,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34553,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 34553,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 34552,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 34552,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 34553,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 34554,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34555,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 34555,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 34554,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 34554,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 34555,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 34556,
					"name": "MetadataType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 34557,
					"name": "RawRounding",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34558,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34559,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34560,
									"name": "precision",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34559,
										34560
									]
								}
							]
						}
					}
				},
				{
					"id": 34598,
					"name": "AdminOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Admin dashboard configurations."
							}
						]
					},
					"children": [
						{
							"id": 34599,
							"name": "disable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to disable the admin dashboard. If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the admin dashboard is disabled,\nin both development and production environments. The default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    disable: process.env.ADMIN_DISABLED === \"true\" ||\n      false\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34600,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the admin dashboard. The default value is "
									},
									{
										"kind": "code",
										"text": "`/app`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe value cannot be one of the reserved paths:\n- "
									},
									{
										"kind": "code",
										"text": "`/admin`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/store`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    path: process.env.ADMIN_PATH || `/app`,\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "/",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 34601,
							"name": "outDir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The directory where the admin build is outputted when you run the "
									},
									{
										"kind": "code",
										"text": "`build`"
									},
									{
										"kind": "text",
										"text": " command.\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`./build`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    outDir: process.env.ADMIN_BUILD_DIR || `./build`,\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34602,
							"name": "backendUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa application. This is useful to set when you deploy the Medusa application."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34603,
							"name": "storefrontUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa storefront application. This will help generate links from the admin\nto provide to customers to complete any processes"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    storefrontUrl: process.env.MEDUSA_STOREFRONT_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34604,
							"name": "vite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the Vite configuration for the admin dashboard. This function receives the default Vite configuration\nand returns the modified configuration. The default value is "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34605,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34606,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34607,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
															"qualifiedName": "InlineConfig"
														},
														"name": "InlineConfig",
														"package": "vite"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
													"qualifiedName": "InlineConfig"
												},
												"name": "InlineConfig",
												"package": "vite"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34599,
								34600,
								34601,
								34602,
								34603,
								34604
							]
						}
					]
				},
				{
					"id": 34608,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 34609,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34610,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34611,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34612,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34609,
								34610,
								34611,
								34612
							]
						}
					]
				},
				{
					"id": 34613,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa application, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 34614,
							"name": "databaseName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If the name is specified in "
									},
									{
										"kind": "code",
										"text": "`databaseUrl`"
									},
									{
										"kind": "text",
										"text": ", then you don't have to use this configuration.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseName: process.env.DATABASE_NAME ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34615,
							"name": "databaseUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The PostgreSQL connection URL of the database, which is of the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseUrl: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34616,
							"name": "databaseSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseSchema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n})\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34617,
							"name": "databaseLogging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies whether database messages should be logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseLogging: false\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34619,
							"name": "databaseDriverOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration is used to pass additional options to the database connection. You can pass any configuration. For example, pass the\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " property that enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option.\n\n:::note\n\nMake sure to add to the end of the database URL "
									},
									{
										"kind": "code",
										"text": "`?ssl_mode=disable`"
									},
									{
										"kind": "text",
										"text": " as well when disabling "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": ".\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseDriverOptions: process.env.NODE_ENV !== \"development\" ?\n      { ssl: { rejectUnauthorized: false } } : {}\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 34620,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 34621,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 34622,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 34623,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 34624,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 34625,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						34625
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		34623
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														34621
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 34626,
							"name": "redisUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies the connection URL to Redis to store the Medusa server's session.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisUrl: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34627,
							"name": "redisPrefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines a prefix on all keys stored in Redis for the Medusa server's session. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisPrefix: process.env.REDIS_URL || \"medusa:\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34628,
							"name": "redisOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines options to pass ioredis for the Redis connection used to store the Medusa server's session. Refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisOptions: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 34629,
							"name": "sessionOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines additional options to pass to [express-session](https://www.npmjs.com/package/express-session), which is used to store the Medusa server's session."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    sessionOptions: {\n      name: process.env.SESSION_NAME || \"custom\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38512,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34632,
							"name": "workerMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode.\n\nWorkers are processes running separately from the main application. They're useful for executing long-running or resource-heavy tasks in the background, such as importing products.\n\nWith a worker, these tasks are offloaded to a separate process. So, they won't affect the performance of the main application.\n\n![Diagram showcasing how the server and worker work together](https://res.cloudinary.com/dza7lstvk/image/upload/fl_lossy/f_auto/r_16/ar_16:9,c_pad/v1/Medusa%20Book/medusa-worker_klkbch.jpg?_a=BATFJtAA0)\n\nMedusa has three runtime modes:\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nIn production, it's recommended to deploy two instances:\n\n1. One having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": ".\n2. Another having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    workerMode: process.env.WORKER_MODE || \"shared\"\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						},
						{
							"id": 34633,
							"name": "http",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property configures the application's http-specific settings."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\",\n      compression: {\n        // ...\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34634,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34635,
											"name": "jwtSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create authentication tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": ". However, in production, if this configuration is not set, an\nerror is thrown and the application crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtSecret: \"supersecret\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34636,
											"name": "jwtExpiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The expiration time for the JWT token. Its format is based off the [ms package](https://github.com/vercel/ms).\n\nIf not provided, the default value is "
													},
													{
														"kind": "code",
														"text": "`24h`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtExpiresIn: \"2d\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34637,
											"name": "cookieSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create cookie tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": ". However, in production, if this configuration is not set, an error is thrown and\nthe application crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34638,
											"name": "authCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
													},
													{
														"kind": "code",
														"text": "`/auth`"
													},
													{
														"kind": "text",
														"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that Medusa tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: process.env.AUTH_CORS\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34639,
											"name": "compression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
													},
													{
														"kind": "code",
														"text": "`\"x-no-compression\": true`"
													},
													{
														"kind": "text",
														"text": ".\nLearn more in the [API Reference](https://docs.medusajs.com/v2/api/store#http-compression)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      compression: {\n        enabled: true,\n        level: 6,\n        memLevel: 8,\n        threshold: 1024\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34608,
												"name": "HttpCompressionOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34640,
											"name": "storeCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`store_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:8000`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: process.env.STORE_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34641,
											"name": "adminCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`admin_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: process.env.ADMIN_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34642,
											"name": "authMethodsPerActor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This configuration specifies the supported authentication providers per actor type (such as "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": ", or any custom actors).\nFor example, you only want to allow SSO logins for "
													},
													{
														"kind": "code",
														"text": "`users`"
													},
													{
														"kind": "text",
														"text": ", while you want to allow email/password logins for "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": " to the storefront.\n\n"
													},
													{
														"kind": "code",
														"text": "`authMethodsPerActor`"
													},
													{
														"kind": "text",
														"text": " is a a map where the actor type (eg. 'user') is the key, and the value is an array of supported auth provider IDs."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authMethodsPerActor: {\n        user: [\"email\"],\n        customer: [\"emailpass\", \"google\"]\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34635,
												34636,
												34637,
												34638,
												34639,
												34640,
												34641,
												34642
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34614,
								34615,
								34616,
								34617,
								34619,
								34626,
								34627,
								34628,
								34629,
								34632,
								34633
							]
						}
					]
				},
				{
					"id": 34643,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa application are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include configurations for database, modules, and more.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports the value returned by the "
							},
							{
								"kind": "code",
								"text": "`defineConfig`"
							},
							{
								"kind": "text",
								"text": " utility function imported from "
							},
							{
								"kind": "code",
								"text": "`@medusajs/utils`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "`defineConfig`"
							},
							{
								"kind": "text",
								"text": " accepts as a parameter an object with the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 34644,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": " (required): An object that holds general configurations related to the Medusa application, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "admin",
								"target": 34645,
								"tsLinkText": "admin"
							},
							{
								"kind": "text",
								"text": ": An object that holds admin-related configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 34650,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that configures the Medusa application's modules.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 34651,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    // ...\n  },\n  admin: {\n    // ...\n  },\n  modules: {\n    // ...\n  },\n  featureFlags: {\n    // ...\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa application project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 34644,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa application, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 34613,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34645,
							"name": "admin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds configurations for the Medusa Admin dashboard."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 34598,
								"name": "AdminOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34650,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds all custom modules installed in your Medusa application.\n\n:::note\n\nMedusa's commerce modules are configured by default, so only\nadd them to this property if you're changing their configurations or adding providers to a module.\n\n:::\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the module's registration name. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled. This is only supported for Medusa's commerce and architectural modules;\n2. Or an object having the following properties:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the path to the module relative to "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": ", or the module's NPM package name. For example, "
									},
									{
										"kind": "code",
										"text": "`./modules/my-module`"
									},
									{
										"kind": "text",
										"text": ".\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object indicating the options to pass to the module."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  modules: {\n    helloModuleService: {\n      resolve: \"./modules/hello\"\n    }\n  }\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 37116,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 37127,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 34651,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa application are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can enable a feature in your application by enabling its feature flag. Feature flags are enabled through either environment\nvariables or through this configuration property exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": "'s value is an object. Its properties are the names of the feature flags, and their value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/develop/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  featureFlags: {\n    analytics: true,\n    // ...\n  }\n  // ...\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to run migrations as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34644,
								34645,
								34650,
								34651
							]
						}
					]
				},
				{
					"id": 34652,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34653,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34654,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34655,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34656,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34657,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34658,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34654,
										34655,
										34656,
										34657,
										34658
									]
								}
							]
						}
					}
				},
				{
					"id": 34659,
					"name": "ExecArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34660,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34661,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34664,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34662,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34661,
										34662
									]
								}
							]
						}
					}
				},
				{
					"id": 34663,
					"name": "ModuleImplementations",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
							}
						]
					}
				},
				{
					"id": 34664,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
							}
						]
					},
					"typeParameters": [
						{
							"id": 34684,
							"name": "Cradle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "reference",
								"target": 34663,
								"name": "ModuleImplementations",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
											"qualifiedName": "AwilixContainer"
										},
										"name": "AwilixContainer",
										"package": "awilix"
									},
									{
										"type": "literal",
										"value": "resolve"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34665,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34666,
											"name": "resolve",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 34667,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 34668,
															"name": "K",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															}
														}
													],
													"parameters": [
														{
															"id": 34669,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 34668,
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 34670,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 34668,
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 34684,
															"name": "Cradle",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 34671,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 34672,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 34673,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34674,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 34672,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												34666
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34685,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34686,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34687,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 34688,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 34689,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 34690,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 34689,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										34687
									]
								}
							]
						}
					}
				},
				{
					"id": 34568,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 34691,
					"name": "WithCalculatedPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34692,
							"name": "calculated_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34693,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34694,
											"name": "calculated_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 34695,
											"name": "is_calculated_price_tax_inclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34694,
												34695
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34692
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34501,
						34505,
						34510,
						34524,
						34530,
						34531,
						34532,
						34537,
						34545,
						34598,
						34608,
						34613,
						34643,
						34663,
						34691
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34569,
						34573,
						34578,
						34586,
						34592,
						34596,
						34696,
						34492,
						34495,
						34552,
						34554,
						34556,
						34557,
						34652,
						34659,
						34664,
						34685,
						34568
					]
				}
			]
		},
		{
			"id": 34698,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34885,
					"name": "ModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 34886,
					"name": "SoftDeletableModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 34885,
								"name": "ModelDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 34727,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 34728,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34730,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34730,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 34729,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34730,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34730,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34728,
								34729
							]
						}
					],
					"typeParameters": [
						{
							"id": 34730,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35111,
							"name": "AdminGetCampaignsParams"
						},
						{
							"type": "reference",
							"target": 35222,
							"name": "AdminClaimListParams"
						},
						{
							"type": "reference",
							"target": 35384,
							"name": "AdminGetCustomerGroupsParams"
						},
						{
							"type": "reference",
							"target": 35483,
							"name": "AdminExchangeListParams"
						},
						{
							"type": "reference",
							"target": 35668,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 35743,
							"name": "AdminGetInvitesParams"
						},
						{
							"type": "reference",
							"target": 35781,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 35886,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 36009,
							"name": "AdminProductTagListParams"
						},
						{
							"type": "reference",
							"target": 36050,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 36251,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 36475,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 36538,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 36596,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 36730,
							"name": "FilterableInventoryLevelProps"
						},
						{
							"type": "reference",
							"target": 37436,
							"name": "FilterableNotificationProps"
						},
						{
							"type": "reference",
							"target": 37586,
							"name": "FilterableStockLocationProps"
						},
						{
							"type": "reference",
							"target": 37813,
							"name": "FilterableWorkflowExecutionProps"
						},
						{
							"type": "reference",
							"target": 38637,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 38746,
							"name": "BaseProductCategoryListParams"
						}
					]
				},
				{
					"id": 34731,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 34732,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 34733,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 38533,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34739,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38533,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34739,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 34734,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34735,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34736,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 34737,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34738,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 38535,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 38535,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34732,
								34733,
								34734,
								34735,
								34736,
								34737,
								34738
							]
						}
					],
					"typeParameters": [
						{
							"id": 34739,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 34740,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 34741,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 34742,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 34750,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 34705,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 34750,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 34743,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignatures": [
																{
																	"id": 34744,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 34745,
																			"name": "x",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "inferred",
																		"name": "V"
																	}
																}
															]
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 34727,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 34750,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 34705,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 34750,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 34746,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignatures": [
																		{
																			"id": 34747,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 34748,
																					"name": "x",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "inferred",
																				"name": "V"
																			}
																		}
																	]
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34749,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 34731,
								"typeArguments": [
									{
										"type": "reference",
										"target": 34750,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34742,
								34749
							]
						}
					],
					"typeParameters": [
						{
							"id": 34750,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 34751,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 34752,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 34753,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34752
							]
						}
					],
					"typeParameters": [
						{
							"id": 34753,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 34754,
					"name": "PerformedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34755,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34756,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38540,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 38541,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34757,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38540,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 38541,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34758,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38540,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 38541,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34756,
										34757,
										34758
									]
								}
							]
						}
					}
				},
				{
					"id": 34759,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 34812,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34813,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34814,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 34815,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34816,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 34817,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 34818,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 34814,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 34819,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34820,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 34821,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34822,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 34814,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 34823,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																34821,
																34822,
																34823
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38546,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38545,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 34824,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34825,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34826,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 34826,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38558,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38557,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 34827,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34828,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34829,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 34829,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38561,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38560,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 34830,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34831,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34832,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 34833,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 34834,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34832,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38564,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38563,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 34760,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34761,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34762,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34741,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34835,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34763,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34835,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34764,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34765,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34766,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34741,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34835,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34767,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34835,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34768,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34769,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34770,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 34771,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34835,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34772,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34773,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34774,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 34775,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 34776,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 34777,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	34776,
																	34777
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 34778,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34835,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34779,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34780,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34781,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 34835,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 34705,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 34835,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 34782,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignatures": [
																				{
																					"id": 34783,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"parameters": [
																						{
																							"id": 34784,
																							"name": "x",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "V"
																					}
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 34727,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 34835,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 34705,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 34835,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 34785,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignatures": [
																						{
																							"id": 34786,
																							"name": "__index",
																							"variant": "signature",
																							"kind": 8192,
																							"flags": {},
																							"parameters": [
																								{
																									"id": 34787,
																									"name": "x",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "inferred",
																								"name": "V"
																							}
																						}
																					]
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 34788,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34789,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34790,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34791,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 34792,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 34793,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 34794,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34835,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34795,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34796,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34797,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 34798,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 34799,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34835,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34800,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34801,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34802,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 34803,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34835,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34804,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34805,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34806,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 34807,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34751,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34835,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34808,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 34809,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 34810,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 34835,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 34811,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 34754,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																34810,
																34811
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34812,
								34824,
								34827,
								34830,
								34760,
								34764,
								34768,
								34772,
								34779,
								34789,
								34795,
								34800,
								34804
							]
						}
					],
					"typeParameters": [
						{
							"id": 34835,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38544,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34835,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34836,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 34855,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34856,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34857,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 34858,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34859,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 34860,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 34861,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 34814,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 34862,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34863,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 34864,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34865,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 34814,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 34866,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																34864,
																34865,
																34866
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38546,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38545,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 34867,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34868,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34869,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 34826,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38558,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38557,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 34870,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34871,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34872,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 34829,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38561,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38560,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 34873,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 34874,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 34875,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 34876,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 34877,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34832,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 38564,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 38563,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 34837,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34838,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34839,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34741,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34878,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34840,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34531,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34841,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34878,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34842,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34843,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34844,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34741,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34878,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34845,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34531,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34846,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34878,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34847,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34848,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34849,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 34850,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34878,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34851,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34852,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34853,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34854,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34855,
								34867,
								34870,
								34873,
								34837,
								34842,
								34847,
								34851
							]
						}
					],
					"typeParameters": [
						{
							"id": 34878,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38544,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34878,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34879,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 34880,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34881,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34880
							]
						}
					],
					"typeParameters": [
						{
							"id": 34881,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 34882,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 34883,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34884,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34883
							]
						}
					],
					"typeParameters": [
						{
							"id": 34884,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 34705,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34726,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34706,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34707,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38529,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34726,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 34708,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38529,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34726,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 34709,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 38531,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34726,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38531,
													"typeArguments": [
														{
															"type": "reference",
															"target": 34726,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 34710,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34711,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38531,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34726,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 34712,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38531,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34726,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 34713,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38529,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34714,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34715,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34716,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34717,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 34726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34718,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34719,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34720,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34721,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34722,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34723,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34724,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34725,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34707,
										34708,
										34709,
										34710,
										34711,
										34712,
										34713,
										34714,
										34715,
										34716,
										34717,
										34718,
										34719,
										34720,
										34721,
										34722,
										34723,
										34724,
										34725
									]
								}
							]
						}
					}
				},
				{
					"id": 34699,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34703,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 34704,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 34704,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 34703,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 34703,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 34703,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 34705,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 34703,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 34703,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 34700,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 34701,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 34702,
																"name": "x",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"type": {
															"type": "inferred",
															"name": "V"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 34699,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 34704,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 38528,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34727,
						34731,
						34741,
						34751,
						34759,
						34836,
						34879,
						34882
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34885,
						34886,
						34754,
						34705,
						34699
					]
				}
			]
		},
		{
			"id": 38540,
			"name": "EntityClassName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 38541,
			"name": "EntityValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 38542,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 38543,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									38543
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 38544,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 38545,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38546,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 38547,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 38548,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38549,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 38550,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 38551,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 34814,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 38552,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38553,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38554,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 38555,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 34814,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 38556,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38554,
														38555,
														38556
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38557,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38558,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 38559,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 34826,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 38560,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38561,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 38562,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 34829,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 38563,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38564,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 38565,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 38566,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 38567,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 34832,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						38545,
						38557,
						38560,
						38563
					]
				}
			],
			"typeParameters": [
				{
					"id": 38568,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 34759,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 34836,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 38535,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38539,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38536,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 38537,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 38538,
									"name": "k",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 38539,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 38529,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38530,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38530,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38530,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 38891,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 34699,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38530,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 38895,
					"typeArguments": [
						{
							"type": "reference",
							"target": 38530,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 38531,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38532,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38532,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38532,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 38532,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 38891,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38892,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38893,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 38894,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										38893
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38970,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38971,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38971,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 38971,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 38971,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 38960,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38969,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 38969,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 38961,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 38962,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									38962
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 38970,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 38969,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 38963,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38964,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38964
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 38970,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38969,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 38965,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38966,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38966
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 38970,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38969,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 38967,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38968,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38968
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 38970,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 38949,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38950,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 38950,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 38531,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38950,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38960,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38950,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 38895,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38896,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38949,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38896,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38949,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38896,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38949,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38896,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 38528,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 38533,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38534,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 38534,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 38533,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38534,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 38534,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38534,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 37926,
			"name": "DmlTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37927,
					"name": "DMLSchema",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of DML schema. It must be a key-value pair\nwith string based keys and properties/relationships\nas the value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 37960,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 37978,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 37928,
					"name": "IDmlEntityConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37929,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37930,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37931,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37930,
												37931
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37932,
					"name": "InferDmlEntityNameFromConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37937,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37928,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 37937,
							"name": "TConfig",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "reference",
							"target": 34696,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37937,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCase",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 37937,
								"name": "TConfig",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 37933,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37934,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37934
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 34696,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "name"
										},
										"objectType": {
											"type": "reference",
											"target": 37937,
											"name": "TConfig",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CamelCase",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 37937,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 37935,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 37936,
												"name": "tableName",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													37936
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": 34696,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "tableName"
											},
											"objectType": {
												"type": "reference",
												"target": 37937,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "CamelCase",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						}
					}
				},
				{
					"id": 37938,
					"name": "IDmlEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of a DML entity"
							}
						]
					},
					"children": [
						{
							"id": 37939,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37932,
								"typeArguments": [
									{
										"type": "reference",
										"target": 37942,
										"name": "Config",
										"package": "@medusajs/types",
										"qualifiedName": "IDmlEntity.Config",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37940,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37941,
								"name": "Schema",
								"package": "@medusajs/types",
								"qualifiedName": "IDmlEntity.Schema",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37939,
								37940
							]
						}
					],
					"typeParameters": [
						{
							"id": 37941,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37942,
							"name": "Config",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37928,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 37943,
					"name": "KnownDataTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported data types"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "boolean"
							},
							{
								"type": "literal",
								"value": "enum"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "bigNumber"
							},
							{
								"type": "literal",
								"value": "dateTime"
							},
							{
								"type": "literal",
								"value": "array"
							},
							{
								"type": "literal",
								"value": "json"
							},
							{
								"type": "literal",
								"value": "id"
							}
						]
					}
				},
				{
					"id": 37944,
					"name": "RelationshipTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of available relationships at DML level"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "hasOne"
							},
							{
								"type": "literal",
								"value": "hasMany"
							},
							{
								"type": "literal",
								"value": "belongsTo"
							},
							{
								"type": "literal",
								"value": "manyToMany"
							}
						]
					}
				},
				{
					"id": 37945,
					"name": "PropertyMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the property parse method"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37946,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37947,
									"name": "fieldName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37948,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 37949,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37950,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37951,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37952,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37943,
														"name": "KnownDataTypes",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 37953,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37952,
														37953
													]
												}
											]
										}
									}
								},
								{
									"id": 37954,
									"name": "indexes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 37955,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 37956,
														"name": "name",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 37957,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "index"
																},
																{
																	"type": "literal",
																	"value": "unique"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															37956,
															37957
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 37958,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37970,
											"name": "RelationshipMetadata",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37959,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37947,
										37948,
										37949,
										37950,
										37954,
										37958,
										37959
									]
								}
							]
						}
					}
				},
				{
					"id": 37960,
					"name": "PropertyType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 37966,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37961,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37962,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37966,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 37963,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 37964,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37965,
													"name": "fieldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 37945,
												"name": "PropertyMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37962
									]
								},
								{
									"title": "Methods",
									"children": [
										37963
									]
								}
							]
						}
					}
				},
				{
					"id": 37967,
					"name": "RelationshipOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options accepted by all the relationships"
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 37968,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37969,
											"name": "mappedBy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
													},
													{
														"kind": "code",
														"text": "`belongsTo`"
													},
													{
														"kind": "text",
														"text": "\nrelationship method."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37969
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 37970,
					"name": "RelationshipMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the relationship parse\nmethod"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37971,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37972,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37973,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37944,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37974,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 37975,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37976,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37977,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37972,
										37973,
										37974,
										37975,
										37976,
										37977
									]
								}
							]
						}
					}
				},
				{
					"id": 37978,
					"name": "RelationshipType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 37985,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37979,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37980,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37985,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 37981,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37944,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37982,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 37983,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37984,
													"name": "relationshipName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 37970,
												"name": "RelationshipMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37980,
										37981
									]
								},
								{
									"title": "Methods",
									"children": [
										37982
									]
								}
							]
						}
					}
				},
				{
					"id": 37986,
					"name": "EntityConstructor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
							}
						]
					},
					"children": [
						{
							"id": 37988,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 37989,
									"name": "new EntityConstructor",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37987,
										"name": "Props",
										"package": "@medusajs/types",
										"qualifiedName": "EntityConstructor.Props",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								37988
							]
						}
					],
					"typeParameters": [
						{
							"id": 37987,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Function"
							},
							"name": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 37990,
					"name": "InferForeignKeys",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "From a IDmlEntity, infer the foreign keys name and type for\n\"belongsTo\" relation meaning \"hasOne\" and \"ManyToOne\""
							}
						]
					},
					"typeParameters": [
						{
							"id": 37995,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 37995,
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 37995,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 37991,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37992,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37992
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 37944,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "string"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"nameType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 37995,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 37993,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37994,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37994
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 37944,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"_id"
										]
									]
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 37996,
					"name": "InferBelongsToFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a belongsTo relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38001,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38001,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 37997,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 37998,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 37938,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 38010,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferSchemaFields",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38001,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 37999,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 38000,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 37938,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "R"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "IDmlEntity",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								}
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 38010,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferSchemaFields",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 38002,
					"name": "InferHasOneFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a hasOne relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38003,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 37996,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38003,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferBelongsToFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38004,
					"name": "InferHasManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for hasMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38007,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38007,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 38005,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 38006,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 37938,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 38010,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "R"
										},
										"name": "R",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferSchemaFields",
								"package": "@medusajs/types"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 38008,
					"name": "InferManyToManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for manyToMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38009,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 38004,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38009,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferHasManyFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38010,
					"name": "InferSchemaFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inferring the types of the schema fields from the DML\nentity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38011,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 34492,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 38011,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38011,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 37978,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "type"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 38011,
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "literal",
											"value": "belongsTo"
										},
										"trueType": {
											"type": "reference",
											"target": 37996,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "$dataType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 38011,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "InferBelongsToFields",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "type"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 38011,
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "literal",
												"value": "hasOne"
											},
											"trueType": {
												"type": "reference",
												"target": 38002,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "$dataType"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 38011,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												],
												"name": "InferHasOneFields",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "type"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 38011,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												"extendsType": {
													"type": "literal",
													"value": "hasMany"
												},
												"trueType": {
													"type": "reference",
													"target": 38004,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "$dataType"
															},
															"objectType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 38011,
																	"name": "Schema",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"name": "InferHasManyFields",
													"package": "@medusajs/types"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "type"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 38011,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													},
													"extendsType": {
														"type": "literal",
														"value": "manyToMany"
													},
													"trueType": {
														"type": "reference",
														"target": 38008,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "$dataType"
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 38011,
																		"name": "Schema",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"name": "InferManyToManyFields",
														"package": "@medusajs/types"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "$dataType"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 38011,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									}
								}
							}
						],
						"name": "Prettify",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38012,
					"name": "Infer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the schema type of a DmlEntity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38013,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38013,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 37938,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "Schema"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 37986,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38010,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferSchemaFields",
									"package": "@medusajs/types"
								}
							],
							"name": "EntityConstructor",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 38014,
					"name": "ExtractEntityRelations",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts names of relationships from a schema"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38017,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 38018,
							"name": "OfType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37944,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "intersection",
								"types": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 38017,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"objectType": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intersection",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 38017,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38017,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 37978,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 38017,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 38015,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38016,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 38018,
															"name": "OfType",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38016
														]
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				},
				{
					"id": 38019,
					"name": "EntityCascades",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actions to cascade from a given entity to its\nrelationship."
							}
						]
					},
					"typeParameters": [
						{
							"id": 38022,
							"name": "Relationships",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38020,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38021,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The related models to delete when a record of this data model\nis deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 38022,
										"name": "Relationships",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38021
									]
								}
							]
						}
					}
				},
				{
					"id": 38023,
					"name": "InferTypeOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the instance type of a IDmlEntity once converted as an Entity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38024,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37938,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "InstanceType"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 38012,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38024,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Infer",
								"package": "@medusajs/types"
							}
						],
						"name": "InstanceType",
						"package": "typescript"
					}
				},
				{
					"id": 38025,
					"name": "InferEntityType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used in the module sdk internal service to infer propert entity typings from DML"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38026,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38026,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 37938,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 38023,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38026,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferTypeOf",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 38026,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 38027,
					"name": "InferIndexableProperties",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38030,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38030,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": 37938,
								"typeArguments": [
									{
										"type": "inferred",
										"name": "Schema"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "intrinsic",
											"name": "string"
										},
										"nameType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reflection",
												"declaration": {
													"id": 38028,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38029,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "inferred",
																"name": "Type"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38029
															]
														}
													]
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Type"
													},
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "reference",
													"target": 37944,
													"name": "RelationshipTypes",
													"package": "@medusajs/types"
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"falseType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									{
										"type": "reference",
										"target": 37990,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferForeignKeys",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 38031,
					"name": "EntityIndex",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38037,
							"name": "TSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38038,
							"name": "TWhere",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38032,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38033,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the index. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38034,
									"name": "unique",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When enabled, a unique index is created on the specified\nproperties."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 38035,
									"name": "on",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of properties to create the index on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38027,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37938,
													"typeArguments": [
														{
															"type": "reference",
															"target": 38037,
															"name": "TSchema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "IDmlEntity",
													"package": "@medusajs/types"
												}
											],
											"name": "InferIndexableProperties",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 38036,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Conditions to restrict which records are indexed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 38038,
										"name": "TWhere",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38033,
										38034,
										38035,
										38036
									]
								}
							]
						}
					}
				},
				{
					"id": 38039,
					"name": "SimpleQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 38040,
					"name": "NeQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38041,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38042,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38039,
										"name": "SimpleQueryValue",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38042
									]
								}
							]
						}
					}
				},
				{
					"id": 38043,
					"name": "QueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 38039,
								"name": "SimpleQueryValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 38040,
								"name": "NeQueryValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38044,
					"name": "QueryCondition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38045,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 37927,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "schema"
								},
								"objectType": {
									"type": "reference",
									"target": 37938,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38045,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "IDmlEntity",
									"package": "@medusajs/types"
								}
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 38045,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "reference",
								"target": 38043,
								"name": "QueryValue",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "reference",
								"target": 38044,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38045,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryCondition",
								"package": "@medusajs/types"
							}
						},
						"optionalModifier": "+"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37938,
						37986
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37927,
						37928,
						37932,
						37943,
						37944,
						37945,
						37960,
						37967,
						37970,
						37978,
						37990,
						37996,
						38002,
						38004,
						38008,
						38010,
						38012,
						38014,
						38019,
						38023,
						38025,
						38027,
						38031,
						38039,
						38040,
						38043,
						38044
					]
				}
			]
		},
		{
			"id": 34887,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34888,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34892,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34889,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 34890,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34891,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34903,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34892,
														"name": "TData",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Event",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 34893,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34894,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34895,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34895
									]
								}
							]
						}
					}
				},
				{
					"id": 34896,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34897,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34898,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34899,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34888,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34898,
										34899
									]
								}
							]
						}
					}
				},
				{
					"id": 34900,
					"name": "EventMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34901,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34902,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34902
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34903,
					"name": "Event",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34908,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34904,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34905,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34906,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34900,
										"name": "EventMetadata",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34907,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34908,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34905,
										34906,
										34907
									]
								}
							]
						}
					}
				},
				{
					"id": 34909,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34912,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 34903,
								"typeArguments": [
									{
										"type": "reference",
										"target": 34912,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34910,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34911,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34911
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34913,
					"name": "RawMessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34922,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34914,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34915,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34916,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34922,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 34917,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34918,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34919,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34920,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "eventGroupId"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								},
								{
									"id": 34921,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34915,
										34916,
										34917,
										34918,
										34919,
										34920,
										34921
									]
								}
							]
						}
					}
				},
				{
					"id": 34938,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34939,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34940,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 34941,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 34942,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 34909,
														"typeArguments": [
															{
																"type": "reference",
																"target": 34941,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34909,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 34941,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 34943,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34944,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34945,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34946,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 34947,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34888,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34948,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34893,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 34949,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34950,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34951,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 34952,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34888,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34953,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34893,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 34954,
							"name": "releaseGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34955,
									"name": "releaseGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34956,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34957,
							"name": "clearGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34958,
									"name": "clearGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34959,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34939,
								34944,
								34949,
								34954,
								34957
							]
						}
					]
				},
				{
					"id": 34923,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34924,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34925,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34926,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 34927,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34888,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34928,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34893,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 34929,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34930,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34931,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 34932,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34888,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34933,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34893,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 34934,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34935,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 34936,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 34937,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 34909,
														"typeArguments": [
															{
																"type": "reference",
																"target": 34936,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34909,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 34936,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34924,
								34929,
								34934
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37689,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34938,
						34923
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34888,
						34893,
						34896,
						34900,
						34903,
						34909,
						34913
					]
				}
			]
		},
		{
			"id": 34960,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34961,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34962,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34963,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34964,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34965,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 34966,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34967,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34968,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34969,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34962,
								34966
							]
						}
					]
				},
				{
					"id": 34969,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 34970,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 34971,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 34972,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											34971,
											34972
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 34973,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34974,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34975,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34976,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34977,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34978,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34975,
										34976,
										34977,
										34978
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34961
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34969,
						34973
					]
				}
			]
		},
		{
			"id": 38164,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 38165,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38166,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38165,
						38166
					]
				}
			]
		},
		{
			"id": 38167,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 38168,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 38169,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 38170,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38171,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38168,
						38169,
						38170,
						38171
					]
				}
			]
		},
		{
			"id": 38172,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 38173,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38174,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38173,
						38174
					]
				}
			]
		},
		{
			"id": 38175,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 38176,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38176
					]
				}
			]
		},
		{
			"id": 38177,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 38178,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38179,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38180,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38178,
						38179,
						38180
					]
				}
			]
		},
		{
			"id": 34979,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34980,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 34981,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34982,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34981,
								34982
							]
						}
					]
				},
				{
					"id": 34983,
					"name": "FilterableFileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 34984,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file ID to filter by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34984
							]
						}
					]
				},
				{
					"id": 34985,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 34986,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34987,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34988,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34989,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34986,
								34987,
								34988,
								34989
							]
						}
					]
				},
				{
					"id": 35033,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 35034,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35035,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35034,
								35035
							]
						}
					]
				},
				{
					"id": 35036,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 35037,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35037
							]
						}
					]
				},
				{
					"id": 35038,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 35039,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35039
							]
						}
					]
				},
				{
					"id": 35040,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 35041,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35042,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35043,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35044,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35041,
								35042,
								35043,
								35044
							]
						}
					]
				},
				{
					"id": 35045,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35046,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35047,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35048,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35040,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35033,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35049,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35050,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35051,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35038,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35052,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35053,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35054,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35036,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35046,
								35049,
								35052
							]
						}
					]
				},
				{
					"id": 35066,
					"name": "LocalFileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35067,
							"name": "upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35068,
							"name": "private_upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35069,
							"name": "backend_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35067,
								35068,
								35069
							]
						}
					]
				},
				{
					"id": 35055,
					"name": "S3FileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35056,
							"name": "file_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35057,
							"name": "access_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35058,
							"name": "secret_access_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35059,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35060,
							"name": "bucket",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35061,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35062,
							"name": "endpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35063,
							"name": "cache_control",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35064,
							"name": "download_file_duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35065,
							"name": "additional_client_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35056,
								35057,
								35058,
								35059,
								35060,
								35061,
								35062,
								35063,
								35064,
								35065
							]
						}
					]
				},
				{
					"id": 34990,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 34991,
							"name": "createFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34992,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.createFiles([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34993,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34985,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34994,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34980,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34995,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.createFiles({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34996,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34985,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34997,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34980,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34998,
							"name": "deleteFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34999,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35000,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 35001,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35002,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35003,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35004,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35005,
							"name": "retrieveFile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35006,
									"name": "retrieveFile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieveFile(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35007,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35008,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34980,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35009,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34980,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35010,
							"name": "listFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35011,
									"name": "listFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the list method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35012,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34983,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35013,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34980,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35014,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34980,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35015,
							"name": "listAndCountFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35016,
									"name": "listAndCountFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the listAndCount method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files and their count. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35017,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34983,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35018,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34980,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35019,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34980,
															"name": "FileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34991,
								34998,
								35005,
								35010,
								35015
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37279,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34980,
						34983,
						34985,
						35033,
						35036,
						35038,
						35040,
						35045,
						35066,
						35055,
						34990
					]
				}
			]
		},
		{
			"id": 38181,
			"name": "AddFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38182,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38183,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option-rule.ts",
										"qualifiedName": "CreateShippingOptionRuleDTO"
									},
									"name": "CreateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38183
							]
						}
					]
				}
			}
		},
		{
			"id": 38184,
			"name": "RemoveFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38185,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38186,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38186
							]
						}
					]
				}
			}
		},
		{
			"id": 38187,
			"name": "UpdateFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38188,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38189,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option-rule.ts",
										"qualifiedName": "UpdateShippingOptionRuleDTO"
									},
									"name": "UpdateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38189
							]
						}
					]
				}
			}
		},
		{
			"id": 38596,
			"name": "ClaimReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 38597,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 38598,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 38599,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 38600,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						38597,
						38598,
						38599,
						38600
					]
				}
			]
		},
		{
			"id": 38588,
			"name": "AdminClaimAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38589,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38590,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38591,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38592,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 38593,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reference",
											"target": 38596,
											"name": "ClaimReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 38594,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38595,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38591,
											38592,
											38593,
											38594,
											38595
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38589
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35160,
					"name": "AdminAddClaimItems"
				},
				{
					"type": "reference",
					"target": 35173,
					"name": "AdminAddClaimInboundItems"
				},
				{
					"type": "reference",
					"target": 35186,
					"name": "AdminAddClaimOutboundItems"
				}
			]
		},
		{
			"id": 38601,
			"name": "AdminClaimUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38602,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38603,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38604,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38605,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38602,
						38603,
						38604,
						38605
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35168,
					"name": "AdminUpdateClaimItem"
				},
				{
					"type": "reference",
					"target": 35181,
					"name": "AdminUpdateClaimInboundItem"
				},
				{
					"type": "reference",
					"target": 35194,
					"name": "AdminUpdateClaimOutboundItem"
				}
			]
		},
		{
			"id": 38606,
			"name": "AdminClaimAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38607,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38608,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38609,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38610,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38611,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38607,
						38608,
						38609,
						38610,
						38611
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35199,
					"name": "AdminClaimAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 35209,
					"name": "AdminClaimAddOutboundShipping"
				}
			]
		},
		{
			"id": 38612,
			"name": "AdminClaimUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38613,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38614,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38615,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38613,
						38614,
						38615
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35205,
					"name": "AdminClaimUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 35215,
					"name": "AdminClaimUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 38577,
			"name": "BaseClaimItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38578,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38579,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38580,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38581,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38582,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38583,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38584,
					"name": "raw_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38482,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38585,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38586,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38587,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38578,
						38579,
						38580,
						38581,
						38582,
						38583,
						38584,
						38585,
						38586,
						38587
					]
				}
			]
		},
		{
			"id": 38569,
			"name": "BaseClaim",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38570,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38571,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38577,
							"name": "BaseClaimItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38572,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 38573,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
							"qualifiedName": "ReturnDTO"
						},
						"name": "ReturnDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38574,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38575,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38576,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38570,
						38571,
						38572,
						38573,
						38574,
						38575,
						38576
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrder"
							},
							"name": "BaseOrder",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "status"
								},
								{
									"type": "literal",
									"value": "version"
								},
								{
									"type": "literal",
									"value": "items"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35146,
					"name": "AdminClaim"
				}
			]
		},
		{
			"id": 38616,
			"name": "BaseClaimListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38617,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38618,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38619,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38620,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38621,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38622,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38623,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38627,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38624,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38625,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38626,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38617,
						38618,
						38619,
						38620,
						38621,
						38622,
						38623,
						38627,
						38624,
						38625,
						38626
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35222,
					"name": "AdminClaimListParams"
				}
			]
		},
		{
			"id": 38628,
			"name": "BaseCollection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38629,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38630,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38631,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38632,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38633,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38634,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38635,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
								"qualifiedName": "AdminProduct"
							},
							"name": "AdminProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38636,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38629,
						38630,
						38631,
						38632,
						38633,
						38634,
						38635,
						38636
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35269,
					"name": "AdminCollection"
				}
			]
		},
		{
			"id": 38650,
			"name": "BaseCollectionParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38651,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35319,
						"name": "SelectParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38651
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35318,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35303,
					"name": "AdminCollectionParams"
				}
			]
		},
		{
			"id": 38637,
			"name": "BaseCollectionListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 38648,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 38637,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 34727,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38637,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 34728,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 38649,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 38637,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 34727,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38637,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 34729,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 38638,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38639,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38640,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38641,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38642,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38643,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38647,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38644,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38645,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38646,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38648,
						38649,
						38638,
						38639,
						38640,
						38641,
						38642,
						38643,
						38647,
						38644,
						38645,
						38646
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 34727,
					"typeArguments": [
						{
							"type": "reference",
							"target": 38637,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35289,
					"name": "AdminCollectionListParams"
				}
			]
		},
		{
			"id": 38652,
			"name": "BaseCustomerGroup",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38653,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38654,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38655,
					"name": "customers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/customer/common.ts",
								"qualifiedName": "BaseCustomer"
							},
							"name": "BaseCustomer",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38656,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38657,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38658,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38653,
						38654,
						38655,
						38656,
						38657,
						38658
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35359,
					"name": "AdminCustomerGroup"
				}
			]
		},
		{
			"id": 38684,
			"name": "ExchangeReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 38685,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 38686,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 38687,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 38688,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						38685,
						38686,
						38687,
						38688
					]
				}
			]
		},
		{
			"id": 38676,
			"name": "AdminExchangeAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38677,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38678,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38679,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38680,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 38681,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reference",
											"target": 38684,
											"name": "ExchangeReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 38682,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38683,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38679,
											38680,
											38681,
											38682,
											38683
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38677
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35420,
					"name": "AdminAddExchangeItems"
				},
				{
					"type": "reference",
					"target": 35433,
					"name": "AdminAddExchangeInboundItems"
				},
				{
					"type": "reference",
					"target": 35446,
					"name": "AdminAddExchangeOutboundItems"
				}
			]
		},
		{
			"id": 38689,
			"name": "AdminExchangeUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38690,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38691,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38692,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38693,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38690,
						38691,
						38692,
						38693
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35428,
					"name": "AdminUpdateExchangeItem"
				},
				{
					"type": "reference",
					"target": 35441,
					"name": "AdminUpdateExchangeInboundItem"
				},
				{
					"type": "reference",
					"target": 35454,
					"name": "AdminUpdateExchangeOutboundItem"
				}
			]
		},
		{
			"id": 38694,
			"name": "AdminExchangeAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38695,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38696,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38697,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38698,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38699,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38695,
						38696,
						38697,
						38698,
						38699
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35459,
					"name": "AdminExchangeAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 35469,
					"name": "AdminExchangeAddOutboundShipping"
				}
			]
		},
		{
			"id": 38700,
			"name": "AdminExchangeUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38701,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38702,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38703,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38701,
						38702,
						38703
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35465,
					"name": "AdminExchangeUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 35475,
					"name": "AdminExchangeUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 38667,
			"name": "BaseExchangeItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38668,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38669,
					"name": "exchange_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38670,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38671,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38672,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38673,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38674,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38675,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38668,
						38669,
						38670,
						38671,
						38672,
						38673,
						38674,
						38675
					]
				}
			]
		},
		{
			"id": 38659,
			"name": "BaseExchange",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38660,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38661,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36123,
							"name": "AdminReturnItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38662,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38667,
							"name": "BaseExchangeItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38663,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38664,
					"name": "difference_due",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38665,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 36133,
						"name": "AdminReturn",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38666,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38660,
						38661,
						38662,
						38663,
						38664,
						38665,
						38666
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrder"
							},
							"name": "BaseOrder",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "status"
								},
								{
									"type": "literal",
									"value": "version"
								},
								{
									"type": "literal",
									"value": "items"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35406,
					"name": "AdminExchange"
				}
			]
		},
		{
			"id": 38704,
			"name": "BaseExchangeListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38715,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38712,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38713,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38714,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				},
				{
					"id": 38705,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38706,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38707,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38708,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38709,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38710,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38711,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38715,
						38712,
						38713,
						38714,
						38705,
						38706,
						38707,
						38708,
						38709,
						38710,
						38711
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35483,
					"name": "AdminExchangeListParams"
				}
			]
		},
		{
			"id": 38716,
			"name": "BaseFile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38717,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38718,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38717,
						38718
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35526,
					"name": "AdminFile"
				},
				{
					"type": "reference",
					"target": 35535,
					"name": "StoreFile"
				}
			]
		},
		{
			"id": 38719,
			"name": "BaseUploadFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 38720,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38721,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 38722,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 38723,
																"name": "name",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 38724,
																"name": "content",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	38723,
																	38724
																]
															}
														]
													}
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
														"qualifiedName": "File"
													},
													"name": "File",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38721
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "FileList"
						},
						"name": "FileList",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 38725,
			"name": "BaseFulfillmentProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38726,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38727,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38726,
						38727
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35538,
					"name": "AdminFulfillmentProvider"
				}
			]
		},
		{
			"id": 38951,
			"name": "AdminUpsertGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38952,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38953,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38954,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38952,
						38953,
						38954
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38897,
					"name": "AdminUpsertFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 38901,
					"name": "AdminUpsertFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 38906,
					"name": "AdminUpsertFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 38912,
					"name": "AdminUpsertFulfillmentSetServiceZoneZip"
				},
				{
					"type": "reference",
					"target": 38955,
					"name": "AdminUpdateGeoZone"
				}
			]
		},
		{
			"id": 38897,
			"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38899,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38953,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 38900,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38954,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 38898,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 38952,
						"name": "AdminUpsertGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38899,
						38900,
						38898
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38951,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38901,
			"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38904,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38953,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 38905,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38954,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 38902,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 38952,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 38903,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38904,
						38905,
						38902,
						38903
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38951,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38906,
			"name": "AdminUpsertFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38910,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38953,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 38911,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38954,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 38907,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 38952,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 38908,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38909,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38910,
						38911,
						38907,
						38908,
						38909
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38951,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38912,
			"name": "AdminUpsertFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38917,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38953,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 38918,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38954,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 38913,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 38952,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 38914,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38915,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38916,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38917,
						38918,
						38913,
						38914,
						38915,
						38916
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38951,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38728,
			"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 38897,
						"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38901,
						"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38906,
						"name": "AdminUpsertFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38912,
						"name": "AdminUpsertFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 38955,
			"name": "AdminUpdateGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38957,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38952,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 38958,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38953,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 38959,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38954,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 38956,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38957,
						38958,
						38959,
						38956
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38951,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38919,
					"name": "AdminUpdateFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 38924,
					"name": "AdminUpdateFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 38930,
					"name": "AdminUpdateFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 38937,
					"name": "AdminUpdateFulfillmentSetServiceZoneZip"
				}
			]
		},
		{
			"id": 38919,
			"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38922,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38958,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 38923,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38959,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 38921,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38956,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 38920,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 38957,
						"name": "AdminUpdateGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38922,
						38923,
						38921,
						38920
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38955,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38924,
			"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38928,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38958,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 38929,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38959,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 38927,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38956,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 38925,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 38957,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 38926,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38928,
						38929,
						38927,
						38925,
						38926
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38955,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38930,
			"name": "AdminUpdateFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38935,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38958,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 38936,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38959,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 38934,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38956,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 38931,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 38957,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 38932,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38933,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38935,
						38936,
						38934,
						38931,
						38932,
						38933
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38955,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38937,
			"name": "AdminUpdateFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38943,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38958,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 38944,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38959,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 38942,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38956,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 38938,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 38957,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 38939,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38940,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38941,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38943,
						38944,
						38942,
						38938,
						38939,
						38940,
						38941
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38955,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38729,
			"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 38919,
						"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38924,
						"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38930,
						"name": "AdminUpdateFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 38937,
						"name": "AdminUpdateFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 35070,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35071,
					"name": "BaseAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35072,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35073,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35074,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35075,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35076,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35077,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35078,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35079,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35080,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35081,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35082,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35083,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35084,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35085,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35086,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35072,
								35073,
								35074,
								35075,
								35076,
								35077,
								35078,
								35079,
								35080,
								35081,
								35082,
								35083,
								35084,
								35085,
								35086
							]
						}
					]
				},
				{
					"id": 35087,
					"name": "AdminCreateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35088,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35089,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35090,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35091,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35092,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35093,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35094,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 35095,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35096,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 35097,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 35098,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35096,
														35097,
														35098
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35088,
								35089,
								35090,
								35091,
								35092,
								35093,
								35094
							]
						}
					]
				},
				{
					"id": 35099,
					"name": "AdminUpdateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35100,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35101,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35102,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35103,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35104,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35105,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35106,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 35107,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35108,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 35109,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 35110,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35108,
														35109,
														35110
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35100,
								35101,
								35102,
								35103,
								35104,
								35105,
								35106
							]
						}
					]
				},
				{
					"id": 35111,
					"name": "AdminGetCampaignsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35112,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35113,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35114,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 35115,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35116,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35116
											]
										}
									]
								}
							}
						},
						{
							"id": 35117,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35111,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35118,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35111,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35122,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35119,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35120,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35121,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35112,
								35113,
								35114,
								35117,
								35118,
								35122,
								35119,
								35120,
								35121
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35111,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35123,
					"name": "AdminGetCampaignParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35124,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35124
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35125,
					"name": "AdminCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35126,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35127,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35128,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35129,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35130,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35131,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35132,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35133,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 35134,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35135,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35136,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
													"qualifiedName": "CampaignBudgetTypeValues"
												},
												"name": "CampaignBudgetTypeValues",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35137,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35138,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 35139,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35135,
												35136,
												35137,
												35138,
												35139
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35126,
								35127,
								35128,
								35129,
								35130,
								35131,
								35132,
								35133
							]
						}
					]
				},
				{
					"id": 35140,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35141,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35142,
											"name": "campaigns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35125,
													"name": "AdminCampaign",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35142
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35143,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35144,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35125,
								"name": "AdminCampaign",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35144
							]
						}
					]
				},
				{
					"id": 35145,
					"name": "AdminCampaignDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "campaign"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35146,
					"name": "AdminClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35147,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38570,
								"name": "BaseClaim.order_id"
							}
						},
						{
							"id": 35148,
							"name": "claim_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38577,
									"name": "BaseClaimItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38571,
								"name": "BaseClaim.claim_items"
							}
						},
						{
							"id": 35149,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38572,
								"name": "BaseClaim.additional_items"
							}
						},
						{
							"id": 35150,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "ReturnDTO"
								},
								"name": "ReturnDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38573,
								"name": "BaseClaim.return"
							}
						},
						{
							"id": 35151,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38574,
								"name": "BaseClaim.return_id"
							}
						},
						{
							"id": 35152,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38575,
								"name": "BaseClaim.no_notification"
							}
						},
						{
							"id": 35153,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38576,
								"name": "BaseClaim.refund_amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35147,
								35148,
								35149,
								35150,
								35151,
								35152,
								35153
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38569,
							"name": "BaseClaim",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35154,
					"name": "AdminCreateClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35155,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "replace"
									},
									{
										"type": "literal",
										"value": "refund"
									}
								]
							}
						},
						{
							"id": 35156,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35157,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35158,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35159,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35155,
								35156,
								35157,
								35158,
								35159
							]
						}
					]
				},
				{
					"id": 35160,
					"name": "AdminAddClaimItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35161,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35162,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35163,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35164,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35165,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38596,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35166,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35167,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35163,
													35164,
													35165,
													35166,
													35167
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38589,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35161
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38588,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35168,
					"name": "AdminUpdateClaimItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35169,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38602,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 35170,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38603,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 35171,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38604,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 35172,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38605,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35169,
								35170,
								35171,
								35172
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38601,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35173,
					"name": "AdminAddClaimInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35174,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35175,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35176,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35177,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35178,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38596,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35179,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35180,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35176,
													35177,
													35178,
													35179,
													35180
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38589,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35174
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38588,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35181,
					"name": "AdminUpdateClaimInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35182,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38602,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 35183,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38603,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 35184,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38604,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 35185,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38605,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35182,
								35183,
								35184,
								35185
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38601,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35186,
					"name": "AdminAddClaimOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35187,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35188,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35189,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35190,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35191,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38596,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35192,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35193,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35189,
													35190,
													35191,
													35192,
													35193
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38589,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35187
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38588,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35194,
					"name": "AdminUpdateClaimOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35195,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38602,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 35196,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38603,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 35197,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38604,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 35198,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38605,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35195,
								35196,
								35197,
								35198
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38601,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35199,
					"name": "AdminClaimAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35200,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38607,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 35201,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38608,
								"name": "AdminClaimAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 35202,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38609,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 35203,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38610,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 35204,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38611,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35200,
								35201,
								35202,
								35203,
								35204
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38606,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35205,
					"name": "AdminClaimUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35206,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38613,
								"name": "AdminClaimUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 35207,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38614,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 35208,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38615,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35206,
								35207,
								35208
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38612,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35209,
					"name": "AdminClaimAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35210,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38607,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 35211,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38608,
								"name": "AdminClaimAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 35212,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38609,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 35213,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38610,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 35214,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38611,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35210,
								35211,
								35212,
								35213,
								35214
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38606,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35215,
					"name": "AdminClaimUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35216,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38613,
								"name": "AdminClaimUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 35217,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38614,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 35218,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38615,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35216,
								35217,
								35218
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38612,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35219,
					"name": "AdminRequestClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 35220,
					"name": "AdminCancelClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35221,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35221
							]
						}
					]
				},
				{
					"id": 35222,
					"name": "AdminClaimListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35234,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35222,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35222,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35235,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35222,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35222,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35223,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 38623,
								"name": "BaseClaimListParams.deleted_at"
							}
						},
						{
							"id": 35224,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38617,
								"name": "BaseClaimListParams.q"
							}
						},
						{
							"id": 35225,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38618,
								"name": "BaseClaimListParams.id"
							}
						},
						{
							"id": 35226,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38619,
								"name": "BaseClaimListParams.order_id"
							}
						},
						{
							"id": 35227,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38620,
								"name": "BaseClaimListParams.status"
							}
						},
						{
							"id": 35228,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38621,
								"name": "BaseClaimListParams.created_at"
							}
						},
						{
							"id": 35229,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38622,
								"name": "BaseClaimListParams.updated_at"
							}
						},
						{
							"id": 35233,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38627,
								"name": "BaseClaimListParams.fields"
							}
						},
						{
							"id": 35230,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38624,
								"name": "BaseClaimListParams.limit"
							}
						},
						{
							"id": 35231,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38625,
								"name": "BaseClaimListParams.offset"
							}
						},
						{
							"id": 35232,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38626,
								"name": "BaseClaimListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35234,
								35235,
								35223,
								35224,
								35225,
								35226,
								35227,
								35228,
								35229,
								35233,
								35230,
								35231,
								35232
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38616,
							"name": "BaseClaimListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35222,
									"name": "AdminClaimListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35236,
					"name": "AdminClaimParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35237,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35238,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35239,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35240,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35241,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35242,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35237,
								35238,
								35239,
								35240,
								35241,
								35242
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35243,
					"name": "AdminClaimResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35244,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35146,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35244
							]
						}
					]
				},
				{
					"id": 35245,
					"name": "AdminClaimListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35251,
							"name": "claims",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35146,
									"name": "AdminClaim",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.claims"
							}
						},
						{
							"id": 35248,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35249,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35250,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35251,
								35248,
								35249,
								35250
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35246,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35247,
												"name": "claims",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35146,
														"name": "AdminClaim",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35247
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35252,
					"name": "AdminClaimOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35253,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35254,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35146,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35253,
								35254
							]
						}
					]
				},
				{
					"id": 35255,
					"name": "AdminClaimPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35256,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35257,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35146,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35256,
								35257
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35261,
							"name": "AdminClaimRequestResponse"
						}
					]
				},
				{
					"id": 35258,
					"name": "AdminClaimReturnPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35259,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35260,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35259,
								35260
							]
						}
					]
				},
				{
					"id": 35261,
					"name": "AdminClaimRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35263,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35256,
								"name": "AdminClaimPreviewResponse.order_preview"
							}
						},
						{
							"id": 35264,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 35146,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35257,
								"name": "AdminClaimPreviewResponse.claim"
							}
						},
						{
							"id": 35262,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35263,
								35264,
								35262
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35255,
							"name": "AdminClaimPreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35265,
					"name": "AdminClaimDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35266,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35267,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "claim"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35268,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35266,
								35267,
								35268
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "claim"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35269,
					"name": "AdminCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35270,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38629,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 35271,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38630,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 35272,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38631,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 35273,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38632,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 35274,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38633,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 35275,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38634,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 35276,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38635,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 35277,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38636,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35270,
								35271,
								35272,
								35273,
								35274,
								35275,
								35276,
								35277
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38628,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35278,
					"name": "AdminCreateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35279,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35280,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35281,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35279,
								35280,
								35281
							]
						}
					]
				},
				{
					"id": 35282,
					"name": "AdminUpdateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35283,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35284,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35285,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35283,
								35284,
								35285
							]
						}
					]
				},
				{
					"id": 35286,
					"name": "AdminUpdateCollectionProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35287,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 35288,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35287,
								35288
							]
						}
					]
				},
				{
					"id": 35289,
					"name": "AdminCollectionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35301,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38637,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38637,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38648,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 35302,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38637,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38637,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38649,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 35290,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35291,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38638,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 35292,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 35293,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38640,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 35294,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 35295,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 35296,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 35300,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38647,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 35297,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 35298,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38645,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 35299,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38646,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35301,
								35302,
								35290,
								35291,
								35292,
								35293,
								35294,
								35295,
								35296,
								35300,
								35297,
								35298,
								35299
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38637,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35303,
					"name": "AdminCollectionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35304,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38651,
								"name": "BaseCollectionParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35304
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38650,
							"name": "BaseCollectionParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35305,
					"name": "AdminCollectionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35306,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35269,
								"name": "AdminCollection",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35306
							]
						}
					]
				},
				{
					"id": 35307,
					"name": "AdminCollectionListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35313,
							"name": "collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35269,
									"name": "AdminCollection",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.collections"
							}
						},
						{
							"id": 35310,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35311,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35312,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35313,
								35310,
								35311,
								35312
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35308,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35309,
												"name": "collections",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35269,
														"name": "AdminCollection",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35309
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35314,
					"name": "AdminCollectionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35315,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35316,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35317,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35315,
								35316,
								35317
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "collection"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35356,
					"name": "AdditionalData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the additional_data property accepted in HTTP\nrequests to allow arbitrary values"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35357,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35358,
									"name": "additional_data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35358
									]
								}
							]
						}
					}
				},
				{
					"id": 35318,
					"name": "SelectParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35319,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35319
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35123,
							"name": "AdminGetCampaignParams"
						},
						{
							"type": "reference",
							"target": 35236,
							"name": "AdminClaimParams"
						},
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams"
						},
						{
							"type": "reference",
							"target": 35399,
							"name": "AdminGetCustomerGroupParams"
						},
						{
							"type": "reference",
							"target": 35497,
							"name": "AdminExchangeParams"
						},
						{
							"type": "reference",
							"target": 35791,
							"name": "AdminNotificationParams"
						},
						{
							"type": "reference",
							"target": 35899,
							"name": "AdminPriceListParams"
						},
						{
							"type": "reference",
							"target": 36022,
							"name": "AdminProductTagParams"
						},
						{
							"type": "reference",
							"target": 36063,
							"name": "AdminProductTypeParams"
						},
						{
							"type": "reference",
							"target": 36115,
							"name": "AdminReservationParams"
						},
						{
							"type": "reference",
							"target": 36267,
							"name": "AdminReturnReasonParams"
						},
						{
							"type": "reference",
							"target": 36612,
							"name": "AdminTaxRegionParams"
						},
						{
							"type": "reference",
							"target": 38650,
							"name": "BaseCollectionParams"
						},
						{
							"type": "reference",
							"target": 38766,
							"name": "BaseProductCategoryParams"
						}
					]
				},
				{
					"id": 35320,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35324,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 35321,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35322,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35323,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35324,
								35321,
								35322,
								35323
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35111,
							"name": "AdminGetCampaignsParams"
						},
						{
							"type": "reference",
							"target": 35384,
							"name": "AdminGetCustomerGroupsParams"
						},
						{
							"type": "reference",
							"target": 35541,
							"name": "AdminFulfillmentProviderListParams"
						},
						{
							"type": "reference",
							"target": 35668,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 35715,
							"name": "AdminInventoryLevelFilters"
						},
						{
							"type": "reference",
							"target": 35743,
							"name": "AdminGetInvitesParams"
						},
						{
							"type": "reference",
							"target": 35781,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 35886,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 36050,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 36211,
							"name": "AdminReturnFilters"
						},
						{
							"type": "reference",
							"target": 36375,
							"name": "AdminShippingOptionListParams"
						},
						{
							"type": "reference",
							"target": 36418,
							"name": "AdminShippingProfileListParams"
						},
						{
							"type": "reference",
							"target": 36475,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 36538,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 36596,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 36675,
							"name": "AdminGetWorkflowExecutionsParams"
						},
						{
							"type": "reference",
							"target": 38616,
							"name": "BaseClaimListParams"
						},
						{
							"type": "reference",
							"target": 38637,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 38704,
							"name": "BaseExchangeListParams"
						},
						{
							"type": "reference",
							"target": 38746,
							"name": "BaseProductCategoryListParams"
						},
						{
							"type": "reference",
							"target": 38777,
							"name": "BaseProductTagListParams"
						},
						{
							"type": "reference",
							"target": 38828,
							"name": "BaseReturnReasonListParams"
						}
					]
				},
				{
					"id": 35325,
					"name": "AdminBatchLink",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35326,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 35327,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35326,
								35327
							]
						}
					]
				},
				{
					"id": 35328,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35333,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35329,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35330,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35331,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 35333,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 35332,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35330,
										35331,
										35332
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 35265,
							"name": "AdminClaimDeleteResponse"
						},
						{
							"type": "reference",
							"target": 35314,
							"name": "AdminCollectionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 35522,
							"name": "AdminExchangeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 35601,
							"name": "AdminFulfillmentSetDeleteResponse"
						},
						{
							"type": "reference",
							"target": 35910,
							"name": "AdminPriceListDeleteResponse"
						},
						{
							"type": "reference",
							"target": 35992,
							"name": "AdminProductCategoryDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36033,
							"name": "AdminProductTagDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36074,
							"name": "AdminProductTypeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36278,
							"name": "AdminReturnReasonDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36397,
							"name": "AdminShippingOptionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36437,
							"name": "AdminShippingProfileDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36499,
							"name": "AdminStockLocationDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36560,
							"name": "AdminTaxRateDeleteResponse"
						},
						{
							"type": "reference",
							"target": 36619,
							"name": "AdminTaxRegionDeleteResponse"
						}
					]
				},
				{
					"id": 35334,
					"name": "DeleteResponseWithParent",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35337,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35338,
							"name": "TParent",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 35339,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 35328,
								"typeArguments": [
									{
										"type": "reference",
										"target": 35337,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "DeleteResponse",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 35335,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35336,
											"name": "parent",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parent resource of the item that was deleted, if applicable."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35338,
												"name": "TParent",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35336
											]
										}
									]
								}
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 35594,
							"name": "AdminServiceZoneDeleteResponse"
						}
					]
				},
				{
					"id": 35340,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35345,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35341,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35342,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 35343,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 35344,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35342,
												35343,
												35344
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 35345,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 35245,
							"name": "AdminClaimListResponse"
						},
						{
							"type": "reference",
							"target": 35307,
							"name": "AdminCollectionListResponse"
						},
						{
							"type": "reference",
							"target": 35550,
							"name": "AdminFulfillmentProviderListResponse"
						},
						{
							"type": "reference",
							"target": 35795,
							"name": "AdminNotificationListResponse"
						},
						{
							"type": "reference",
							"target": 35903,
							"name": "AdminPriceListListResponse"
						},
						{
							"type": "reference",
							"target": 35985,
							"name": "AdminProductCategoryListResponse"
						},
						{
							"type": "reference",
							"target": 36026,
							"name": "AdminProductTagListResponse"
						},
						{
							"type": "reference",
							"target": 36067,
							"name": "AdminProductTypeListResponse"
						},
						{
							"type": "reference",
							"target": 36271,
							"name": "AdminReturnReasonListResponse"
						},
						{
							"type": "reference",
							"target": 36492,
							"name": "AdminStockLocationListResponse"
						}
					]
				},
				{
					"id": 35346,
					"name": "BatchResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35355,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35347,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35348,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35355,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 35349,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35355,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 35350,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35351,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35352,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 35353,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 35354,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35352,
														35353,
														35354
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35348,
										35349,
										35350
									]
								}
							]
						}
					}
				},
				{
					"id": 35359,
					"name": "AdminCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35360,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38653,
								"name": "BaseCustomerGroup.id"
							}
						},
						{
							"id": 35361,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38654,
								"name": "BaseCustomerGroup.name"
							}
						},
						{
							"id": 35362,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/customer/common.ts",
										"qualifiedName": "BaseCustomer"
									},
									"name": "BaseCustomer",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38655,
								"name": "BaseCustomerGroup.customers"
							}
						},
						{
							"id": 35363,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38656,
								"name": "BaseCustomerGroup.metadata"
							}
						},
						{
							"id": 35364,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38657,
								"name": "BaseCustomerGroup.created_at"
							}
						},
						{
							"id": 35365,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38658,
								"name": "BaseCustomerGroup.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35360,
								35361,
								35362,
								35363,
								35364,
								35365
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38652,
							"name": "BaseCustomerGroup",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35366,
					"name": "AdminCreateCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35367,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35368,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35367,
								35368
							]
						}
					]
				},
				{
					"id": 35369,
					"name": "AdminUpdateCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35370,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35371,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35370,
								35371
							]
						}
					]
				},
				{
					"id": 35372,
					"name": "AdminCustomerInGroupFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35373,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35374,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35375,
							"name": "default_billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35376,
							"name": "default_shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35377,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35378,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35379,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35380,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35381,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35382,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35383,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35373,
								35374,
								35375,
								35376,
								35377,
								35378,
								35379,
								35380,
								35381,
								35382,
								35383
							]
						}
					]
				},
				{
					"id": 35384,
					"name": "AdminGetCustomerGroupsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35398,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35397,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35385,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35386,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35387,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35388,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35389,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35390,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 35372,
										"name": "AdminCustomerInGroupFilters",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35391,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35392,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35393,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35394,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35395,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35384,
									"name": "AdminGetCustomerGroupsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35396,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35384,
									"name": "AdminGetCustomerGroupsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35398,
								35397,
								35385,
								35386,
								35387,
								35388,
								35389,
								35390,
								35391,
								35392,
								35393,
								35394,
								35395,
								35396
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35384,
									"name": "AdminGetCustomerGroupsParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35399,
					"name": "AdminGetCustomerGroupParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35400,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35400
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35401,
					"name": "AdminCustomerGroupResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35402,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35359,
								"name": "AdminCustomerGroup",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35402
							]
						}
					]
				},
				{
					"id": 35403,
					"name": "AdminCustomerGroupListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35404,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35405,
											"name": "customer_groups",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35359,
													"name": "AdminCustomerGroup",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35405
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35406,
					"name": "AdminExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35407,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38660,
								"name": "BaseExchange.order_id"
							}
						},
						{
							"id": 35408,
							"name": "return_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36123,
									"name": "AdminReturnItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38661,
								"name": "BaseExchange.return_items"
							}
						},
						{
							"id": 35409,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38667,
									"name": "BaseExchangeItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38662,
								"name": "BaseExchange.additional_items"
							}
						},
						{
							"id": 35410,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38663,
								"name": "BaseExchange.no_notification"
							}
						},
						{
							"id": 35411,
							"name": "difference_due",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38664,
								"name": "BaseExchange.difference_due"
							}
						},
						{
							"id": 35412,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38665,
								"name": "BaseExchange.return"
							}
						},
						{
							"id": 35413,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38666,
								"name": "BaseExchange.return_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35407,
								35408,
								35409,
								35410,
								35411,
								35412,
								35413
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38659,
							"name": "BaseExchange",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35414,
					"name": "AdminCreateExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35415,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "replace"
									},
									{
										"type": "literal",
										"value": "refund"
									}
								]
							}
						},
						{
							"id": 35416,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35417,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35418,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35419,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35415,
								35416,
								35417,
								35418,
								35419
							]
						}
					]
				},
				{
					"id": 35420,
					"name": "AdminAddExchangeItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35421,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35422,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35423,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35424,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35425,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38684,
													"name": "ExchangeReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35426,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35427,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35423,
													35424,
													35425,
													35426,
													35427
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38677,
								"name": "AdminExchangeAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35421
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38676,
							"name": "AdminExchangeAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35428,
					"name": "AdminUpdateExchangeItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35429,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38690,
								"name": "AdminExchangeUpdateItem.quantity"
							}
						},
						{
							"id": 35430,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38691,
								"name": "AdminExchangeUpdateItem.reason_id"
							}
						},
						{
							"id": 35431,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38692,
								"name": "AdminExchangeUpdateItem.description"
							}
						},
						{
							"id": 35432,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38693,
								"name": "AdminExchangeUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35429,
								35430,
								35431,
								35432
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38689,
							"name": "AdminExchangeUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35433,
					"name": "AdminAddExchangeInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35434,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35435,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35436,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35437,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35438,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38684,
													"name": "ExchangeReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35439,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35440,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35436,
													35437,
													35438,
													35439,
													35440
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38677,
								"name": "AdminExchangeAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35434
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38676,
							"name": "AdminExchangeAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35441,
					"name": "AdminUpdateExchangeInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35442,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38690,
								"name": "AdminExchangeUpdateItem.quantity"
							}
						},
						{
							"id": 35443,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38691,
								"name": "AdminExchangeUpdateItem.reason_id"
							}
						},
						{
							"id": 35444,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38692,
								"name": "AdminExchangeUpdateItem.description"
							}
						},
						{
							"id": 35445,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38693,
								"name": "AdminExchangeUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35442,
								35443,
								35444,
								35445
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38689,
							"name": "AdminExchangeUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35446,
					"name": "AdminAddExchangeOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35447,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35448,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35449,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35450,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35451,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 38684,
													"name": "ExchangeReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 35452,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35453,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35449,
													35450,
													35451,
													35452,
													35453
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38677,
								"name": "AdminExchangeAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35447
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38676,
							"name": "AdminExchangeAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35454,
					"name": "AdminUpdateExchangeOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35455,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38690,
								"name": "AdminExchangeUpdateItem.quantity"
							}
						},
						{
							"id": 35456,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38691,
								"name": "AdminExchangeUpdateItem.reason_id"
							}
						},
						{
							"id": 35457,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38692,
								"name": "AdminExchangeUpdateItem.description"
							}
						},
						{
							"id": 35458,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38693,
								"name": "AdminExchangeUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35455,
								35456,
								35457,
								35458
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38689,
							"name": "AdminExchangeUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35459,
					"name": "AdminExchangeAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35460,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38695,
								"name": "AdminExchangeAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 35461,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38696,
								"name": "AdminExchangeAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 35462,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38697,
								"name": "AdminExchangeAddShippingMethod.description"
							}
						},
						{
							"id": 35463,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38698,
								"name": "AdminExchangeAddShippingMethod.internal_note"
							}
						},
						{
							"id": 35464,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38699,
								"name": "AdminExchangeAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35460,
								35461,
								35462,
								35463,
								35464
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38694,
							"name": "AdminExchangeAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35465,
					"name": "AdminExchangeUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35466,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38701,
								"name": "AdminExchangeUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 35467,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38702,
								"name": "AdminExchangeUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 35468,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38703,
								"name": "AdminExchangeUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35466,
								35467,
								35468
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38700,
							"name": "AdminExchangeUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35469,
					"name": "AdminExchangeAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35470,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38695,
								"name": "AdminExchangeAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 35471,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38696,
								"name": "AdminExchangeAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 35472,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38697,
								"name": "AdminExchangeAddShippingMethod.description"
							}
						},
						{
							"id": 35473,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38698,
								"name": "AdminExchangeAddShippingMethod.internal_note"
							}
						},
						{
							"id": 35474,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38699,
								"name": "AdminExchangeAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35470,
								35471,
								35472,
								35473,
								35474
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38694,
							"name": "AdminExchangeAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35475,
					"name": "AdminExchangeUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35476,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38701,
								"name": "AdminExchangeUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 35477,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38702,
								"name": "AdminExchangeUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 35478,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38703,
								"name": "AdminExchangeUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35476,
								35477,
								35478
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38700,
							"name": "AdminExchangeUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35479,
					"name": "AdminRequestExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35480,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35480
							]
						}
					]
				},
				{
					"id": 35481,
					"name": "AdminCancelExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35482,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35482
							]
						}
					]
				},
				{
					"id": 35483,
					"name": "AdminExchangeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35495,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35483,
											"name": "AdminExchangeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35483,
													"name": "AdminExchangeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35496,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35483,
											"name": "AdminExchangeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35483,
													"name": "AdminExchangeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35494,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38715,
								"name": "BaseExchangeListParams.fields"
							}
						},
						{
							"id": 35491,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38712,
								"name": "BaseExchangeListParams.limit"
							}
						},
						{
							"id": 35492,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38713,
								"name": "BaseExchangeListParams.offset"
							}
						},
						{
							"id": 35493,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38714,
								"name": "BaseExchangeListParams.order"
							}
						},
						{
							"id": 35484,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 38711,
								"name": "BaseExchangeListParams.deleted_at"
							}
						},
						{
							"id": 35485,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38705,
								"name": "BaseExchangeListParams.q"
							}
						},
						{
							"id": 35486,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38706,
								"name": "BaseExchangeListParams.id"
							}
						},
						{
							"id": 35487,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38707,
								"name": "BaseExchangeListParams.order_id"
							}
						},
						{
							"id": 35488,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38708,
								"name": "BaseExchangeListParams.status"
							}
						},
						{
							"id": 35489,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38709,
								"name": "BaseExchangeListParams.created_at"
							}
						},
						{
							"id": 35490,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38710,
								"name": "BaseExchangeListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35495,
								35496,
								35494,
								35491,
								35492,
								35493,
								35484,
								35485,
								35486,
								35487,
								35488,
								35489,
								35490
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38704,
							"name": "BaseExchangeListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35483,
									"name": "AdminExchangeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35497,
					"name": "AdminExchangeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35503,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 35498,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35499,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35500,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35501,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35502,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35503,
								35498,
								35499,
								35500,
								35501,
								35502
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35504,
					"name": "AdminExchangeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35505,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35406,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35505
							]
						}
					]
				},
				{
					"id": 35506,
					"name": "AdminExchangeListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35507,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35508,
											"name": "exchanges",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35406,
													"name": "AdminExchange",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35508
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35509,
					"name": "AdminExchangeOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35510,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35511,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35406,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35510,
								35511
							]
						}
					]
				},
				{
					"id": 35512,
					"name": "AdminExchangePreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35513,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35514,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35406,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35513,
								35514
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35515,
							"name": "AdminExchangeRequestResponse"
						}
					]
				},
				{
					"id": 35515,
					"name": "AdminExchangeRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35517,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35513,
								"name": "AdminExchangePreviewResponse.order_preview"
							}
						},
						{
							"id": 35518,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 35406,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35514,
								"name": "AdminExchangePreviewResponse.exchange"
							}
						},
						{
							"id": 35516,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35517,
								35518,
								35516
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35512,
							"name": "AdminExchangePreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35519,
					"name": "AdminExchangeReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35520,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35521,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35520,
								35521
							]
						}
					]
				},
				{
					"id": 35522,
					"name": "AdminExchangeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35523,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35524,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "exchange"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35525,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35523,
								35524,
								35525
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "exchange"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35526,
					"name": "AdminFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35527,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38717,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 35528,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38718,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35527,
								35528
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38716,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35529,
					"name": "AdminUploadFile",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38719,
						"name": "BaseUploadFile",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35530,
					"name": "AdminFileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35531,
							"name": "file",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35526,
								"name": "AdminFile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35531
							]
						}
					]
				},
				{
					"id": 35532,
					"name": "AdminFileListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35533,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35526,
									"name": "AdminFile",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35533
							]
						}
					]
				},
				{
					"id": 35534,
					"name": "AdminFileDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "file"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35535,
					"name": "StoreFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35536,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38717,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 35537,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38718,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35536,
								35537
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38716,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35538,
					"name": "AdminFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35539,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38726,
								"name": "BaseFulfillmentProvider.id"
							}
						},
						{
							"id": 35540,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38727,
								"name": "BaseFulfillmentProvider.is_enabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35539,
								35540
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38725,
							"name": "BaseFulfillmentProvider",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35541,
					"name": "AdminFulfillmentProviderListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35549,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35546,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35547,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35548,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35542,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35543,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35544,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35545,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35549,
								35546,
								35547,
								35548,
								35542,
								35543,
								35544,
								35545
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35550,
					"name": "AdminFulfillmentProviderListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35553,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35554,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35555,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 35556,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35538,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.fulfillment_providers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35553,
								35554,
								35555,
								35556
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35551,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35552,
												"name": "fulfillment_providers",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35538,
														"name": "AdminFulfillmentProvider",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35552
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35557,
					"name": "AdminGeoZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35558,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35559,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/geo-zone.ts",
									"qualifiedName": "GeoZoneType"
								},
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35560,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35561,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35562,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35563,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35564,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35565,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35566,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35558,
								35559,
								35560,
								35561,
								35562,
								35563,
								35564,
								35565,
								35566
							]
						}
					]
				},
				{
					"id": 35567,
					"name": "AdminServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35568,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35569,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35570,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35571,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35577,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35572,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35557,
									"name": "AdminGeoZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35573,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36306,
									"name": "AdminShippingOption",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35574,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35575,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35576,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35568,
								35569,
								35570,
								35571,
								35572,
								35573,
								35574,
								35575,
								35576
							]
						}
					]
				},
				{
					"id": 35577,
					"name": "AdminFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35578,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35579,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35580,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35581,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36451,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35582,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35567,
									"name": "AdminServiceZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35583,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35584,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35585,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35578,
								35579,
								35580,
								35581,
								35582,
								35583,
								35584,
								35585
							]
						}
					]
				},
				{
					"id": 35586,
					"name": "AdminCreateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35587,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35588,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38728,
									"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35587,
								35588
							]
						}
					]
				},
				{
					"id": 35589,
					"name": "AdminUpdateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35590,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35591,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38729,
									"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35590,
								35591
							]
						}
					]
				},
				{
					"id": 35592,
					"name": "AdminServiceZoneResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35593,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35567,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35593
							]
						}
					]
				},
				{
					"id": 35594,
					"name": "AdminServiceZoneDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35595,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.id"
							}
						},
						{
							"id": 35596,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "service_zone"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.object"
							}
						},
						{
							"id": 35597,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.deleted"
							}
						},
						{
							"id": 35598,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 35577,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35595,
								35596,
								35597,
								35598
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35334,
							"typeArguments": [
								{
									"type": "literal",
									"value": "service_zone"
								},
								{
									"type": "reference",
									"target": 35577,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							],
							"name": "DeleteResponseWithParent",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35599,
					"name": "AdminFulfillmentSetResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35600,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35577,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35600
							]
						}
					]
				},
				{
					"id": 35601,
					"name": "AdminFulfillmentSetDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35602,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35603,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "fulfillment_set"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35604,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35602,
								35603,
								35604
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "fulfillment_set"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35695,
					"name": "InventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35696,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35697,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35698,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35699,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35700,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35701,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35702,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35703,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35696,
								35697,
								35698,
								35699,
								35700,
								35701,
								35702,
								35703
							]
						}
					]
				},
				{
					"id": 35704,
					"name": "AdminUpdateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35705,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35706,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35705,
								35706
							]
						}
					]
				},
				{
					"id": 35707,
					"name": "AdminCreateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35708,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35709,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35710,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35708,
								35709,
								35710
							]
						}
					]
				},
				{
					"id": 35711,
					"name": "AdminBatchUpdateInventoryLevelLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35712,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 35713,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 35714,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35707,
									"name": "AdminCreateInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35712,
								35713,
								35714
							]
						}
					]
				},
				{
					"id": 35715,
					"name": "AdminInventoryLevelFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35720,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35717,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35718,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35719,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35716,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35720,
								35717,
								35718,
								35719,
								35716
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35721,
					"name": "AdminInventoryLevelResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35722,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35695,
								"name": "InventoryLevel",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35722
							]
						}
					]
				},
				{
					"id": 35723,
					"name": "AdminInventoryLevelListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35724,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35725,
											"name": "inventory_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35695,
													"name": "InventoryLevel",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35725
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35605,
					"name": "AdminInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35606,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35607,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35608,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35609,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35610,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35611,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35612,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35613,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35614,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35615,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35616,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35617,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35618,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35619,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35620,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35621,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35622,
									"name": "AdminInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35606,
								35607,
								35608,
								35609,
								35610,
								35611,
								35612,
								35613,
								35614,
								35615,
								35616,
								35617,
								35618,
								35619,
								35620,
								35621
							]
						}
					]
				},
				{
					"id": 35622,
					"name": "AdminInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35623,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35624,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35625,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35626,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35627,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35628,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35629,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35630,
							"name": "raw_stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35631,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35632,
							"name": "raw_reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35633,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35634,
							"name": "raw_incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35635,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35636,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 35605,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35637,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35623,
								35624,
								35625,
								35626,
								35627,
								35628,
								35629,
								35630,
								35631,
								35632,
								35633,
								35634,
								35635,
								35636,
								35637
							]
						}
					]
				},
				{
					"id": 35638,
					"name": "AdminCreateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35639,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35640,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35641,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35642,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35643,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35644,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35645,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35646,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35647,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35648,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35649,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35650,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35651,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35652,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35639,
								35640,
								35641,
								35642,
								35643,
								35644,
								35645,
								35646,
								35647,
								35648,
								35649,
								35650,
								35651,
								35652
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 35653,
							"name": "AdminUpdateInventoryItem"
						}
					]
				},
				{
					"id": 35653,
					"name": "AdminUpdateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35654,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35639,
								"name": "AdminCreateInventoryItem.sku"
							}
						},
						{
							"id": 35655,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35640,
								"name": "AdminCreateInventoryItem.hs_code"
							}
						},
						{
							"id": 35656,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35641,
								"name": "AdminCreateInventoryItem.weight"
							}
						},
						{
							"id": 35657,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35642,
								"name": "AdminCreateInventoryItem.length"
							}
						},
						{
							"id": 35658,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35643,
								"name": "AdminCreateInventoryItem.height"
							}
						},
						{
							"id": 35659,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35644,
								"name": "AdminCreateInventoryItem.width"
							}
						},
						{
							"id": 35660,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35645,
								"name": "AdminCreateInventoryItem.origin_country"
							}
						},
						{
							"id": 35661,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35646,
								"name": "AdminCreateInventoryItem.mid_code"
							}
						},
						{
							"id": 35662,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35647,
								"name": "AdminCreateInventoryItem.material"
							}
						},
						{
							"id": 35663,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35648,
								"name": "AdminCreateInventoryItem.title"
							}
						},
						{
							"id": 35664,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35649,
								"name": "AdminCreateInventoryItem.description"
							}
						},
						{
							"id": 35665,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35650,
								"name": "AdminCreateInventoryItem.requires_shipping"
							}
						},
						{
							"id": 35666,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35651,
								"name": "AdminCreateInventoryItem.thumbnail"
							}
						},
						{
							"id": 35667,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35652,
								"name": "AdminCreateInventoryItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35654,
								35655,
								35656,
								35657,
								35658,
								35659,
								35660,
								35661,
								35662,
								35663,
								35664,
								35665,
								35666,
								35667
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35638,
							"name": "AdminCreateInventoryItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35668,
					"name": "AdminInventoryItemParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35686,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35668,
											"name": "AdminInventoryItemParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35668,
													"name": "AdminInventoryItemParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35687,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35668,
											"name": "AdminInventoryItemParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35668,
													"name": "AdminInventoryItemParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35685,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35682,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35683,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35684,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35669,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35670,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35671,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35672,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35673,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35674,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35675,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35676,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35677,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35678,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35679,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35680,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35681,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "location_id"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35686,
								35687,
								35685,
								35682,
								35683,
								35684,
								35669,
								35670,
								35671,
								35672,
								35673,
								35674,
								35675,
								35676,
								35677,
								35678,
								35679,
								35680,
								35681
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35668,
									"name": "AdminInventoryItemParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35688,
					"name": "AdminInventoryItemResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35689,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35605,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35689
							]
						}
					]
				},
				{
					"id": 35690,
					"name": "AdminInventoryItemListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35691,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35692,
											"name": "inventory_items",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35605,
													"name": "AdminInventoryItem",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35692
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35693,
					"name": "AdminInventoryItemDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory_item"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35694,
					"name": "AdminInventoryLevelDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35334,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory-level"
							},
							{
								"type": "reference",
								"target": 35605,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						],
						"name": "DeleteResponseWithParent",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35726,
					"name": "AdminInvite",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35727,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35728,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35729,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35730,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35731,
							"name": "expires_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35732,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35733,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35734,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35727,
								35728,
								35729,
								35730,
								35731,
								35732,
								35733,
								35734
							]
						}
					]
				},
				{
					"id": 35735,
					"name": "AdminAcceptInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35736,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35737,
									"name": "first_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35738,
									"name": "last_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35737,
										35738
									]
								}
							]
						}
					}
				},
				{
					"id": 35739,
					"name": "AdminCreateInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35740,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35741,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35742,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35741,
										35742
									]
								}
							]
						}
					}
				},
				{
					"id": 35743,
					"name": "AdminGetInvitesParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35754,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35743,
											"name": "AdminGetInvitesParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35743,
													"name": "AdminGetInvitesParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35755,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35743,
											"name": "AdminGetInvitesParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35743,
													"name": "AdminGetInvitesParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35753,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35750,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35751,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35752,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35744,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35745,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35746,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35747,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35748,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35749,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35754,
								35755,
								35753,
								35750,
								35751,
								35752,
								35744,
								35745,
								35746,
								35747,
								35748,
								35749
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35743,
									"name": "AdminGetInvitesParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35756,
					"name": "AdminInviteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35757,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35726,
								"name": "AdminInvite",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35757
							]
						}
					]
				},
				{
					"id": 35758,
					"name": "AdminInviteListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35759,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35760,
											"name": "invites",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35726,
													"name": "AdminInvite",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35760
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35761,
					"name": "AdminAcceptInviteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35762,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35763,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/entities.ts",
													"qualifiedName": "AdminUser"
												},
												"name": "AdminUser",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35763
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 35764,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35765,
											"name": "message",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35765
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 35766,
					"name": "AdminInviteDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "invite"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35767,
					"name": "AdminNotification",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35768,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35769,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35770,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35771,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35772,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35773,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35774,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35775,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35776,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35777,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35778,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35779,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35780,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35768,
								35769,
								35770,
								35771,
								35772,
								35773,
								35774,
								35775,
								35776,
								35777,
								35778,
								35779,
								35780
							]
						}
					]
				},
				{
					"id": 35781,
					"name": "AdminNotificationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35785,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35781,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35781,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35786,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35781,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35781,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35790,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35787,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35788,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35789,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35782,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35783,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35784,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35785,
								35786,
								35790,
								35787,
								35788,
								35789,
								35782,
								35783,
								35784
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35781,
									"name": "AdminNotificationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35791,
					"name": "AdminNotificationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35792,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35792
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35793,
					"name": "AdminNotificationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35794,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35767,
								"name": "AdminNotification",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35794
							]
						}
					]
				},
				{
					"id": 35795,
					"name": "AdminNotificationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35798,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35799,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35800,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 35801,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35767,
									"name": "AdminNotification",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.notifications"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35798,
								35799,
								35800,
								35801
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35796,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35797,
												"name": "notifications",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35767,
														"name": "AdminNotification",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35797
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35807,
					"name": "AdminInitiateOrderEditRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35808,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35809,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35810,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35811,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35808,
								35809,
								35810,
								35811
							]
						}
					]
				},
				{
					"id": 35812,
					"name": "AdminAddOrderEditItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35813,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 35814,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35815,
												"name": "variant_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35816,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35817,
												"name": "unit_price",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 35818,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 35819,
												"name": "allow_backorder",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											},
											{
												"id": 35820,
												"name": "metadata",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35815,
													35816,
													35817,
													35818,
													35819,
													35820
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35813
							]
						}
					]
				},
				{
					"id": 35821,
					"name": "AdminUpdateOrderEditItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35822,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35823,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35822,
								35823
							]
						}
					]
				},
				{
					"id": 35802,
					"name": "AdminOrderEditPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35803,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderPreviewDTO"
								},
								"name": "OrderPreviewDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35803
							]
						}
					]
				},
				{
					"id": 35804,
					"name": "AdminOrderEditResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35805,
							"name": "order_change",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderChangeDTO"
								},
								"name": "OrderChangeDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35805
							]
						}
					]
				},
				{
					"id": 35806,
					"name": "AdminOrderEditDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "order-edit"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35824,
					"name": "BaseOrderEditItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35825,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35826,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35827,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35828,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35829,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35830,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35831,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35825,
								35826,
								35827,
								35828,
								35829,
								35830,
								35831
							]
						}
					]
				},
				{
					"id": 35832,
					"name": "AdminPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35833,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35834,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35833,
								35834
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35835,
					"name": "AdminPriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35836,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35837,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35838,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35839,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35840,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35841,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35842,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35843,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35844,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35832,
									"name": "AdminPriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35845,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35846,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35847,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35836,
								35837,
								35838,
								35839,
								35840,
								35841,
								35842,
								35843,
								35844,
								35845,
								35846,
								35847
							]
						}
					]
				},
				{
					"id": 35848,
					"name": "AdminCreatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35849,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35850,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35851,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35852,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35853,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35854,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35849,
								35850,
								35851,
								35852,
								35853,
								35854
							]
						}
					]
				},
				{
					"id": 35855,
					"name": "AdminCreatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35856,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35857,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35858,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35859,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35860,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35861,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35862,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35863,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35848,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35856,
								35857,
								35858,
								35859,
								35860,
								35861,
								35862,
								35863
							]
						}
					]
				},
				{
					"id": 35864,
					"name": "AdminUpdatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35865,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35866,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35867,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35868,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35869,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35870,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 35871,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35865,
								35866,
								35867,
								35868,
								35869,
								35870,
								35871
							]
						}
					]
				},
				{
					"id": 35872,
					"name": "AdminUpdatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35873,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35874,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35875,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35876,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35877,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35878,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35879,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35873,
								35874,
								35875,
								35876,
								35877,
								35878,
								35879
							]
						}
					]
				},
				{
					"id": 35880,
					"name": "AdminBatchPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35881,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35848,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35882,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35864,
									"name": "AdminUpdatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35883,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35881,
								35882,
								35883
							]
						}
					]
				},
				{
					"id": 35884,
					"name": "AdminLinkPriceListProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35885,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35885
							]
						}
					]
				},
				{
					"id": 35886,
					"name": "AdminPriceListListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35897,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35886,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35886,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35898,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35886,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35886,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35896,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 35893,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 35894,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 35895,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 35887,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35888,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35889,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35890,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35891,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
										"qualifiedName": "PriceListStatus"
									},
									"name": "PriceListStatus",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35892,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35897,
								35898,
								35896,
								35893,
								35894,
								35895,
								35887,
								35888,
								35889,
								35890,
								35891,
								35892
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35886,
									"name": "AdminPriceListListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35899,
					"name": "AdminPriceListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35900,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35900
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35901,
					"name": "AdminPriceListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35902,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35835,
								"name": "AdminPriceList",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35902
							]
						}
					]
				},
				{
					"id": 35903,
					"name": "AdminPriceListListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35906,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35907,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35908,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 35909,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35835,
									"name": "AdminPriceList",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.price_lists"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35906,
								35907,
								35908,
								35909
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35904,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35905,
												"name": "price_lists",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35835,
														"name": "AdminPriceList",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35905
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35910,
					"name": "AdminPriceListDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35911,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35912,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "price_list"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35913,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35911,
								35912,
								35913
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "price_list"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35914,
					"name": "AdminPriceListBatchResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35915,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35916,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35917,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 35918,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35919,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 35920,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "price"
											}
										},
										{
											"id": 35921,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35919,
												35920,
												35921
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35915,
								35916,
								35917
							]
						}
					]
				},
				{
					"id": 35922,
					"name": "AdminProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35923,
							"name": "category_children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35922,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35924,
							"name": "parent_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 35922,
										"name": "AdminProductCategory",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35925,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35927,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 35926,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 35931,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.description"
							}
						},
						{
							"id": 35933,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.handle"
							}
						},
						{
							"id": 35935,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_active"
							}
						},
						{
							"id": 35936,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_internal"
							}
						},
						{
							"id": 35937,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rank"
							}
						},
						{
							"id": 35934,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.parent_category_id"
							}
						},
						{
							"id": 35932,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.metadata"
							}
						},
						{
							"id": 35928,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.created_at"
							}
						},
						{
							"id": 35929,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.updated_at"
							}
						},
						{
							"id": 35930,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35923,
								35924,
								35925,
								35927,
								35926,
								35931,
								35933,
								35935,
								35936,
								35937,
								35934,
								35932,
								35928,
								35929,
								35930
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 38730,
									"name": "BaseProductCategory",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "products"
										},
										{
											"type": "literal",
											"value": "category_children"
										},
										{
											"type": "literal",
											"value": "parent_category"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 35938,
					"name": "AdminCreateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35939,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35940,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35941,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35942,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35943,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35944,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35945,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35946,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35939,
								35940,
								35941,
								35942,
								35943,
								35944,
								35945,
								35946
							]
						}
					]
				},
				{
					"id": 35947,
					"name": "AdminUpdateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35948,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35949,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35950,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35951,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35952,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35953,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35954,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 35955,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35948,
								35949,
								35950,
								35951,
								35952,
								35953,
								35954,
								35955
							]
						}
					]
				},
				{
					"id": 35956,
					"name": "AdminUpdateProductCategoryProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35957,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 35958,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35957,
								35958
							]
						}
					]
				},
				{
					"id": 35959,
					"name": "AdminProductCategoryListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35977,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38746,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38746,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38764,
								"name": "BaseProductCategoryListParams.$and"
							}
						},
						{
							"id": 35978,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38746,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38746,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38765,
								"name": "BaseProductCategoryListParams.$or"
							}
						},
						{
							"id": 35976,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38763,
								"name": "BaseProductCategoryListParams.fields"
							}
						},
						{
							"id": 35973,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38760,
								"name": "BaseProductCategoryListParams.limit"
							}
						},
						{
							"id": 35974,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38761,
								"name": "BaseProductCategoryListParams.offset"
							}
						},
						{
							"id": 35975,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38762,
								"name": "BaseProductCategoryListParams.order"
							}
						},
						{
							"id": 35960,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 38754,
								"name": "BaseProductCategoryListParams.is_internal"
							}
						},
						{
							"id": 35961,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 38753,
								"name": "BaseProductCategoryListParams.is_active"
							}
						},
						{
							"id": 35962,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38747,
								"name": "BaseProductCategoryListParams.q"
							}
						},
						{
							"id": 35963,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38748,
								"name": "BaseProductCategoryListParams.id"
							}
						},
						{
							"id": 35964,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38749,
								"name": "BaseProductCategoryListParams.name"
							}
						},
						{
							"id": 35965,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38750,
								"name": "BaseProductCategoryListParams.description"
							}
						},
						{
							"id": 35966,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38751,
								"name": "BaseProductCategoryListParams.parent_category_id"
							}
						},
						{
							"id": 35967,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38752,
								"name": "BaseProductCategoryListParams.handle"
							}
						},
						{
							"id": 35968,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38755,
								"name": "BaseProductCategoryListParams.include_descendants_tree"
							}
						},
						{
							"id": 35969,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38756,
								"name": "BaseProductCategoryListParams.include_ancestors_tree"
							}
						},
						{
							"id": 35970,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38757,
								"name": "BaseProductCategoryListParams.created_at"
							}
						},
						{
							"id": 35971,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38758,
								"name": "BaseProductCategoryListParams.updated_at"
							}
						},
						{
							"id": 35972,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38759,
								"name": "BaseProductCategoryListParams.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35977,
								35978,
								35976,
								35973,
								35974,
								35975,
								35960,
								35961,
								35962,
								35963,
								35964,
								35965,
								35966,
								35967,
								35968,
								35969,
								35970,
								35971,
								35972
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38746,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35979,
					"name": "AdminProductCategoryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35982,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38769,
								"name": "BaseProductCategoryParams.fields"
							}
						},
						{
							"id": 35980,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38767,
								"name": "BaseProductCategoryParams.include_ancestors_tree"
							}
						},
						{
							"id": 35981,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38768,
								"name": "BaseProductCategoryParams.include_descendants_tree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35982,
								35980,
								35981
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38766,
							"name": "BaseProductCategoryParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35983,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35984,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35922,
								"name": "AdminProductCategory",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35984
							]
						}
					]
				},
				{
					"id": 35985,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35988,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 35989,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 35990,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 35991,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35922,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_categories"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35988,
								35989,
								35990,
								35991
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 35986,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35987,
												"name": "product_categories",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35922,
														"name": "AdminProductCategory",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35987
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35992,
					"name": "AdminProductCategoryDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35993,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 35994,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_category"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 35995,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35993,
								35994,
								35995
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_category"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35996,
					"name": "AdminProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35997,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38771,
								"name": "BaseProductTag.id"
							}
						},
						{
							"id": 35998,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38772,
								"name": "BaseProductTag.value"
							}
						},
						{
							"id": 35999,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38773,
								"name": "BaseProductTag.created_at"
							}
						},
						{
							"id": 36000,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38774,
								"name": "BaseProductTag.updated_at"
							}
						},
						{
							"id": 36001,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38775,
								"name": "BaseProductTag.deleted_at"
							}
						},
						{
							"id": 36002,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38776,
								"name": "BaseProductTag.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35997,
								35998,
								35999,
								36000,
								36001,
								36002
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38770,
							"name": "BaseProductTag",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36003,
					"name": "AdminCreateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36004,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36005,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36004,
								36005
							]
						}
					]
				},
				{
					"id": 36006,
					"name": "AdminUpdateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36007,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36008,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36007,
								36008
							]
						}
					]
				},
				{
					"id": 36009,
					"name": "AdminProductTagListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36020,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36009,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36009,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36021,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36009,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36009,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36019,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38786,
								"name": "BaseProductTagListParams.fields"
							}
						},
						{
							"id": 36016,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38783,
								"name": "BaseProductTagListParams.limit"
							}
						},
						{
							"id": 36017,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38784,
								"name": "BaseProductTagListParams.offset"
							}
						},
						{
							"id": 36018,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38785,
								"name": "BaseProductTagListParams.order"
							}
						},
						{
							"id": 36010,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36011,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38778,
								"name": "BaseProductTagListParams.q"
							}
						},
						{
							"id": 36012,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38779,
								"name": "BaseProductTagListParams.id"
							}
						},
						{
							"id": 36013,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38780,
								"name": "BaseProductTagListParams.value"
							}
						},
						{
							"id": 36014,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38781,
								"name": "BaseProductTagListParams.created_at"
							}
						},
						{
							"id": 36015,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38782,
								"name": "BaseProductTagListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36020,
								36021,
								36019,
								36016,
								36017,
								36018,
								36010,
								36011,
								36012,
								36013,
								36014,
								36015
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38777,
							"name": "BaseProductTagListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36009,
									"name": "AdminProductTagListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36022,
					"name": "AdminProductTagParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36023,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36023
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36024,
					"name": "AdminProductTagResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36025,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35996,
								"name": "AdminProductTag",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36025
							]
						}
					]
				},
				{
					"id": 36026,
					"name": "AdminProductTagListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36029,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 36030,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 36031,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 36032,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35996,
									"name": "AdminProductTag",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_tags"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36029,
								36030,
								36031,
								36032
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 36027,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36028,
												"name": "product_tags",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 35996,
														"name": "AdminProductTag",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36028
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36033,
					"name": "AdminProductTagDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36034,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36035,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_tag"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36036,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36034,
								36035,
								36036
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_tag"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36037,
					"name": "AdminProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36038,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38788,
								"name": "BaseProductType.id"
							}
						},
						{
							"id": 36039,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38789,
								"name": "BaseProductType.value"
							}
						},
						{
							"id": 36040,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38790,
								"name": "BaseProductType.created_at"
							}
						},
						{
							"id": 36041,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38791,
								"name": "BaseProductType.updated_at"
							}
						},
						{
							"id": 36042,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38792,
								"name": "BaseProductType.deleted_at"
							}
						},
						{
							"id": 36043,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38793,
								"name": "BaseProductType.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36038,
								36039,
								36040,
								36041,
								36042,
								36043
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38787,
							"name": "BaseProductType",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36044,
					"name": "AdminCreateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36045,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36046,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36045,
								36046
							]
						}
					]
				},
				{
					"id": 36047,
					"name": "AdminUpdateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36048,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36049,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36048,
								36049
							]
						}
					]
				},
				{
					"id": 36050,
					"name": "AdminProductTypeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36061,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36050,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36050,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36062,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36050,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36050,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36060,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36057,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36058,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36059,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36051,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36052,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36053,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36054,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36055,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36056,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36061,
								36062,
								36060,
								36057,
								36058,
								36059,
								36051,
								36052,
								36053,
								36054,
								36055,
								36056
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36050,
									"name": "AdminProductTypeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36063,
					"name": "AdminProductTypeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36064,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36064
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36065,
					"name": "AdminProductTypeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36066,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36037,
								"name": "AdminProductType",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36066
							]
						}
					]
				},
				{
					"id": 36067,
					"name": "AdminProductTypeListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36070,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 36071,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 36072,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 36073,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36037,
									"name": "AdminProductType",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36070,
								36071,
								36072,
								36073
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 36068,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36069,
												"name": "product_types",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 36037,
														"name": "AdminProductType",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36069
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36074,
					"name": "AdminProductTypeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36075,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36076,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_type"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36077,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36075,
								36076,
								36077
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_type"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36078,
					"name": "AdminReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36079,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36080,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36081,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36082,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36083,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36084,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36085,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36086,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 36087,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 36088,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36089,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36090,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36091,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36079,
								36080,
								36081,
								36082,
								36083,
								36084,
								36085,
								36086,
								36087,
								36088,
								36089,
								36090,
								36091
							]
						}
					]
				},
				{
					"id": 36092,
					"name": "AdminCreateReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36093,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36094,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36095,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36096,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36097,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36098,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36093,
								36094,
								36095,
								36096,
								36097,
								36098
							]
						}
					]
				},
				{
					"id": 36099,
					"name": "AdminUpdateReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36100,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36101,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36102,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36103,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36100,
								36101,
								36102,
								36103
							]
						}
					]
				},
				{
					"id": 36104,
					"name": "AdminGetReservationsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36105,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36106,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36107,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36108,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36109,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36110,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36111,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36112,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36113,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36114,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36105,
								36106,
								36107,
								36108,
								36109,
								36110,
								36111,
								36112,
								36113,
								36114
							]
						}
					]
				},
				{
					"id": 36115,
					"name": "AdminReservationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36116,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36116
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36117,
					"name": "AdminReservationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36118,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36078,
								"name": "AdminReservation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36118
							]
						}
					]
				},
				{
					"id": 36119,
					"name": "AdminReservationListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36120,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36121,
											"name": "reservations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36078,
													"name": "AdminReservation",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36121
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36122,
					"name": "AdminReservationDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "reservation"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36233,
					"name": "AdminReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36234,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38820,
								"name": "BaseReturnReason.id"
							}
						},
						{
							"id": 36235,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38821,
								"name": "BaseReturnReason.value"
							}
						},
						{
							"id": 36236,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38822,
								"name": "BaseReturnReason.label"
							}
						},
						{
							"id": 36237,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38823,
								"name": "BaseReturnReason.description"
							}
						},
						{
							"id": 36238,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38824,
								"name": "BaseReturnReason.metadata"
							}
						},
						{
							"id": 36239,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38825,
								"name": "BaseReturnReason.created_at"
							}
						},
						{
							"id": 36240,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38826,
								"name": "BaseReturnReason.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36234,
								36235,
								36236,
								36237,
								36238,
								36239,
								36240
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38819,
							"name": "BaseReturnReason",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36241,
					"name": "AdminCreateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36242,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36243,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 36245,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 36244,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36242,
								36243,
								36245,
								36244
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38827,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36246,
					"name": "AdminUpdateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36247,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36248,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 36250,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 36249,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36247,
								36248,
								36250,
								36249
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38827,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36251,
					"name": "AdminReturnReasonListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36265,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36251,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36251,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36266,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36251,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36251,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36264,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38840,
								"name": "BaseReturnReasonListParams.fields"
							}
						},
						{
							"id": 36261,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38837,
								"name": "BaseReturnReasonListParams.limit"
							}
						},
						{
							"id": 36262,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38838,
								"name": "BaseReturnReasonListParams.offset"
							}
						},
						{
							"id": 36263,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38839,
								"name": "BaseReturnReasonListParams.order"
							}
						},
						{
							"id": 36252,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36253,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38829,
								"name": "BaseReturnReasonListParams.q"
							}
						},
						{
							"id": 36254,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38830,
								"name": "BaseReturnReasonListParams.id"
							}
						},
						{
							"id": 36255,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38831,
								"name": "BaseReturnReasonListParams.value"
							}
						},
						{
							"id": 36256,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38832,
								"name": "BaseReturnReasonListParams.label"
							}
						},
						{
							"id": 36257,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38833,
								"name": "BaseReturnReasonListParams.description"
							}
						},
						{
							"id": 36258,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38834,
								"name": "BaseReturnReasonListParams.parent_return_reason_id"
							}
						},
						{
							"id": 36259,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38835,
								"name": "BaseReturnReasonListParams.created_at"
							}
						},
						{
							"id": 36260,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38836,
								"name": "BaseReturnReasonListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36265,
								36266,
								36264,
								36261,
								36262,
								36263,
								36252,
								36253,
								36254,
								36255,
								36256,
								36257,
								36258,
								36259,
								36260
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38828,
							"name": "BaseReturnReasonListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36251,
									"name": "AdminReturnReasonListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36267,
					"name": "AdminReturnReasonParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36268,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36268
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36269,
					"name": "AdminReturnReasonResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36270,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36233,
								"name": "AdminReturnReason",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36270
							]
						}
					]
				},
				{
					"id": 36271,
					"name": "AdminReturnReasonListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36274,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 36275,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 36276,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 36277,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36233,
									"name": "AdminReturnReason",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.return_reasons"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36274,
								36275,
								36276,
								36277
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 36272,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36273,
												"name": "return_reasons",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 36233,
														"name": "AdminReturnReason",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36273
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36278,
					"name": "AdminReturnReasonDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36279,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36280,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "return_reason"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36281,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36279,
								36280,
								36281
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "return_reason"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36123,
					"name": "AdminReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36124,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38795,
								"name": "BaseReturnItem.id"
							}
						},
						{
							"id": 36125,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38796,
								"name": "BaseReturnItem.quantity"
							}
						},
						{
							"id": 36126,
							"name": "received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38797,
								"name": "BaseReturnItem.received_quantity"
							}
						},
						{
							"id": 36127,
							"name": "damaged_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38798,
								"name": "BaseReturnItem.damaged_quantity"
							}
						},
						{
							"id": 36128,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38799,
								"name": "BaseReturnItem.reason_id"
							}
						},
						{
							"id": 36129,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38800,
								"name": "BaseReturnItem.note"
							}
						},
						{
							"id": 36130,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38801,
								"name": "BaseReturnItem.item_id"
							}
						},
						{
							"id": 36131,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38802,
								"name": "BaseReturnItem.return_id"
							}
						},
						{
							"id": 36132,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38803,
								"name": "BaseReturnItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36124,
								36125,
								36126,
								36127,
								36128,
								36129,
								36130,
								36131,
								36132
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38794,
							"name": "BaseReturnItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36133,
					"name": "AdminReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36134,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38805,
								"name": "BaseReturn.id"
							}
						},
						{
							"id": 36135,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38806,
								"name": "BaseReturn.order_id"
							}
						},
						{
							"id": 36136,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38807,
								"name": "BaseReturn.status"
							}
						},
						{
							"id": 36137,
							"name": "exchange_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38808,
								"name": "BaseReturn.exchange_id"
							}
						},
						{
							"id": 36138,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38809,
								"name": "BaseReturn.location_id"
							}
						},
						{
							"id": 36139,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38810,
								"name": "BaseReturn.claim_id"
							}
						},
						{
							"id": 36140,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38811,
								"name": "BaseReturn.order_version"
							}
						},
						{
							"id": 36141,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38812,
								"name": "BaseReturn.display_id"
							}
						},
						{
							"id": 36142,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38813,
								"name": "BaseReturn.no_notification"
							}
						},
						{
							"id": 36143,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38814,
								"name": "BaseReturn.refund_amount"
							}
						},
						{
							"id": 36144,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38794,
									"name": "BaseReturnItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38815,
								"name": "BaseReturn.items"
							}
						},
						{
							"id": 36145,
							"name": "received_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38816,
								"name": "BaseReturn.received_at"
							}
						},
						{
							"id": 36146,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38817,
								"name": "BaseReturn.created_at"
							}
						},
						{
							"id": 36147,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38818,
								"name": "BaseReturn.canceled_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36134,
								36135,
								36136,
								36137,
								36138,
								36139,
								36140,
								36141,
								36142,
								36143,
								36144,
								36145,
								36146,
								36147
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38804,
							"name": "BaseReturn",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36148,
					"name": "AdminInitiateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36149,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36150,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36151,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36152,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36153,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36154,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36149,
								36150,
								36151,
								36152,
								36153,
								36154
							]
						}
					]
				},
				{
					"id": 36155,
					"name": "AdminAddReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36156,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36157,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36158,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36159,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36160,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36156,
								36157,
								36158,
								36159,
								36160
							]
						}
					]
				},
				{
					"id": 36161,
					"name": "AdminAddReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36162,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36155,
									"name": "AdminAddReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36162
							]
						}
					]
				},
				{
					"id": 36163,
					"name": "AdminUpdateReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36164,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36165,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36166,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36164,
								36165,
								36166
							]
						}
					]
				},
				{
					"id": 36167,
					"name": "AdminAddReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36168,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36169,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36170,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36171,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36172,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36168,
								36169,
								36170,
								36171,
								36172
							]
						}
					]
				},
				{
					"id": 36173,
					"name": "AdminUpdateReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36174,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36175,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36176,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36174,
								36175,
								36176
							]
						}
					]
				},
				{
					"id": 36177,
					"name": "AdminConfirmReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36178,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36178
							]
						}
					]
				},
				{
					"id": 36179,
					"name": "AdminUpdateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36180,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36181,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36182,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36180,
								36181,
								36182
							]
						}
					]
				},
				{
					"id": 36183,
					"name": "AdminConfirmReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36184,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36184
							]
						}
					]
				},
				{
					"id": 36185,
					"name": "AdminInitiateReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36186,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36187,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36188,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36186,
								36187,
								36188
							]
						}
					]
				},
				{
					"id": 36189,
					"name": "AdminReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36190,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 36191,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36192,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 36193,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 36194,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36192,
													36193,
													36194
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36190
							]
						}
					]
				},
				{
					"id": 36195,
					"name": "AdminDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36196,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 36197,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36198,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 36199,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 36200,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36198,
													36199,
													36200
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36196
							]
						}
					]
				},
				{
					"id": 36201,
					"name": "AdminUpdateReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36202,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36203,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36204,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36205,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36202,
								36203,
								36204,
								36205
							]
						}
					]
				},
				{
					"id": 36206,
					"name": "AdminUpdateDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36207,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36208,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36209,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36210,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36207,
								36208,
								36209,
								36210
							]
						}
					]
				},
				{
					"id": 36211,
					"name": "AdminReturnFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36220,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36217,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36218,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36219,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36212,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36213,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36214,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36215,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36216,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36220,
								36217,
								36218,
								36219,
								36212,
								36213,
								36214,
								36215,
								36216
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36221,
					"name": "AdminReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36222,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36222
							]
						}
					]
				},
				{
					"id": 36223,
					"name": "AdminReturnsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36224,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36225,
											"name": "returns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36133,
													"name": "AdminReturn",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36225
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36226,
					"name": "AdminOrderReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36227,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36228,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36227,
								36228
							]
						}
					]
				},
				{
					"id": 36229,
					"name": "AdminReturnPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36230,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36231,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36133,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36230,
								36231
							]
						}
					]
				},
				{
					"id": 36232,
					"name": "AdminReturnDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35328,
						"typeArguments": [
							{
								"type": "literal",
								"value": "return"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36282,
					"name": "AdminShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36283,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36284,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36285,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36286,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36287,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36288,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36289,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36290,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36283,
								36284,
								36285,
								36286,
								36287,
								36288,
								36289,
								36290
							]
						}
					]
				},
				{
					"id": 36291,
					"name": "AdminShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36292,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36293,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36294,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36295,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36296,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36297,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36298,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36299,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36292,
								36293,
								36294,
								36295,
								36296,
								36297,
								36298,
								36299
							]
						}
					]
				},
				{
					"id": 36300,
					"name": "AdminShippingOptionPriceRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36301,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36302,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36301,
								36302
							]
						}
					]
				},
				{
					"id": 36303,
					"name": "AdminShippingOptionPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36304,
							"name": "price_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36300,
									"name": "AdminShippingOptionPriceRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36305,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36304,
								36305
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36306,
					"name": "AdminShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36307,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36308,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36309,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36310,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36311,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35567,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36312,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36313,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35538,
								"name": "AdminFulfillmentProvider",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36314,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36315,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36282,
								"name": "AdminShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36316,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36317,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36402,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36318,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36291,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36319,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36303,
									"name": "AdminShippingOptionPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36320,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36321,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36322,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 36323,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 36324,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36307,
								36308,
								36309,
								36310,
								36311,
								36312,
								36313,
								36314,
								36315,
								36316,
								36317,
								36318,
								36319,
								36320,
								36321,
								36322,
								36323,
								36324
							]
						}
					]
				},
				{
					"id": 36325,
					"name": "AdminCreateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36326,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34568,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36327,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36328,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36326,
								36327,
								36328
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 36349,
							"name": "AdminUpdateShippingOptionRule"
						}
					]
				},
				{
					"id": 36329,
					"name": "AdminCreateShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36330,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36331,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36332,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36330,
								36331,
								36332
							]
						}
					]
				},
				{
					"id": 36333,
					"name": "AdminCreateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36334,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36335,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36334,
								36335
							]
						}
					]
				},
				{
					"id": 36336,
					"name": "AdminCreateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36337,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36338,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36337,
								36338
							]
						}
					]
				},
				{
					"id": 36339,
					"name": "AdminCreateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36340,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36341,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36342,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36343,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 36344,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36345,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36346,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36329,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36347,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36333,
											"name": "AdminCreateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 36336,
											"name": "AdminCreateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 36348,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36325,
									"name": "AdminCreateShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36340,
								36341,
								36342,
								36343,
								36344,
								36345,
								36346,
								36347,
								36348
							]
						}
					]
				},
				{
					"id": 36349,
					"name": "AdminUpdateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36351,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 34568,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36326,
								"name": "AdminCreateShippingOptionRule.operator"
							}
						},
						{
							"id": 36352,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36327,
								"name": "AdminCreateShippingOptionRule.attribute"
							}
						},
						{
							"id": 36353,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36328,
								"name": "AdminCreateShippingOptionRule.value"
							}
						},
						{
							"id": 36350,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36351,
								36352,
								36353,
								36350
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36325,
							"name": "AdminCreateShippingOptionRule",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36354,
					"name": "AdminUpdateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36355,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36356,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36357,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36355,
								36356,
								36357
							]
						}
					]
				},
				{
					"id": 36358,
					"name": "AdminUpdateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36359,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36360,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36361,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36359,
								36360,
								36361
							]
						}
					]
				},
				{
					"id": 36362,
					"name": "AdminUpdateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36363,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36364,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 36365,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36366,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36367,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36368,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 36329,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36369,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36354,
											"name": "AdminUpdateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 36358,
											"name": "AdminUpdateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 36370,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36325,
											"name": "AdminCreateShippingOptionRule",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 36349,
											"name": "AdminUpdateShippingOptionRule",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36363,
								36364,
								36365,
								36366,
								36367,
								36368,
								36369,
								36370
							]
						}
					]
				},
				{
					"id": 36371,
					"name": "AdminUpdateShippingOptionRules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36372,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 36373,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 36374,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36372,
								36373,
								36374
							]
						}
					]
				},
				{
					"id": 36375,
					"name": "AdminShippingOptionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36391,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36388,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36389,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36390,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36376,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36377,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36378,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36379,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36380,
							"name": "is_return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36381,
							"name": "admin_only",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36382,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36383,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36384,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36385,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36386,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36387,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36391,
								36388,
								36389,
								36390,
								36376,
								36377,
								36378,
								36379,
								36380,
								36381,
								36382,
								36383,
								36384,
								36385,
								36386,
								36387
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36392,
					"name": "AdminShippingOptionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36393,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36306,
								"name": "AdminShippingOption",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36393
							]
						}
					]
				},
				{
					"id": 36394,
					"name": "AdminShippingOptionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36395,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36396,
											"name": "shipping_options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36306,
													"name": "AdminShippingOption",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36396
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36397,
					"name": "AdminShippingOptionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36398,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36399,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_option"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36400,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36398,
								36399,
								36400
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_option"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36401,
					"name": "AdminUpdateShippingOptionRulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35346,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36291,
								"name": "AdminShippingOptionRule",
								"package": "@medusajs/types"
							}
						],
						"name": "BatchResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36402,
					"name": "AdminShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36403,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36404,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36405,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36406,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36407,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36408,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36409,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36403,
								36404,
								36405,
								36406,
								36407,
								36408,
								36409
							]
						}
					]
				},
				{
					"id": 36410,
					"name": "AdminCreateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36411,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36412,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36413,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36411,
								36412,
								36413
							]
						}
					]
				},
				{
					"id": 36414,
					"name": "AdminUpdateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36415,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36416,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36417,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36415,
								36416,
								36417
							]
						}
					]
				},
				{
					"id": 36418,
					"name": "AdminShippingProfileListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36431,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36428,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36429,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36430,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36419,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36420,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36421,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36422,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36423,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36424,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36425,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36426,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36418,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36427,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36418,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36431,
								36428,
								36429,
								36430,
								36419,
								36420,
								36421,
								36422,
								36423,
								36424,
								36425,
								36426,
								36427
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36432,
					"name": "AdminShippingProfileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36433,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36402,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36433
							]
						}
					]
				},
				{
					"id": 36434,
					"name": "AdminShippingProfileListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36435,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36436,
											"name": "shipping_profiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36402,
													"name": "AdminShippingProfile",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36436
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36437,
					"name": "AdminShippingProfileDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36438,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36439,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_profile"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36440,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36438,
								36439,
								36440
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_profile"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36441,
					"name": "AdminStockLocationAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36442,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36443,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36444,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36445,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36446,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36447,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36448,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36449,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36450,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36442,
								36443,
								36444,
								36445,
								36446,
								36447,
								36448,
								36449,
								36450
							]
						}
					]
				},
				{
					"id": 36451,
					"name": "AdminStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36452,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36453,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36454,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36455,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 36441,
								"name": "AdminStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36456,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/entities.ts",
										"qualifiedName": "AdminSalesChannel"
									},
									"name": "AdminSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36457,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35538,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36458,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35577,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36452,
								36453,
								36454,
								36455,
								36456,
								36457,
								36458
							]
						}
					]
				},
				{
					"id": 36459,
					"name": "AdminCreateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36460,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36461,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36462,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 38841,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36463,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36460,
								36461,
								36462,
								36463
							]
						}
					]
				},
				{
					"id": 36464,
					"name": "AdminUpdateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36465,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36466,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36467,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 38841,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36468,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36465,
								36466,
								36467,
								36468
							]
						}
					]
				},
				{
					"id": 36469,
					"name": "AdminUpdateStockLocationSalesChannels",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36470,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 36471,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36470,
								36471
							]
						}
					]
				},
				{
					"id": 36472,
					"name": "AdminCreateStockLocationFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36473,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36474,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36473,
								36474
							]
						}
					]
				},
				{
					"id": 36475,
					"name": "AdminStockLocationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36489,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36486,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36487,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36488,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36476,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36477,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36478,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36479,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36480,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36481,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36475,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36482,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36475,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36483,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36484,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36485,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36489,
								36486,
								36487,
								36488,
								36476,
								36477,
								36478,
								36479,
								36480,
								36481,
								36482,
								36483,
								36484,
								36485
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36475,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36490,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36491,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36451,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36491
							]
						}
					]
				},
				{
					"id": 36492,
					"name": "AdminStockLocationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36495,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 36496,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 36497,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 36498,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36451,
									"name": "AdminStockLocation",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.stock_locations"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36495,
								36496,
								36497,
								36498
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35340,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 36493,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 36494,
												"name": "stock_locations",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 36451,
														"name": "AdminStockLocation",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													36494
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36499,
					"name": "AdminStockLocationDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36500,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36501,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "stock_location"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36502,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36500,
								36501,
								36502
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "stock_location"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36503,
					"name": "AdminTaxRateRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36504,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36505,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36504,
								36505
							]
						}
					]
				},
				{
					"id": 36506,
					"name": "AdminTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36507,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36508,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36509,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36510,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36511,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36512,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36513,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36514,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36515,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36516,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36517,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 36518,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36519,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36565,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36520,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36503,
									"name": "AdminTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36507,
								36508,
								36509,
								36510,
								36511,
								36512,
								36513,
								36514,
								36515,
								36516,
								36517,
								36518,
								36519,
								36520
							]
						}
					]
				},
				{
					"id": 36521,
					"name": "AdminCreateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36522,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36523,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36524,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36525,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36526,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38850,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36527,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36528,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36529,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36522,
								36523,
								36524,
								36525,
								36526,
								36527,
								36528,
								36529
							]
						}
					]
				},
				{
					"id": 36530,
					"name": "AdminUpdateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36531,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36532,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36533,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36534,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38850,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36535,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36536,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36537,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36531,
								36532,
								36533,
								36534,
								36535,
								36536,
								36537
							]
						}
					]
				},
				{
					"id": 36538,
					"name": "AdminTaxRateListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36553,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36538,
											"name": "AdminTaxRateListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36538,
													"name": "AdminTaxRateListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36554,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36538,
											"name": "AdminTaxRateListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36538,
													"name": "AdminTaxRateListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36552,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36549,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36550,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36551,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36539,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36540,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36541,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									}
								]
							}
						},
						{
							"id": 36542,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36543,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36544,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36545,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36546,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36547,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36548,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36553,
								36554,
								36552,
								36549,
								36550,
								36551,
								36539,
								36540,
								36541,
								36542,
								36543,
								36544,
								36545,
								36546,
								36547,
								36548
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36538,
									"name": "AdminTaxRateListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36555,
					"name": "AdminTaxRateResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36556,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36506,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36556
							]
						}
					]
				},
				{
					"id": 36557,
					"name": "AdminTaxRateListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36558,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36559,
											"name": "tax_rates",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36506,
													"name": "AdminTaxRate",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36559
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36560,
					"name": "AdminTaxRateDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36561,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36562,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_rate"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36563,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36561,
								36562,
								36563
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_rate"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36564,
					"name": "AdminTaxRateRuleDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35334,
						"typeArguments": [
							{
								"type": "literal",
								"value": "tax_rate_rule"
							},
							{
								"type": "reference",
								"target": 36506,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						],
						"name": "DeleteResponseWithParent",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36565,
					"name": "AdminTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36566,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36567,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36568,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36569,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36570,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36571,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36572,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36573,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36574,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36575,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36576,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36577,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36578,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36579,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36580,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36581,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36506,
									"name": "AdminTaxRate",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 36582,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 36565,
										"name": "AdminTaxRegion",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36583,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36565,
									"name": "AdminTaxRegion",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36566,
								36567,
								36568,
								36569,
								36570,
								36571,
								36572,
								36573,
								36574,
								36575,
								36576,
								36577,
								36578,
								36579,
								36580,
								36581,
								36582,
								36583
							]
						}
					]
				},
				{
					"id": 36584,
					"name": "AdminCreateTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36585,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36586,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36587,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36588,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 36589,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36590,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 36591,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36592,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36593,
											"name": "is_combinable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 36594,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36590,
												36591,
												36592,
												36593,
												36594
											]
										}
									]
								}
							}
						},
						{
							"id": 36595,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36585,
								36586,
								36587,
								36588,
								36595
							]
						}
					]
				},
				{
					"id": 36596,
					"name": "AdminTaxRegionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 36610,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36596,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36596,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36611,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36596,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36596,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36609,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36606,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36607,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36608,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36597,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36598,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36599,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36600,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36601,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36602,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36603,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36604,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36605,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36610,
								36611,
								36609,
								36606,
								36607,
								36608,
								36597,
								36598,
								36599,
								36600,
								36601,
								36602,
								36603,
								36604,
								36605
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36596,
									"name": "AdminTaxRegionListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36612,
					"name": "AdminTaxRegionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36613,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35319,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36613
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35318,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36614,
					"name": "AdminTaxRegionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36615,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36565,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36615
							]
						}
					]
				},
				{
					"id": 36616,
					"name": "AdminTaxRegionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36617,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36618,
											"name": "tax_regions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36565,
													"name": "AdminTaxRegion",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36618
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36619,
					"name": "AdminTaxRegionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36620,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 36621,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_region"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 36622,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36620,
								36621,
								36622
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35328,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_region"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36623,
					"name": "TransactionStepStatus",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "idle"
							},
							{
								"type": "literal",
								"value": "ok"
							},
							{
								"type": "literal",
								"value": "waiting_response"
							},
							{
								"type": "literal",
								"value": "temp_failure"
							},
							{
								"type": "literal",
								"value": "permanent_failure"
							}
						]
					}
				},
				{
					"id": 36624,
					"name": "TransactionState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "not_started"
							},
							{
								"type": "literal",
								"value": "invoking"
							},
							{
								"type": "literal",
								"value": "waiting_to_compensate"
							},
							{
								"type": "literal",
								"value": "compensating"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "reverted"
							},
							{
								"type": "literal",
								"value": "failed"
							}
						]
					}
				},
				{
					"id": 36625,
					"name": "TransactionStepState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "not_started"
							},
							{
								"type": "literal",
								"value": "invoking"
							},
							{
								"type": "literal",
								"value": "compensating"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "reverted"
							},
							{
								"type": "literal",
								"value": "failed"
							},
							{
								"type": "literal",
								"value": "dormant"
							},
							{
								"type": "literal",
								"value": "skipped"
							},
							{
								"type": "literal",
								"value": "skipped_failure"
							},
							{
								"type": "literal",
								"value": "timeout"
							}
						]
					}
				},
				{
					"id": 36626,
					"name": "StepInvokeResult",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36627,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36628,
									"name": "output",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36629,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 36630,
													"name": "output",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 36631,
													"name": "compensateInput",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														36630,
														36631
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36628
									]
								}
							]
						}
					}
				},
				{
					"id": 36632,
					"name": "StepError",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36634,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 36635,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 36636,
									"name": "handlerType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36634,
										36635,
										36636
									]
								}
							]
						}
					}
				},
				{
					"id": 36637,
					"name": "WorkflowExecutionContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36638,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 36639,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36640,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 36626,
														"name": "StepInvokeResult",
														"package": "@medusajs/types"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 36641,
											"name": "payload",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36640,
												36641
											]
										}
									]
								}
							}
						},
						{
							"id": 36642,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 36643,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36632,
									"name": "StepError",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36638,
								36642,
								36643
							]
						}
					]
				},
				{
					"id": 36644,
					"name": "WorkflowExecutionDefinition",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36645,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36646,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36647,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36648,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36649,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36650,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36651,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36652,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36653,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36654,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36645,
								36646,
								36647,
								36648,
								36649,
								36650,
								36651,
								36652,
								36653,
								36654
							]
						}
					]
				},
				{
					"id": 36655,
					"name": "WorkflowExecutionFn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36656,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36625,
								"name": "TransactionStepState",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36657,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36623,
								"name": "TransactionStepStatus",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36656,
								36657
							]
						}
					]
				},
				{
					"id": 36658,
					"name": "AdminWorkflowExecutionStep",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36659,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36660,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36655,
								"name": "WorkflowExecutionFn",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36661,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36644,
								"name": "WorkflowExecutionDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36662,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36655,
								"name": "WorkflowExecutionFn",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36663,
							"name": "depth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36664,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36659,
								36660,
								36661,
								36662,
								36663,
								36664
							]
						}
					]
				},
				{
					"id": 36665,
					"name": "AdminWorkflowExecution",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36666,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36667,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36668,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36669,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38853,
								"name": "AdminWorkflowExecutionExecution",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36670,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36637,
								"name": "WorkflowExecutionContext",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36671,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36624,
								"name": "TransactionState",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36672,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 36673,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 36674,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36666,
								36667,
								36668,
								36669,
								36670,
								36671,
								36672,
								36673,
								36674
							]
						}
					]
				},
				{
					"id": 36675,
					"name": "AdminGetWorkflowExecutionsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36681,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35324,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 36678,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35321,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 36679,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35322,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 36680,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 35323,
								"name": "FindParams.order"
							}
						},
						{
							"id": 36676,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36677,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36681,
								36678,
								36679,
								36680,
								36676,
								36677
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35320,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36682,
					"name": "AdminWorkflowExecutionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36683,
							"name": "workflow_execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36665,
								"name": "AdminWorkflowExecution",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36683
							]
						}
					]
				},
				{
					"id": 36684,
					"name": "AdminWorkflowExecutionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35340,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36685,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36686,
											"name": "workflow_executions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36665,
													"name": "AdminWorkflowExecution",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36686
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36687,
					"name": "AdminWorkflowRunResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36688,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36689,
									"name": "acknowledgement",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37826,
										"name": "Acknowledgement",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36689
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35071,
						35087,
						35099,
						35111,
						35123,
						35125,
						35143,
						35146,
						35154,
						35160,
						35168,
						35173,
						35181,
						35186,
						35194,
						35199,
						35205,
						35209,
						35215,
						35219,
						35220,
						35222,
						35236,
						35243,
						35245,
						35252,
						35255,
						35258,
						35261,
						35265,
						35269,
						35278,
						35282,
						35286,
						35289,
						35303,
						35305,
						35307,
						35314,
						35318,
						35320,
						35325,
						35359,
						35366,
						35369,
						35372,
						35384,
						35399,
						35401,
						35406,
						35414,
						35420,
						35428,
						35433,
						35441,
						35446,
						35454,
						35459,
						35465,
						35469,
						35475,
						35479,
						35481,
						35483,
						35497,
						35504,
						35509,
						35512,
						35515,
						35519,
						35522,
						35526,
						35530,
						35532,
						35535,
						35538,
						35541,
						35550,
						35557,
						35567,
						35577,
						35586,
						35589,
						35592,
						35594,
						35599,
						35601,
						35695,
						35704,
						35707,
						35711,
						35715,
						35721,
						35605,
						35622,
						35638,
						35653,
						35668,
						35688,
						35726,
						35743,
						35756,
						35767,
						35781,
						35791,
						35793,
						35795,
						35807,
						35812,
						35821,
						35802,
						35804,
						35824,
						35832,
						35835,
						35848,
						35855,
						35864,
						35872,
						35880,
						35884,
						35886,
						35899,
						35901,
						35903,
						35910,
						35914,
						35922,
						35938,
						35947,
						35956,
						35959,
						35979,
						35983,
						35985,
						35992,
						35996,
						36003,
						36006,
						36009,
						36022,
						36024,
						36026,
						36033,
						36037,
						36044,
						36047,
						36050,
						36063,
						36065,
						36067,
						36074,
						36078,
						36092,
						36099,
						36104,
						36115,
						36117,
						36233,
						36241,
						36246,
						36251,
						36267,
						36269,
						36271,
						36278,
						36123,
						36133,
						36148,
						36155,
						36161,
						36163,
						36167,
						36173,
						36177,
						36179,
						36183,
						36185,
						36189,
						36195,
						36201,
						36206,
						36211,
						36221,
						36226,
						36229,
						36282,
						36291,
						36300,
						36303,
						36306,
						36325,
						36329,
						36333,
						36336,
						36339,
						36349,
						36354,
						36358,
						36362,
						36371,
						36375,
						36392,
						36397,
						36402,
						36410,
						36414,
						36418,
						36432,
						36437,
						36441,
						36451,
						36459,
						36464,
						36469,
						36472,
						36475,
						36490,
						36492,
						36499,
						36503,
						36506,
						36521,
						36530,
						36538,
						36555,
						36560,
						36565,
						36584,
						36596,
						36612,
						36614,
						36619,
						36637,
						36644,
						36655,
						36658,
						36665,
						36675,
						36682
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						35140,
						35145,
						35356,
						35328,
						35334,
						35340,
						35346,
						35403,
						35506,
						35529,
						35534,
						35723,
						35690,
						35693,
						35694,
						35735,
						35739,
						35758,
						35761,
						35766,
						35806,
						36119,
						36122,
						36223,
						36232,
						36394,
						36401,
						36434,
						36557,
						36564,
						36616,
						36623,
						36624,
						36625,
						36626,
						36632,
						36684,
						36687
					]
				}
			]
		},
		{
			"id": 38730,
			"name": "BaseProductCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38731,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38732,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38733,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38734,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38735,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38736,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38737,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38738,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38739,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 38730,
								"name": "BaseProductCategory",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38740,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38730,
							"name": "BaseProductCategory",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38741,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38742,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38743,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38744,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38745,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38731,
						38732,
						38733,
						38734,
						38735,
						38736,
						38737,
						38738,
						38739,
						38740,
						38741,
						38742,
						38743,
						38744,
						38745
					]
				}
			]
		},
		{
			"id": 38746,
			"name": "BaseProductCategoryListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 38764,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 38746,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 34727,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38746,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 34728,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 38765,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 38746,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 34727,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38746,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 34729,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 38763,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38760,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38761,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38762,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				},
				{
					"id": 38747,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38748,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38749,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38750,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38751,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38752,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38753,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38754,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38755,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38756,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38757,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38758,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38759,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38764,
						38765,
						38763,
						38760,
						38761,
						38762,
						38747,
						38748,
						38749,
						38750,
						38751,
						38752,
						38753,
						38754,
						38755,
						38756,
						38757,
						38758,
						38759
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 34727,
					"typeArguments": [
						{
							"type": "reference",
							"target": 38746,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35959,
					"name": "AdminProductCategoryListParams"
				}
			]
		},
		{
			"id": 38766,
			"name": "BaseProductCategoryParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38769,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35319,
						"name": "SelectParams.fields"
					}
				},
				{
					"id": 38767,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38768,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38769,
						38767,
						38768
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35318,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35979,
					"name": "AdminProductCategoryParams"
				}
			]
		},
		{
			"id": 38770,
			"name": "BaseProductTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38771,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38772,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38773,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38774,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38775,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38776,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38771,
						38772,
						38773,
						38774,
						38775,
						38776
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 35996,
					"name": "AdminProductTag"
				}
			]
		},
		{
			"id": 38777,
			"name": "BaseProductTagListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38786,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38783,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38784,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38785,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				},
				{
					"id": 38778,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38779,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38780,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38781,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38782,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38786,
						38783,
						38784,
						38785,
						38778,
						38779,
						38780,
						38781,
						38782
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36009,
					"name": "AdminProductTagListParams"
				}
			]
		},
		{
			"id": 38787,
			"name": "BaseProductType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38788,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38789,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38790,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38791,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38792,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38793,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38788,
						38789,
						38790,
						38791,
						38792,
						38793
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36037,
					"name": "AdminProductType"
				}
			]
		},
		{
			"id": 38827,
			"name": "AdminBaseReturnReasonPayload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 36233,
						"name": "AdminReturnReason",
						"package": "@medusajs/types"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "value"
							},
							{
								"type": "literal",
								"value": "label"
							},
							{
								"type": "literal",
								"value": "description"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 36241,
					"name": "AdminCreateReturnReason"
				},
				{
					"type": "reference",
					"target": 36246,
					"name": "AdminUpdateReturnReason"
				}
			]
		},
		{
			"id": 38819,
			"name": "BaseReturnReason",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38820,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38821,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38822,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38823,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38824,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38825,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38826,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38820,
						38821,
						38822,
						38823,
						38824,
						38825,
						38826
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36233,
					"name": "AdminReturnReason"
				}
			]
		},
		{
			"id": 38828,
			"name": "BaseReturnReasonListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38840,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35324,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 38837,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35321,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 38838,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35322,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 38839,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 35323,
						"name": "FindParams.order"
					}
				},
				{
					"id": 38829,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38830,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38831,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38832,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38833,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38834,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38835,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38836,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 34705,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38840,
						38837,
						38838,
						38839,
						38829,
						38830,
						38831,
						38832,
						38833,
						38834,
						38835,
						38836
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35320,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36251,
					"name": "AdminReturnReasonListParams"
				}
			]
		},
		{
			"id": 38794,
			"name": "BaseReturnItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38795,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38796,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38797,
					"name": "received_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38798,
					"name": "damaged_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38799,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38800,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38801,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38802,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38803,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38795,
						38796,
						38797,
						38798,
						38799,
						38800,
						38801,
						38802,
						38803
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36123,
					"name": "AdminReturnItem"
				}
			]
		},
		{
			"id": 38804,
			"name": "BaseReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38805,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38806,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38807,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38808,
					"name": "exchange_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38809,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38810,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38811,
					"name": "order_version",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38812,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38813,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38814,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38815,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38794,
							"name": "BaseReturnItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38816,
					"name": "received_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38817,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38818,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38805,
						38806,
						38807,
						38808,
						38809,
						38810,
						38811,
						38812,
						38813,
						38814,
						38815,
						38816,
						38817,
						38818
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36133,
					"name": "AdminReturn"
				}
			]
		},
		{
			"id": 38841,
			"name": "AdminUpsertStockLocationAddress",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38842,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38843,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38844,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38845,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38846,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38847,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38848,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38849,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38842,
						38843,
						38844,
						38845,
						38846,
						38847,
						38848,
						38849
					]
				}
			]
		},
		{
			"id": 38850,
			"name": "AdminCreateTaxRateRule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38851,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38852,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38851,
						38852
					]
				}
			]
		},
		{
			"id": 38853,
			"name": "AdminWorkflowExecutionExecution",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38854,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 36658,
								"name": "AdminWorkflowExecutionStep",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38854
					]
				}
			]
		},
		{
			"id": 36690,
			"name": "InventoryTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 36691,
					"name": "InventoryItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item details."
							}
						]
					},
					"children": [
						{
							"id": 36692,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36693,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36694,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36695,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36696,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36697,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mid code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36698,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36699,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36700,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36701,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36702,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36703,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36704,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36705,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36706,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36707,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36708,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36709,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36692,
								36693,
								36694,
								36695,
								36696,
								36697,
								36698,
								36699,
								36700,
								36701,
								36702,
								36703,
								36704,
								36705,
								36706,
								36707,
								36708,
								36709
							]
						}
					]
				},
				{
					"id": 36710,
					"name": "FilterableInventoryItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved inventory items."
							}
						]
					},
					"children": [
						{
							"id": 36711,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search term to search inventory items' attributes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36712,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36713,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36714,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKUs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34537,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36715,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36716,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS Codes to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34537,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36717,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by whether they require shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36711,
								36712,
								36713,
								36714,
								36715,
								36716,
								36717
							]
						}
					]
				},
				{
					"id": 36718,
					"name": "InventoryLevelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory level details."
							}
						]
					},
					"children": [
						{
							"id": 36719,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36720,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36721,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36722,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36723,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36724,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36725,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The available quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36726,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36727,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36728,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36729,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36719,
								36720,
								36721,
								36722,
								36723,
								36724,
								36725,
								36726,
								36727,
								36728,
								36729
							]
						}
					]
				},
				{
					"id": 36730,
					"name": "FilterableInventoryLevelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved inventory levels."
							}
						]
					},
					"children": [
						{
							"id": 36736,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36730,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36730,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 36737,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36730,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36730,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 36731,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36732,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36733,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`stocked_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36734,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`reserved_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36735,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`incoming_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36736,
								36737,
								36731,
								36732,
								36733,
								36734,
								36735
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36730,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 36738,
					"name": "ReservationItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation item details."
							}
						]
					},
					"children": [
						{
							"id": 36739,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reservation item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36740,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36741,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36742,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the reservation item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38487,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36743,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36744,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36745,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36746,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created by of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36747,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36748,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36749,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36750,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36739,
								36740,
								36741,
								36742,
								36743,
								36744,
								36745,
								36746,
								36747,
								36748,
								36749,
								36750
							]
						}
					]
				},
				{
					"id": 36751,
					"name": "FilterableReservationItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved reservation items."
							}
						]
					},
					"children": [
						{
							"id": 36752,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36754,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36755,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36756,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36757,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`description`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 34537,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 36758,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The \"created by\" values to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36759,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 34545,
										"name": "NumericalComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36752,
								36754,
								36755,
								36756,
								36757,
								36758,
								36759
							]
						}
					]
				},
				{
					"id": 36760,
					"name": "UpdateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36761,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36762,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.sku"
							}
						},
						{
							"id": 36763,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.origin_country"
							}
						},
						{
							"id": 36764,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.mid_code"
							}
						},
						{
							"id": 36765,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.material"
							}
						},
						{
							"id": 36766,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.weight"
							}
						},
						{
							"id": 36767,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.length"
							}
						},
						{
							"id": 36768,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.height"
							}
						},
						{
							"id": 36769,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.width"
							}
						},
						{
							"id": 36770,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.title"
							}
						},
						{
							"id": 36771,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 36772,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.thumbnail"
							}
						},
						{
							"id": 36773,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 36774,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.hs_code"
							}
						},
						{
							"id": 36775,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.requires_shipping"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36761,
								36762,
								36763,
								36764,
								36765,
								36766,
								36767,
								36768,
								36769,
								36770,
								36771,
								36772,
								36773,
								36774,
								36775
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 36776,
									"name": "CreateInventoryItemInput",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 36776,
					"name": "CreateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the inventory item to be created."
							}
						]
					},
					"children": [
						{
							"id": 36777,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36778,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36779,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36780,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36781,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36782,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36783,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36784,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 36785,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36786,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36787,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36788,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36789,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36790,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36777,
								36778,
								36779,
								36780,
								36781,
								36782,
								36783,
								36784,
								36785,
								36786,
								36787,
								36788,
								36789,
								36790
							]
						}
					]
				},
				{
					"id": 36791,
					"name": "CreateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36792,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36793,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36794,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36795,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36792,
								36793,
								36794,
								36795
							]
						}
					]
				},
				{
					"id": 36796,
					"name": "UpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level."
							}
						]
					},
					"children": [
						{
							"id": 36797,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36798,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36799,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36797,
								36798,
								36799
							]
						}
					]
				},
				{
					"id": 36800,
					"name": "BulkUpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
							}
						]
					},
					"children": [
						{
							"id": 36803,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36804,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36805,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36801,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36802,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36803,
								36804,
								36805,
								36801,
								36802
							]
						}
					]
				},
				{
					"id": 36806,
					"name": "BulkAdjustInventoryLevelInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 36807,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36808,
											"name": "inventory_item_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated inventory level."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36809,
											"name": "location_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36810,
											"name": "adjustment",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to adjust the inventory level by."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38487,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36808,
												36809,
												36810
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 36796,
								"name": "UpdateInventoryLevelInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36811,
					"name": "UpdateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in a reservation item."
							}
						]
					},
					"children": [
						{
							"id": 36812,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36813,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38487,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36814,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36815,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36816,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36817,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36812,
								36813,
								36814,
								36815,
								36816,
								36817
							]
						}
					]
				},
				{
					"id": 36818,
					"name": "CreateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reservation item to be created."
							}
						]
					},
					"children": [
						{
							"id": 36819,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36820,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36821,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 36822,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38487,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36823,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36824,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36825,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user or system that created the reservation. Can be any form of identification string."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36826,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An ID associated with an external third-party system that the reservation item is connected to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36827,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36819,
								36820,
								36821,
								36822,
								36823,
								36824,
								36825,
								36826,
								36827
							]
						}
					]
				},
				{
					"id": 36828,
					"name": "ReserveQuantityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 36829,
							"name": "locationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36830,
							"name": "lineItemId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 36831,
							"name": "salesChannelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36829,
								36830,
								36831
							]
						}
					]
				},
				{
					"id": 36832,
					"name": "IInventoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Inventory Module."
							}
						]
					},
					"children": [
						{
							"id": 36833,
							"name": "listInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36834,
									"name": "listInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36835,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36710,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36836,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36691,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36837,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36691,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36838,
							"name": "listAndCountInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36839,
									"name": "listAndCountInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36840,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36710,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36841,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36691,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36842,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 36691,
															"name": "InventoryItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36843,
							"name": "listReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36844,
									"name": "listReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36845,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36751,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36846,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36738,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36847,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36738,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36848,
							"name": "listAndCountReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36849,
									"name": "listAndCountReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36850,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36751,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36851,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36738,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36852,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 36738,
															"name": "ReservationItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36853,
							"name": "listInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36854,
									"name": "listInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36855,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36730,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36856,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36718,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36857,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36718,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36858,
							"name": "listAndCountInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36859,
									"name": "listAndCountInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36860,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36730,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36861,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36718,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36862,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 36718,
															"name": "InventoryLevelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36863,
							"name": "retrieveInventoryItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36864,
									"name": "retrieveInventoryItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36865,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36866,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36691,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36867,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36691,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36868,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36869,
									"name": "retrieveInventoryLevelByItemAndLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level based on its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36870,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36871,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36872,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36718,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36873,
							"name": "retrieveInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36874,
									"name": "retrieveInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory level by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36875,
											"name": "inventoryLevelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory level's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36876,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36718,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36877,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36718,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36878,
							"name": "retrieveReservationItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36879,
									"name": "retrieveReservationItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a reservation item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36880,
											"name": "reservationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36881,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36738,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36882,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36738,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36883,
							"name": "createReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36884,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36885,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36818,
													"name": "CreateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36886,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36738,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36887,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36888,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36818,
												"name": "CreateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36889,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36738,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36890,
							"name": "createInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36891,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36892,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36776,
													"name": "CreateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36893,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36691,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36894,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36895,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36776,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36896,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36691,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36897,
							"name": "createInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36898,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36899,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory levels to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36791,
													"name": "CreateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36900,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36718,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36901,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36902,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory level to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36791,
												"name": "CreateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36903,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36718,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36904,
							"name": "updateInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36905,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36906,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36800,
													"name": "BulkUpdateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36907,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36718,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36908,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36909,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36800,
												"name": "BulkUpdateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36910,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36718,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36911,
							"name": "updateInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36912,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36913,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36760,
												"name": "UpdateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36914,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36691,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36915,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36916,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36760,
													"name": "UpdateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36917,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36691,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36918,
							"name": "updateReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36919,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36920,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36811,
												"name": "UpdateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36921,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36738,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 36922,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36923,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the reservation items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36811,
													"name": "UpdateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 36924,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36738,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36925,
							"name": "deleteReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36926,
									"name": "deleteReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation item by its associated line item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36927,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36928,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36929,
							"name": "restoreReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36930,
									"name": "restoreReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation items are successfully deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36931,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID(s) of the line item(s)."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36932,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36933,
							"name": "deleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36934,
									"name": "deleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36935,
											"name": "reservationItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation items' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36936,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36937,
							"name": "softDeleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36938,
									"name": "softDeleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36939,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36940,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36941,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34879,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36939,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36942,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36943,
							"name": "restoreReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36944,
									"name": "restoreReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36945,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36946,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36947,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the reservation's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34882,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36945,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36948,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36949,
							"name": "deleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36950,
									"name": "deleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory items are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36951,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36952,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36953,
							"name": "softDeleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36954,
									"name": "softDeleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36955,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36956,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36957,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34879,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36955,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36958,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36959,
							"name": "restoreInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36960,
									"name": "restoreInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36961,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36962,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36963,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory item's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`location_levels`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34882,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36961,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36964,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36965,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36966,
									"name": "deleteInventoryItemLevelByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory item's level by the associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36967,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36968,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36969,
							"name": "deleteReservationItemByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36970,
									"name": "deleteReservationItemByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when then reservation items are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36971,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36972,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36973,
							"name": "deleteInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36974,
									"name": "deleteInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level by its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory level is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36975,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36976,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36977,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36978,
							"name": "deleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36979,
									"name": "deleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory levels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36980,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 36981,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36982,
							"name": "softDeleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36983,
									"name": "softDeleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36984,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36985,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36986,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34879,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36984,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36987,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36988,
							"name": "restoreInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36989,
									"name": "restoreInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 36990,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 36991,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 36992,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory level's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34882,
												"typeArguments": [
													{
														"type": "reference",
														"target": 36990,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 36993,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 36994,
							"name": "adjustInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 36995,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adjusts the inventory quantity of an item in a location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 36996,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 36997,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 36998,
																"name": "inventoryItemId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 36999,
																"name": "locationId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 37000,
																"name": "adjustment",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 38487,
																	"name": "BigNumberInput",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	36998,
																	36999,
																	37000
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 37001,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36718,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37002,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37003,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37004,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37005,
											"name": "adjustment",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38487,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37006,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36718,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37007,
							"name": "confirmInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37008,
									"name": "confirmInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the quantity is available."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37009,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37010,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37011,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to confirm its availability."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38487,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37012,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37013,
							"name": "retrieveAvailableQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37014,
									"name": "retrieveAvailableQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the available quantity of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The available quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37015,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37016,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37017,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38474,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37018,
							"name": "retrieveStockedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37019,
									"name": "retrieveStockedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stocked quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37020,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37021,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37022,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38474,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37023,
							"name": "retrieveReservedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37024,
									"name": "retrieveReservedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reserved quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37025,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37026,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37027,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38474,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								36833,
								36838,
								36843,
								36848,
								36853,
								36858,
								36863,
								36868,
								36873,
								36878,
								36883,
								36890,
								36897,
								36904,
								36911,
								36918,
								36925,
								36929,
								36933,
								36937,
								36943,
								36949,
								36953,
								36959,
								36965,
								36969,
								36973,
								36978,
								36982,
								36988,
								36994,
								37007,
								37013,
								37018,
								37023
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37279,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						36691,
						36710,
						36718,
						36730,
						36738,
						36751,
						36760,
						36776,
						36791,
						36796,
						36800,
						36811,
						36818,
						36828,
						36832
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						36806
					]
				}
			]
		},
		{
			"id": 38190,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38191,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38192,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38193,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38194,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38195,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38196,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38197,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38198,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38192,
								38193,
								38194,
								38195,
								38196,
								38197,
								38198
							]
						}
					]
				}
			}
		},
		{
			"id": 38199,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38200,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 38201,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38200,
						38201
					]
				}
			]
		},
		{
			"id": 38202,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38203,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38204,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 38199,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38199,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 38205,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 38206,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38207,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 38208,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38207,
														38208
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38209,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 38210,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38190,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38211,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38212,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38213,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38214,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 38190,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38213,
											38214
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 38215,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38203,
						38204,
						38205,
						38209,
						38210,
						38211,
						38215
					]
				}
			]
		},
		{
			"id": 38216,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38217,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38218,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38217,
						38218
					]
				}
			]
		},
		{
			"id": 38219,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38220,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38221,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38220,
						38221
					]
				}
			]
		},
		{
			"id": 38222,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38223,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38224,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38225,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38226,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38227,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38228,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 38229,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 38216,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 38230,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 38231,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 38232,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 38233,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": 38219,
																"name": "JoinerDirective",
																"package": "@medusajs/types"
															}
														}
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38227,
											38228,
											38229,
											38230
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 38234,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 38235,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38216,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38236,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38237,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 38238,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 38239,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38219,
											"name": "JoinerDirective",
											"package": "@medusajs/types"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38223,
						38224,
						38225,
						38234,
						38235,
						38236
					]
				}
			]
		},
		{
			"id": 38240,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38241,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38242,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38241,
						38242
					]
				}
			]
		},
		{
			"id": 38243,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignatures": [
				{
					"id": 38244,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 38245,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38246,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38247,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 38248,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38216,
											"name": "JoinerArgument",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 38249,
									"name": "expands",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38243,
										"name": "RemoteNestedExpands",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38247,
										38248,
										38249
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 38250,
			"name": "InternalJoinerServiceConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 38202,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "relationships"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38251,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38252,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 38190,
												"name": "JoinerRelationship",
												"package": "@medusajs/types"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38252
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38253,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38254,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38255,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38256,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 38250,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38257,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38250,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38258,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 38259,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38216,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38260,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 38243,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38254,
						38255,
						38256,
						38257,
						38258,
						38259,
						38260
					]
				}
			]
		},
		{
			"id": 38309,
			"name": "PlannerActionLinkDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Link descriptor containing metadata about the link's\nmodules and models."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38310,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38311,
							"name": "fromModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38312,
							"name": "toModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38313,
							"name": "fromModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38314,
							"name": "toModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38311,
								38312,
								38313,
								38314
							]
						}
					]
				}
			}
		},
		{
			"id": 38315,
			"name": "LinkMigrationsPlannerAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of actions prepared and executed by\nthe \"ILinkMigrationsPlanner\"."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 38316,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38317,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "create"
											},
											{
												"type": "literal",
												"value": "update"
											},
											{
												"type": "literal",
												"value": "notify"
											}
										]
									}
								},
								{
									"id": 38318,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38309,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38319,
									"name": "sql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38320,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38317,
										38318,
										38319,
										38320
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38321,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38322,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "noop"
									}
								},
								{
									"id": 38323,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38324,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38309,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38322,
										38323,
										38324
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38325,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38326,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "delete"
									}
								},
								{
									"id": 38327,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38309,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38328,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38326,
										38327,
										38328
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38329,
			"name": "ILinkMigrationsPlanner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38330,
					"name": "createPlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38331,
							"name": "createPlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38315,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38332,
					"name": "executePlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38333,
							"name": "executePlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38334,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38315,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						38330,
						38332
					]
				}
			]
		},
		{
			"id": 38261,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38262,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38263,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38264,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38265,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34510,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38266,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38267,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38268,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38269,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38270,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34510,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38271,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38272,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38273,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38274,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 38275,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38276,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38277,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38278,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38279,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 38280,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38281,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38282,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38283,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38284,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 38285,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38286,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38287,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38288,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 38289,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34879,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38290,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38291,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38292,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38293,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 38294,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34882,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38295,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38439,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						38262,
						38267,
						38272,
						38277,
						38282,
						38286,
						38291
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 37279,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 37041,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37042,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37043,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37044,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37045,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37046,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37047,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37048,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37049,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37050,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37051,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37052,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37053,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37054,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37055,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37056,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37057,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37058,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37059,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37060,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37061,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 37062,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37063,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37064,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37065,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37066,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 37067,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37068,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37069,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37070,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37071,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 37072,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37073,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37074,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37075,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37076,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 37077,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37078,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37079,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37080,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37081,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 37082,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37083,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37084,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37085,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37086,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37087,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37088,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37089,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37090,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37091,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37092,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37093,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37094,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 37095,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37096,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37097,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37098,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37043,
								37047,
								37051,
								37055,
								37058,
								37063,
								37068,
								37073,
								37078,
								37083,
								37087,
								37091,
								37095
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37042
					]
				}
			]
		},
		{
			"id": 37099,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37100,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37106,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37101,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 37102,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 37105,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 37106,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 37103,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 37104,
															"name": "__type",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37106,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 37107,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 37108,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 37107,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 37109,
					"name": "CustomModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37110,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37111,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37112,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37113,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37114,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37115,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37111,
										37112,
										37113,
										37114,
										37115
									]
								}
							]
						}
					}
				},
				{
					"id": 37116,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37117,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37118,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "internal"
									}
								},
								{
									"id": 37119,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "isolated"
											}
										]
									}
								},
								{
									"id": 37120,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37121,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37109,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37122,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 37232,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 37123,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37124,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37125,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37126,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37118,
										37119,
										37120,
										37121,
										37122,
										37123,
										37124,
										37125,
										37126
									]
								}
							]
						}
					}
				},
				{
					"id": 37127,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37128,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37129,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "external"
									}
								},
								{
									"id": 37130,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37109,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37131,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37132,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37133,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 37134,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 37135,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37133,
														37134,
														37135
													]
												}
											]
										}
									}
								},
								{
									"id": 37136,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37137,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37138,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37129,
										37130,
										37131,
										37136,
										37137,
										37138
									]
								}
							]
						}
					}
				},
				{
					"id": 37139,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37140,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37141,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 37142,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37147,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37143,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37144,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37145,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 37116,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 37127,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 37146,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37232,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37141,
										37142,
										37143,
										37144,
										37145,
										37146
									]
								}
							]
						}
					}
				},
				{
					"id": 37147,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37148,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37149,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37150,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37151,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 37152,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37153,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37154,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 37155,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37157,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 37116,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 37127,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37149,
										37150,
										37151,
										37152,
										37153,
										37154,
										37155,
										37157
									]
								}
							]
						}
					}
				},
				{
					"id": 37158,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37159,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37160,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37161,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37162,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37163,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37164,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37116,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37160,
										37161,
										37162,
										37163,
										37164
									]
								}
							]
						}
					}
				},
				{
					"id": 37165,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 38855,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37166,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37167,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37168,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37169,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 37147,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37167,
												37168,
												37169
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37170,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37171,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37172,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 37205,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37173,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 37147,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37172,
												37173
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37174,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37180,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37175,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37176,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34664,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37177,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37180,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 37178,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37042,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37179,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37176,
										37177,
										37178,
										37179
									]
								}
							]
						}
					}
				},
				{
					"id": 37181,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37182,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 37183,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37184,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 37174,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37185,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37116,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 37186,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 37187,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 37188,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 37189,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											37188,
											37189
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 37190,
					"name": "LinkModulesExtraFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37191,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37192,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "date"
													},
													{
														"type": "literal",
														"value": "time"
													},
													{
														"type": "literal",
														"value": "datetime"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "blob"
													},
													{
														"type": "literal",
														"value": "uint8array"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "enumArray"
													},
													{
														"type": "literal",
														"value": "enum"
													},
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "integer"
													},
													{
														"type": "literal",
														"value": "smallint"
													},
													{
														"type": "literal",
														"value": "tinyint"
													},
													{
														"type": "literal",
														"value": "mediumint"
													},
													{
														"type": "literal",
														"value": "float"
													},
													{
														"type": "literal",
														"value": "double"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "decimal"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "uuid"
													},
													{
														"type": "literal",
														"value": "text"
													}
												]
											}
										},
										{
											"id": 37193,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37194,
											"name": "nullable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 37195,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Mikro-orm options for the column"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37192,
												37193,
												37194,
												37195
											]
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 37196,
					"name": "LinkDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A link for two records of linked data models.\n\nThe keys are the names of each module, and their value is an object that holds the ID of the linked data model's record."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 37197,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 37198,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 37199,
													"name": "moduleName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37200,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"indexSignatures": [
														{
															"id": 37201,
															"name": "__index",
															"variant": "signature",
															"kind": 8192,
															"flags": {},
															"parameters": [
																{
																	"id": 37202,
																	"name": "fieldName",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37203,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37204,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37204
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37205,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 38202,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37206,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37207,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37208,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37229,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 37209,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 37210,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 37211,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 37212,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 37213,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 37214,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 37215,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 37216,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									37214,
																									37215,
																									37216
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 37217,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 37229,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	37211,
																	37212,
																	37217
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 37218,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37219,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37220,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 37221,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 37222,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 37223,
											"name": "extraDataFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37224,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37225,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37226,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37227,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37228,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 37190,
																"name": "LinkModulesExtraFields",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37226,
																37227,
																37228
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37207,
												37208,
												37209,
												37218,
												37219,
												37220,
												37221,
												37222,
												37223,
												37224
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37229,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 38190,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37230,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37231,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37231
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37232,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37248,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 37100,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37233,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37234,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37248,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 37235,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37181,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37236,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 37237,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37238,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37174,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 37239,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 37116,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 37240,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 37241,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37242,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37174,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 37243,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 37116,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 37244,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 37245,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37246,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37174,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 37247,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 37116,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37234,
										37235
									]
								},
								{
									"title": "Methods",
									"children": [
										37236,
										37240,
										37244
									]
								}
							]
						}
					}
				},
				{
					"id": 37249,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37250,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37251,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37252,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 37253,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37254,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37255,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37256,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 37257,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37258,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37259,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37260,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37261,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 37262,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		37262
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 37263,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 37264,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37252,
												37253,
												37254,
												37255,
												37256,
												37257,
												37258,
												37259,
												37260,
												37263,
												37264
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37250
							]
						}
					]
				},
				{
					"id": 37265,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37266,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37267,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 37268,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37269,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignatures": [
												{
													"id": 37270,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 37271,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 37100,
														"typeArguments": [
															{
																"type": "reference",
																"target": 34759,
																"name": "RepositoryService",
																"package": "@medusajs/types"
															}
														],
														"name": "Constructor",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37267,
										37268
									]
								}
							]
						}
					}
				},
				{
					"id": 37272,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 37116,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 37127,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 37273,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37274,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 37275,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37276,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 38222,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 37277,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 37278,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38240,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 37279,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 34990,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 36832,
							"name": "IInventoryService"
						},
						{
							"type": "reference",
							"target": 37463,
							"name": "INotificationModuleService"
						},
						{
							"type": "reference",
							"target": 37620,
							"name": "IStockLocationService"
						},
						{
							"type": "reference",
							"target": 37845,
							"name": "IWorkflowEngineService"
						},
						{
							"type": "reference",
							"target": 38261,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 37293,
					"name": "IMedusaInternalService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37294,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 37295,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 37397,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "IMedusaInternalService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 37296,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37297,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37298,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37299,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37300,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38025,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37395,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37301,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37302,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 37303,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37304,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38025,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37395,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37305,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37306,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37307,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 37308,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 34727,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 37309,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 37310,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37311,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37312,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37313,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37314,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 37315,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 34727,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 37316,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 37317,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37318,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38025,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 37395,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37319,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37320,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37321,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37322,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37323,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37324,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 37325,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38025,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37395,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37326,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37327,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37328,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37329,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37330,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37331,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 37332,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38025,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37395,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37333,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37334,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37335,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37336,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 37337,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 34727,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 37338,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 37339,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37336,
																37339
															]
														}
													]
												}
											}
										},
										{
											"id": 37340,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37341,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37342,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 37343,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 37344,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 37345,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 34727,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 37346,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 37347,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	37344,
																	37347
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 37348,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37349,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37350,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37351,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37352,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37353,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37354,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37355,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37356,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37357,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 37358,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37359,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37360,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 37361,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37362,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37363,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37364,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37365,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 37366,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 34727,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 37367,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37365
															]
														}
													]
												}
											}
										},
										{
											"id": 37368,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37369,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37370,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37371,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37372,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 37373,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 37374,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38025,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 37395,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37375,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37376,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37377,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 37379,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38025,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 37395,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37380,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37381,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37382,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37383,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38025,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37395,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37384,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37385,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 37386,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38025,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37395,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37387,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37388,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37389,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37390,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34751,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38025,
														"typeArguments": [
															{
																"type": "reference",
																"target": 37395,
																"name": "TEntity",
																"package": "@medusajs/types",
																"qualifiedName": "IMedusaInternalService.TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "InferEntityType",
														"package": "@medusajs/types"
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37391,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 37392,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37393,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 38025,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 37395,
																			"name": "TEntity",
																			"package": "@medusajs/types",
																			"qualifiedName": "IMedusaInternalService.TEntity",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferEntityType",
																	"package": "@medusajs/types"
																}
															}
														},
														{
															"id": 37394,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 34754,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37393,
																37394
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								37294
							]
						},
						{
							"title": "Methods",
							"children": [
								37296,
								37305,
								37312,
								37319,
								37326,
								37349,
								37369,
								37375,
								37380,
								37387
							]
						}
					],
					"typeParameters": [
						{
							"id": 37395,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37396,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 37397,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 37398,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37399,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37400,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37100,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37400
									]
								}
							]
						}
					}
				},
				{
					"id": 37401,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37402,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37403,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 37398,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 37404,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37405,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37403,
										37404,
										37405
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37249,
						37279,
						37293
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37100,
						37107,
						37108,
						37109,
						37116,
						37127,
						37139,
						37147,
						37158,
						37165,
						37170,
						37174,
						37181,
						37186,
						37190,
						37196,
						37205,
						37229,
						37232,
						37265,
						37272,
						37273,
						37398,
						37401
					]
				}
			]
		},
		{
			"id": 38855,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 37127,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 37116,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 37406,
			"name": "NotificationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37407,
					"name": "Attachment",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The structure for attachments in a notification."
							}
						]
					},
					"children": [
						{
							"id": 37408,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The content of the attachment, encoded as a base64 string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37409,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the attachment."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37410,
							"name": "content_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MIME type of the attachment."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37411,
							"name": "disposition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The disposition of the attachment, e.g., \"inline\" or \"attachment\"."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37412,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID, if the attachment is meant to be referenced within the body of the message."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37408,
								37409,
								37410,
								37411,
								37412
							]
						}
					]
				},
				{
					"id": 37413,
					"name": "NotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification's data."
							}
						]
					},
					"children": [
						{
							"id": 37414,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37415,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37416,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sender of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37417,
							"name": "attachments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional attachments for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37407,
											"name": "Attachment",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 37418,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37419,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37420,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 37421,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37422,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37423,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37424,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37425,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37426,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification in the external system, if applicable"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37427,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37428,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the notification provider"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37431,
								"name": "NotificationProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37429,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the notification was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37430,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of the notification"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "pending"
									},
									{
										"type": "literal",
										"value": "success"
									},
									{
										"type": "literal",
										"value": "failure"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37414,
								37415,
								37416,
								37417,
								37418,
								37419,
								37420,
								37421,
								37422,
								37423,
								37424,
								37425,
								37426,
								37427,
								37428,
								37429,
								37430
							]
						}
					]
				},
				{
					"id": 37431,
					"name": "NotificationProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the notification provider"
							}
						]
					},
					"children": [
						{
							"id": 37432,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37433,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37434,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A user-friendly name of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37435,
							"name": "channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supported channels by the notification provider."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37432,
								37433,
								37434,
								37435
							]
						}
					]
				},
				{
					"id": 37436,
					"name": "FilterableNotificationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved notifications."
							}
						]
					},
					"children": [
						{
							"id": 37446,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37436,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37436,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 37447,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37436,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37436,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 37437,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search through the notifications' attributes, such as trigger types and recipients, using this search term."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37438,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the recipient of the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37439,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37440,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the template name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37441,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the trigger type."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37442,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the resource that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37443,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "T* Filter based on the resource type that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37444,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the customer ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37445,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters a notification based on when it was sent and created in the database"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 34705,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37446,
								37447,
								37437,
								37438,
								37439,
								37440,
								37441,
								37442,
								37443,
								37444,
								37445
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37436,
									"name": "FilterableNotificationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 37452,
					"name": "CreateNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification to send and have created in the DB"
							}
						]
					},
					"children": [
						{
							"id": 37453,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37454,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37455,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37456,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 37457,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37458,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37459,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37460,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37461,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37462,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An idempotency key that ensures the same notification is not sent multiple times."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37453,
								37454,
								37455,
								37456,
								37457,
								37458,
								37459,
								37460,
								37461,
								37462
							]
						}
					]
				},
				{
					"id": 37499,
					"name": "ProviderSendNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the notification to send."
							}
						]
					},
					"children": [
						{
							"id": 37500,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37501,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sender of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37502,
							"name": "attachments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional attachments for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37407,
											"name": "Attachment",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 37503,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37504,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37505,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37500,
								37501,
								37502,
								37503,
								37504,
								37505
							]
						}
					]
				},
				{
					"id": 37506,
					"name": "ProviderSendNotificationResultsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of sending the notification"
							}
						]
					},
					"children": [
						{
							"id": 37507,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification in the external system, if provided in the response"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37507
							]
						}
					]
				},
				{
					"id": 37508,
					"name": "INotificationProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37509,
							"name": "send",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37510,
									"name": "send",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The result of sending the notification."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37511,
											"name": "notification",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "All information needed to send a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37499,
												"name": "ProviderSendNotificationDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37506,
												"name": "ProviderSendNotificationResultsDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37509
							]
						}
					]
				},
				{
					"id": 37448,
					"name": "LocalNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 37449,
					"name": "SendgridNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37450,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37451,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37450,
								37451
							]
						}
					]
				},
				{
					"id": 37463,
					"name": "INotificationModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Notification Module."
							}
						]
					},
					"children": [
						{
							"id": 37464,
							"name": "createNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37465,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send multiple notifications, and store the requests in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sent notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37466,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notifications to be sent."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37452,
													"name": "CreateNotificationDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 37467,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37413,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37468,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification, and store the request in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sent notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37469,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification to be sent."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37452,
												"name": "CreateNotificationDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37470,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37413,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37471,
							"name": "retrieveNotification",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37472,
									"name": "retrieveNotification",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a notification by its ID"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37473,
											"name": "notificationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the notification to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37474,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notification is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37413,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37475,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37413,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37476,
							"name": "listNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37477,
									"name": "listNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37478,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37436,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37479,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37413,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37480,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37413,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37481,
							"name": "listAndCountNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37482,
									"name": "listAndCountNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37483,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37436,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37484,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37413,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37485,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 37413,
															"name": "NotificationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37464,
								37471,
								37476,
								37481
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37279,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37407,
						37413,
						37431,
						37436,
						37452,
						37499,
						37506,
						37508,
						37448,
						37449,
						37463
					]
				}
			]
		},
		{
			"id": 38335,
			"name": "OrderWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38336,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
							"qualifiedName": "CustomerDTO"
						},
						"name": "CustomerDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38337,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/region/common.ts",
							"qualifiedName": "RegionDTO"
						},
						"name": "RegionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38336,
						38337
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
						"qualifiedName": "OrderDTO"
					},
					"name": "OrderDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38338,
			"name": "CreatePriceListPriceWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38339,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38340,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38341,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38342,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38343,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38344,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38339,
						38340,
						38341,
						38342,
						38343,
						38344
					]
				}
			]
		},
		{
			"id": 38345,
			"name": "UpdatePriceListPriceWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38346,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38347,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38348,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38349,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38350,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38351,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 38352,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38346,
						38347,
						38348,
						38349,
						38350,
						38351,
						38352
					]
				}
			]
		},
		{
			"id": 38353,
			"name": "CreatePriceListWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38354,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38355,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38356,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38357,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38358,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
							"qualifiedName": "PriceListStatus"
						},
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38359,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38360,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38338,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38354,
						38355,
						38356,
						38357,
						38358,
						38359,
						38360
					]
				}
			]
		},
		{
			"id": 38361,
			"name": "UpdatePriceListWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38362,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38363,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38364,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38365,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38366,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 38367,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
							"qualifiedName": "PriceListStatus"
						},
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38368,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38362,
						38363,
						38364,
						38365,
						38366,
						38367,
						38368
					]
				}
			]
		},
		{
			"id": 38369,
			"name": "UpdatePriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38370,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38371,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38345,
							"name": "UpdatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38370,
						38371
					]
				}
			]
		},
		{
			"id": 38372,
			"name": "BatchPriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38373,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38374,
					"name": "create",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38338,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38375,
					"name": "update",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38345,
							"name": "UpdatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38376,
					"name": "delete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38373,
						38374,
						38375,
						38376
					]
				}
			]
		},
		{
			"id": 38377,
			"name": "BatchPriceListPricesWorkflowResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38378,
					"name": "created",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
								"qualifiedName": "PriceDTO"
							},
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38379,
					"name": "updated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
								"qualifiedName": "PriceDTO"
							},
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38380,
					"name": "deleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38378,
						38379,
						38380
					]
				}
			]
		},
		{
			"id": 38381,
			"name": "CreatePriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38382,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38383,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38338,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38382,
						38383
					]
				}
			]
		},
		{
			"id": 38384,
			"name": "UpdatePriceListPriceWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38385,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38369,
							"name": "UpdatePriceListPricesWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38386,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38385,
						38386
					]
				}
			]
		},
		{
			"id": 38387,
			"name": "CreatePriceListsWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38388,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 38353,
							"name": "CreatePriceListWorkflowInputDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 38389,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38388,
						38389
					]
				}
			]
		},
		{
			"id": 38390,
			"name": "CreatePriceListPricesWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38391,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 38353,
											"name": "CreatePriceListWorkflowInputDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "prices"
										}
									],
									"name": "Pick",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 38392,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38393,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38393
												]
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 38394,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38391,
						38394
					]
				}
			]
		},
		{
			"id": 38395,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38396,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38397,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38396,
						38397
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 34531,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 38398,
			"name": "AddPromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38399,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38400,
							"name": "rule_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
									"qualifiedName": "PromotionRuleTypes"
								},
								"name": "PromotionRuleTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38401,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38402,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38403,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38404,
											"name": "rules",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
														"qualifiedName": "CreatePromotionRuleDTO"
													},
													"name": "CreatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38403,
												38404
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38400,
								38401
							]
						}
					]
				}
			}
		},
		{
			"id": 38405,
			"name": "RemovePromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38406,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38407,
							"name": "rule_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
									"qualifiedName": "PromotionRuleTypes"
								},
								"name": "PromotionRuleTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38408,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38409,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38410,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38411,
											"name": "rule_ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38410,
												38411
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38407,
								38408
							]
						}
					]
				}
			}
		},
		{
			"id": 38412,
			"name": "UpdatePromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38413,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38414,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
										"qualifiedName": "UpdatePromotionRuleDTO"
									},
									"name": "UpdatePromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38414
							]
						}
					]
				}
			}
		},
		{
			"id": 37512,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37513,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37514,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37515,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37516,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37517,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37518,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 37519,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 37520,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37515,
										37516,
										37517
									]
								}
							]
						}
					}
				},
				{
					"id": 37521,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37522,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37523,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37524,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37525,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37526,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37527,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37528,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37529,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37530,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37531,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37532,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37533,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 37534,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37535,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37536,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37537,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37538,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 37539,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37540,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37541,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37542,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37543,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37544,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37545,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37546,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37547,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37548,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37549,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37550,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 37551,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 37552,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37553,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37554,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37555,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37522
							]
						},
						{
							"title": "Methods",
							"children": [
								37523,
								37527,
								37530,
								37535,
								37540,
								37544,
								37547,
								37552
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37521
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37513
					]
				}
			]
		},
		{
			"id": 38415,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 38416,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 38417,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38416,
						38417
					]
				}
			]
		},
		{
			"id": 38418,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38419,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 38420,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38421,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 38422,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 38423,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38419,
						38420
					]
				}
			]
		},
		{
			"id": 38425,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38426,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38427,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38428,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 34909,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34909,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 38429,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38430,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 38431,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38418,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34909,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 38432,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38433,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 38434,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38435,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 38436,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 38437,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 34913,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38436,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34913,
													"typeArguments": [
														{
															"type": "reference",
															"target": 38436,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 38438,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						38426,
						38429,
						38432,
						38434
					]
				}
			]
		},
		{
			"id": 38439,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 38440,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 38441,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 38450,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 38442,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 38450,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 38443,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38444,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 38445,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38446,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38447,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 38425,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38448,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38449,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38440,
						38441,
						38442,
						38443,
						38444,
						38445,
						38446,
						38447,
						38448,
						38449
					]
				}
			],
			"typeParameters": [
				{
					"id": 38450,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 37556,
			"name": "StockLocationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37557,
					"name": "StockLocationAddressDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37558,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37559,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37560,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 1 of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37561,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 2 of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37562,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The company of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37563,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37564,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37565,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37566,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37567,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37568,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 34556,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37569,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 37570,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 37571,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37559,
										37560,
										37561,
										37562,
										37563,
										37564,
										37565,
										37566,
										37567,
										37568,
										37569,
										37570,
										37571
									]
								}
							]
						}
					}
				},
				{
					"id": 37572,
					"name": "StockLocationDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37573,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37574,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37575,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37576,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37577,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37578,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the stock location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37557,
										"name": "StockLocationAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37579,
									"name": "fulfillment_sets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fulfillment sets for the location"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-set.ts",
												"qualifiedName": "FulfillmentSetDTO"
											},
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37580,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 37581,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 37582,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37574,
										37575,
										37576,
										37577,
										37578,
										37579,
										37580,
										37581,
										37582
									]
								}
							]
						}
					}
				},
				{
					"id": 37583,
					"name": "StockLocationExpandedDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 37572,
								"name": "StockLocationDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37584,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37585,
											"name": "sales_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37585
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37586,
					"name": "FilterableStockLocationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved stock locations."
							}
						]
					},
					"children": [
						{
							"id": 37590,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37586,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37586,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 37591,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37586,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37586,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 37587,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search parameter for stock location names"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37588,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 37589,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37590,
								37591,
								37587,
								37588,
								37589
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37586,
									"name": "FilterableStockLocationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 37592,
					"name": "StockLocationAddressInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address Input"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37593,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37594,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37595,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37596,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37597,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37598,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37599,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37600,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37601,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 34556,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37594,
										37595,
										37596,
										37597,
										37598,
										37599,
										37600,
										37601
									]
								}
							]
						}
					}
				},
				{
					"id": 37602,
					"name": "CreateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to create a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37603,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37604,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37605,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37606,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 37592,
												"name": "StockLocationAddressInput",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 37607,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 34556,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37604,
										37605,
										37606,
										37607
									]
								}
							]
						}
					}
				},
				{
					"id": 37608,
					"name": "UpdateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to update a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37609,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37610,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37611,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 37612,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37592,
										"name": "StockLocationAddressInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37613,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 34556,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37610,
										37611,
										37612,
										37613
									]
								}
							]
						}
					}
				},
				{
					"id": 37614,
					"name": "UpsertStockLocationInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stock location to create or update. If the "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property isn't provided,\nthe stock location is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"children": [
						{
							"id": 37615,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37616,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37617,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37592,
								"name": "StockLocationAddressInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37618,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 34556,
								"name": "MetadataType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37619,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location, if updating."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37615,
								37616,
								37617,
								37618,
								37619
							]
						}
					]
				},
				{
					"id": 37620,
					"name": "IStockLocationService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Stock Location Module."
							}
						]
					},
					"children": [
						{
							"id": 37621,
							"name": "listStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37622,
									"name": "listStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations({\n  id: [\"sloc_123\", \"sloc_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37623,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37586,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37624,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37572,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37625,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37572,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37626,
							"name": "listAndCountStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37627,
									"name": "listAndCountStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations along with the total count of available stock locations satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations({\n    id: [\"sloc_123\", \"sloc_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37628,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37586,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37629,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37572,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37630,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 37572,
															"name": "StockLocationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37631,
							"name": "retrieveStockLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37632,
									"name": "retrieveStockLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation =\n  await stockLocationModuleService.retrieveStockLocation(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37633,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37634,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37572,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37635,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37572,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37636,
							"name": "createStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37637,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a stock location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation = await stockLocationModuleService.createStockLocations(\n  {\n    name: \"Warehouse\",\n    address: {\n      address_1: \"1855 Powder Mill Rd\",\n      country_code: \"us\",\n    },\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37638,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37602,
												"name": "CreateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37639,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37572,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37640,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.createStockLocations([\n    {\n      name: \"Warehouse\",\n      address: {\n        address_1: \"1855 Powder Mill Rd\",\n        country_code: \"us\",\n      },\n    },\n    {\n      name: \"Warehouse 2\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37641,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock locations to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37602,
													"name": "CreateStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 37642,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37572,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37643,
							"name": "upsertStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37644,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates stock location service nexts if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service nexts."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37645,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of Make all properties in t optional"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37614,
													"name": "UpsertStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 37646,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37572,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37647,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates a stock location service next if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service next."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37648,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37614,
												"name": "UpsertStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37649,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37572,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37650,
							"name": "updateStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37651,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations([\n    {\n      id: \"sloc_123\",\n      name: \"Warehouse\",\n    },\n    {\n      id: \"sloc_321\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37652,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37653,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37608,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37654,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37572,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 37655,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations matching the specified filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations(\n    {\n      name: \"Warehouse\",\n    },\n    {\n      address_id: \"laddr_123\",\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37656,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters specifying which stock locations to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37586,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37657,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37608,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37658,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37572,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37659,
							"name": "deleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37660,
									"name": "deleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stock location is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.deleteStockLocations(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37661,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 37662,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37663,
							"name": "softDeleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37664,
									"name": "softDeleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the stock location through this relation, such as the IDs of associated address.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.softDeleteStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 37665,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 37666,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37667,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34879,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37665,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37668,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37669,
							"name": "restoreStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37670,
									"name": "restoreStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the stock location through this relation,\nsuch as the ID of associated address.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.restoreStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 37671,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 37672,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 37673,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stock location. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stock location's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`address`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34882,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37671,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37674,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37621,
								37626,
								37631,
								37636,
								37643,
								37650,
								37659,
								37663,
								37669
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37279,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37586,
						37614,
						37620
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37557,
						37572,
						37583,
						37592,
						37602,
						37608
					]
				}
			]
		},
		{
			"id": 38474,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38475,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38476,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 38482,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38477,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 38478,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38479,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 38480,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38481,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38475,
						38476,
						38477
					]
				},
				{
					"title": "Methods",
					"children": [
						38478,
						38480
					]
				}
			]
		},
		{
			"id": 38482,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38483,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38484,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38484
							]
						}
					],
					"indexSignatures": [
						{
							"id": 38485,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 38486,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 38487,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 38482,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 38474,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 38488,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 38474,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 38451,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38452,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38453,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38454,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38455,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38456,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38457,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38458,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38459,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38460,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38461,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38462,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38463,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38464,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38465,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38466,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38467,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38468,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38469,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38470,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38471,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38472,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38473,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38488,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38453,
								38454,
								38455,
								38456,
								38457,
								38458,
								38459,
								38460,
								38461,
								38462,
								38463,
								38464,
								38465,
								38466,
								38467,
								38468,
								38469,
								38470,
								38471,
								38472,
								38473
							]
						}
					]
				}
			}
		},
		{
			"id": 37688,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37689,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 34923,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37689
					]
				}
			]
		},
		{
			"id": 37690,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37691,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37692,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37693,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37694,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37695,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 37696,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37695,
														37696
													]
												}
											]
										}
									}
								},
								{
									"id": 37697,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37698,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37699,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 37700,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37699,
														37700
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37693,
										37697
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37692
							]
						}
					]
				},
				{
					"id": 37701,
					"name": "InventoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37702,
							"name": "CreateInventoryItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37703,
									"name": "sku",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37704,
									"name": "hs_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37705,
									"name": "weight",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37706,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37707,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37708,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37709,
									"name": "origin_country",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37710,
									"name": "mid_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37711,
									"name": "material",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37712,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37713,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37714,
									"name": "thumbnail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37715,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37703,
										37704,
										37705,
										37706,
										37707,
										37708,
										37709,
										37710,
										37711,
										37712,
										37713,
										37714,
										37715
									]
								}
							]
						},
						{
							"id": 37716,
							"name": "CreateInventoryItemsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37717,
									"name": "inventoryItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37702,
											"name": "CreateInventoryItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37717
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37702,
								37716
							]
						}
					]
				},
				{
					"id": 37718,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37723,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37724,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37725,
									"name": "auth_identity_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37726,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37727,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37728,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 37729,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 37730,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 37731,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 37732,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37728,
														37729,
														37730,
														37731,
														37732
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37724,
										37725,
										37726
									]
								}
							]
						},
						{
							"id": 37719,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37720,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37720
									]
								}
							]
						},
						{
							"id": 37721,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37722,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37722
									]
								}
							]
						},
						{
							"id": 37733,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37734,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37734
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37723,
								37719,
								37721,
								37733
							]
						}
					]
				},
				{
					"id": 37735,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37736,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37737,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37738,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37739,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37740,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37741,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 37742,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 37743,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 37744,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 37745,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 37746,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 37747,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															37743,
															37744,
															37745,
															37746,
															37747
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 37748,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 37749,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 37750,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															37750
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37737,
										37738,
										37739,
										37740,
										37741,
										37748
									]
								}
							]
						},
						{
							"id": 37751,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37752,
									"name": "attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37753,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37752,
										37753
									]
								}
							]
						},
						{
							"id": 37754,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37755,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37756,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37757,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 37758,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37759,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37760,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37755,
										37756,
										37757,
										37758,
										37759,
										37760
									]
								}
							]
						},
						{
							"id": 37761,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37762,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37772,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37762
									]
								}
							]
						},
						{
							"id": 37763,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37764,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37765,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37764,
										37765
									]
								}
							]
						},
						{
							"id": 37766,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37767,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37768,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37767,
										37768
									]
								}
							]
						},
						{
							"id": 37769,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37770,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37771,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37770,
										37771
									]
								}
							]
						},
						{
							"id": 37772,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37773,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37774,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37775,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37776,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37777,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 37778,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 37779,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37780,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37781,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38856,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37782,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37773,
										37774,
										37775,
										37776,
										37777,
										37778,
										37779,
										37780,
										37781,
										37782
									]
								}
							]
						},
						{
							"id": 37783,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37784,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37784
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37736,
								37751,
								37754,
								37761,
								37763,
								37766,
								37769,
								37772,
								37783
							]
						}
					]
				},
				{
					"id": 37785,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37786,
							"name": "CreateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37787,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCategoryDTO"
											},
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37787
									]
								}
							]
						},
						{
							"id": 37788,
							"name": "UpdateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37789,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductCategoryProps"
										},
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37790,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37789,
										37790
									]
								}
							]
						},
						{
							"id": 37791,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37792,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.id"
									}
								},
								{
									"id": 37793,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.add"
									}
								},
								{
									"id": 37794,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.remove"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37792,
										37793,
										37794
									]
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 34573,
									"name": "LinkWorkflowInput",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37786,
								37788,
								37791
							]
						}
					]
				},
				{
					"id": 37795,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37796,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37797,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36818,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37797
									]
								}
							]
						},
						{
							"id": 37798,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36738,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 37799,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 37800,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36811,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37800
									]
								}
							]
						},
						{
							"id": 37801,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36738,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37796,
								37799
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								37798,
								37801
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						37691,
						37701,
						37718,
						37735,
						37785,
						37795
					]
				}
			]
		},
		{
			"id": 38856,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38857,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38858,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38859,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38860,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38861,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 38862,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38857,
						38858,
						38859,
						38860,
						38861,
						38862
					]
				}
			]
		},
		{
			"id": 37802,
			"name": "WorkflowsSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37803,
					"name": "WorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37804,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37805,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37806,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37807,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37808,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37809,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 37810,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37811,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37812,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37804,
								37805,
								37806,
								37807,
								37808,
								37809,
								37810,
								37811,
								37812
							]
						}
					]
				},
				{
					"id": 37813,
					"name": "FilterableWorkflowExecutionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 37818,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37813,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37813,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34728,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 37819,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37813,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34727,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37813,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34729,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 37814,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37815,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37816,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37817,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 34705,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37818,
								37819,
								37814,
								37815,
								37816,
								37817
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34727,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37813,
									"name": "FilterableWorkflowExecutionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 37820,
					"name": "UpsertWorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37821,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37822,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37823,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37824,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37825,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37821,
								37822,
								37823,
								37824,
								37825
							]
						}
					]
				},
				{
					"id": 37826,
					"name": "Acknowledgement",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37827,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37828,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37829,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37828,
										37829
									]
								}
							]
						}
					}
				},
				{
					"id": 37830,
					"name": "WorkflowOrchestratorRunDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37832,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37838,
								"name": "T",
								"package": "@medusajs/types",
								"qualifiedName": "WorkflowOrchestratorRunDTO.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.input"
							}
						},
						{
							"id": 37833,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 38439,
								"name": "Context",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.context"
							}
						},
						{
							"id": 37834,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.resultFrom"
							}
						},
						{
							"id": 37835,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.throwOnError"
							}
						},
						{
							"id": 37836,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.logOnError"
							}
						},
						{
							"id": 37837,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.events"
							}
						},
						{
							"id": 37831,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37832,
								37833,
								37834,
								37835,
								37836,
								37837,
								37831
							]
						}
					],
					"typeParameters": [
						{
							"id": 37838,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38863,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37838,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "WorkflowOrchestratorRunDTO.T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlowRunOptions",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 37839,
					"name": "IdempotencyKeyParts",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37840,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37841,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37842,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37843,
									"name": "stepId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37844,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37841,
										37842,
										37843,
										37844
									]
								}
							]
						}
					}
				},
				{
					"id": 37845,
					"name": "IWorkflowEngineService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37846,
							"name": "retrieveWorkflowExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37847,
									"name": "retrieveWorkflowExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37848,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37849,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 37850,
																	"name": "workflow_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 37851,
																	"name": "transaction_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		37850,
																		37851
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 37852,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37803,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37853,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 37803,
												"name": "WorkflowExecutionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37854,
							"name": "listWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37855,
									"name": "listWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37856,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37813,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37857,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37803,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37858,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 37803,
													"name": "WorkflowExecutionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37859,
							"name": "listAndCountWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37860,
									"name": "listAndCountWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37861,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37813,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37862,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34510,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37803,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37863,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 37803,
															"name": "WorkflowExecutionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37864,
							"name": "run",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37865,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37866,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37867,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37830,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowOrchestratorRunDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37868,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 37869,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37870,
															"name": "errors",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Error"
																	},
																	"name": "Error",
																	"package": "typescript"
																}
															}
														},
														{
															"id": 37871,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 37872,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 37873,
															"name": "acknowledgement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37826,
																"name": "Acknowledgement",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37870,
																37871,
																37872,
																37873
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37874,
							"name": "getRunningTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37875,
									"name": "getRunningTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37876,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37877,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37878,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 37879,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37880,
							"name": "setStepSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37881,
									"name": "setStepSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37882,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37883,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37884,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 37839,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 37885,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 37886,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37884,
																37885,
																37886
															]
														}
													]
												}
											}
										},
										{
											"id": 37887,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 37888,
							"name": "setStepFailure",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37889,
									"name": "setStepFailure",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37890,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37891,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37892,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 37839,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 37893,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 37894,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37892,
																37893,
																37894
															]
														}
													]
												}
											}
										},
										{
											"id": 37895,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 37896,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37897,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37898,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37899,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37900,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37901,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37902,
															"name": "subscriber",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Function"
																},
																"name": "Function",
																"package": "typescript"
															}
														},
														{
															"id": 37903,
															"name": "subscriberId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37900,
																37901,
																37902,
																37903
															]
														}
													]
												}
											}
										},
										{
											"id": 37904,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37905,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37906,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37907,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37908,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37909,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37910,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37911,
															"name": "subscriberOrId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Function"
																		},
																		"name": "Function",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37909,
																37910,
																37911
															]
														}
													]
												}
											}
										},
										{
											"id": 37912,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38439,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37846,
								37854,
								37859,
								37864,
								37874,
								37880,
								37888,
								37896,
								37905
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37279,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37803,
						37813,
						37820,
						37830,
						37845
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37826,
						37839
					]
				}
			]
		},
		{
			"id": 38863,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 38871,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 38864,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38865,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 38871,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 38866,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 38439,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38867,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38868,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38869,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38870,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38865,
								38866,
								38867,
								38868,
								38869,
								38870
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 37830,
					"name": "WorkflowOrchestratorRunDTO"
				}
			]
		},
		{
			"id": 38495,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38497,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38497
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38498,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						"name": "ProductTypes.UpsertProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38499,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38500,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38500
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38501,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38502,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38503,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 38504,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38505,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38505
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 38506,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38495,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38503,
										38506
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38507,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 38508,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38509,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 38510,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38511,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38511
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38509
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 38489,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 38490,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38491,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38493,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38494,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38493,
										38494
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38490,
						38491
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				34476,
				34477,
				34491,
				34698,
				37926,
				34887,
				34960,
				34979,
				35070,
				36690,
				37041,
				37099,
				37406,
				37512,
				37556,
				37688,
				37690,
				37802
			]
		},
		{
			"title": "Enumerations",
			"children": [
				38596,
				38684
			]
		},
		{
			"title": "Interfaces",
			"children": [
				34473,
				38046,
				38070,
				38074,
				38086,
				38099,
				38102,
				38111,
				38114,
				38120,
				38129,
				38131,
				38133,
				38512,
				38544,
				38164,
				38167,
				38172,
				38175,
				38177,
				38588,
				38601,
				38606,
				38612,
				38577,
				38569,
				38616,
				38628,
				38650,
				38637,
				38652,
				38676,
				38689,
				38694,
				38700,
				38667,
				38659,
				38704,
				38716,
				38725,
				38951,
				38897,
				38901,
				38906,
				38912,
				38955,
				38919,
				38924,
				38930,
				38937,
				38730,
				38746,
				38766,
				38770,
				38777,
				38787,
				38819,
				38828,
				38794,
				38804,
				38841,
				38850,
				38853,
				38199,
				38202,
				38216,
				38219,
				38222,
				38240,
				38243,
				38253,
				38329,
				38261,
				38335,
				38338,
				38345,
				38353,
				38361,
				38369,
				38372,
				38377,
				38381,
				38384,
				38387,
				38390,
				38395,
				38415,
				38418,
				38425,
				38439,
				38474,
				38856,
				38489
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				34458,
				38519,
				38946,
				38945,
				38875,
				38880,
				38882,
				38887,
				38877,
				38884,
				38889,
				38526,
				38872,
				38524,
				38521,
				38540,
				38541,
				38535,
				38529,
				38531,
				38891,
				38970,
				38960,
				38949,
				38895,
				38528,
				38533,
				38181,
				38184,
				38187,
				38719,
				38728,
				38729,
				38827,
				38190,
				38250,
				38309,
				38315,
				38855,
				38398,
				38405,
				38412,
				38482,
				38487,
				38488,
				38451,
				38863,
				38495,
				38498,
				38501,
				38507
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"34457": {
			"sourceFileName": "../../../../packages/core/types/src/index.ts",
			"qualifiedName": ""
		},
		"34458": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"34459": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"34460": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"34461": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"34462": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"34463": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"34464": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"34465": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"34466": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"34467": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"34468": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"34469": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"34470": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"34471": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"34472": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"34473": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps"
		},
		"34474": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.data"
		},
		"34475": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.TData"
		},
		"34476": {
			"sourceFileName": "../../../../packages/core/types/src/admin/index.ts",
			"qualifiedName": ""
		},
		"34477": {
			"sourceFileName": "../../../../packages/core/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"34478": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"34479": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"34480": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"34481": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"34482": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"34483": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"34484": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"34485": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"34486": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"34487": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"34488": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"34489": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"34490": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"34491": {
			"sourceFileName": "../../../../packages/core/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"34492": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "Prettify"
		},
		"34493": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"34494": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"34495": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"34496": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"34497": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"34501": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"34502": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"34503": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"34504": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"34505": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"34506": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"34507": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"34508": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"34509": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"34510": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"34511": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"34512": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"34513": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"34514": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"34515": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"34516": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"34517": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"34519": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"34520": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"34521": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"34522": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"34524": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"34525": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"34526": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"34527": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"34528": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"34529": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"34530": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"34531": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"34532": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"34533": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"34534": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"34535": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"34536": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"34537": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"34538": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"34539": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"34540": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"34541": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"34542": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"34543": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"34544": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"34545": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"34546": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"34547": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"34548": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"34549": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"34552": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"34553": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"34554": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"34555": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"34556": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"34557": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RawRounding"
		},
		"34558": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"34559": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.value"
		},
		"34560": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.precision"
		},
		"34568": {
			"sourceFileName": "../../../../packages/core/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"34569": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"34570": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"34571": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"34572": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"34573": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"34574": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"34575": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"34576": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"34577": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"34578": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"34579": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"34580": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"34581": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"34582": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"34583": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"34584": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"34585": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"34586": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"34587": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"34588": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"34589": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"34590": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"34591": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"34592": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"34593": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"34594": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"34595": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"34596": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"34597": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"34598": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions"
		},
		"34599": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.disable"
		},
		"34600": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.path"
		},
		"34601": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.outDir"
		},
		"34602": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.backendUrl"
		},
		"34603": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storefrontUrl"
		},
		"34604": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.vite"
		},
		"34605": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34606": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34607": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "config"
		},
		"34608": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"34609": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"34610": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"34611": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"34612": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"34613": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"34614": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseName"
		},
		"34615": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseUrl"
		},
		"34616": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseSchema"
		},
		"34617": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseLogging"
		},
		"34619": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseDriverOptions"
		},
		"34620": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34621": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"34622": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34623": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"34624": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34625": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"34626": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisUrl"
		},
		"34627": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisPrefix"
		},
		"34628": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisOptions"
		},
		"34629": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.sessionOptions"
		},
		"34632": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.workerMode"
		},
		"34633": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.http"
		},
		"34634": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34635": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtSecret"
		},
		"34636": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtExpiresIn"
		},
		"34637": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookieSecret"
		},
		"34638": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authCors"
		},
		"34639": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.compression"
		},
		"34640": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storeCors"
		},
		"34641": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.adminCors"
		},
		"34642": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authMethodsPerActor"
		},
		"34643": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"34644": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"34645": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin"
		},
		"34650": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"34651": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"34652": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"34653": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"34654": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"34655": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"34656": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"34657": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"34658": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"34659": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "ExecArgs"
		},
		"34660": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type"
		},
		"34661": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.container"
		},
		"34662": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.args"
		},
		"34663": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"34664": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"34665": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"34666": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"34667": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"34668": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"34669": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"34670": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"34671": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"34672": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"34673": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"34674": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"34684": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"34685": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"34686": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"34687": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"34688": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"34689": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"34690": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"34691": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice"
		},
		"34692": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice.calculated_price"
		},
		"34693": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type"
		},
		"34694": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.calculated_amount"
		},
		"34695": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.is_calculated_price_tax_inclusive"
		},
		"34696": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCase"
		},
		"34697": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"34698": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"34699": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"34700": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34701": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"34703": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"34704": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"34705": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"34706": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34707": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"34708": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"34709": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"34710": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"34711": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"34712": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"34713": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"34714": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"34715": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"34716": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"34717": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"34718": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"34719": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"34720": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"34721": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"34722": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"34723": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"34724": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"34725": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"34726": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"34727": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"34728": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"34729": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"34730": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"34731": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"34732": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"34733": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"34734": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"34735": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"34736": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"34737": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"34738": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"34739": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"34740": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"34741": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"34742": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"34743": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34744": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"34746": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34747": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"34749": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"34750": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"34751": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"34752": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"34753": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"34754": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "PerformedActions"
		},
		"34755": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34756": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.created"
		},
		"34757": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.updated"
		},
		"34758": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.deleted"
		},
		"34759": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"34760": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"34761": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"34762": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34763": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34764": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"34765": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"34766": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34767": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34768": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"34769": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"34770": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34771": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34772": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"34773": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"34774": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34775": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34776": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"34777": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"34778": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34779": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"34780": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"34781": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"34782": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34783": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"34785": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34786": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"34788": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34789": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"34790": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"34791": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"34792": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34793": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34794": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34795": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"34796": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"34797": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"34798": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"34799": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34800": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"34801": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"34802": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34803": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34804": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"34805": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"34806": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34807": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"34808": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34809": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34810": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entities"
		},
		"34811": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"34812": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"34813": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"34814": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34815": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"34816": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34817": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34818": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"34819": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34820": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34821": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"34822": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"34823": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"34824": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"34825": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"34826": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34827": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"34828": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"34829": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34830": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"34831": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"34832": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"34833": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34834": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34835": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"34836": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"34837": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"34838": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"34839": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34840": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"34841": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34842": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"34843": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"34844": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34845": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"34846": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34847": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"34848": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"34849": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34850": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34851": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"34852": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"34853": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"34854": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34855": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"34856": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"34857": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34858": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"34859": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34860": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34861": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"34862": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"34863": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"34864": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"34865": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"34866": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"34867": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"34868": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"34869": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34870": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"34871": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"34872": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"34873": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"34874": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"34875": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"34876": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"34877": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"34878": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"34879": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"34880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"34881": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34882": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"34883": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"34884": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34885": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "ModelDateColumns"
		},
		"34886": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableModelDateColumns"
		},
		"34887": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"34888": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"34889": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34890": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34891": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"34892": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"34893": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"34894": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34895": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"34896": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"34897": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34898": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"34899": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"34900": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"34901": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34902": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"34903": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"34904": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34905": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"34906": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"34907": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"34908": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"34909": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"34910": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34911": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"34912": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"34913": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"34914": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"34915": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"34916": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"34917": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"34918": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"34919": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"34920": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"34921": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"34922": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"34923": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"34924": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"34925": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"34926": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"34927": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"34928": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"34929": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"34930": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"34931": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"34932": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"34933": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"34934": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"34935": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"34936": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"34937": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"34938": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"34939": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"34940": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"34941": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"34942": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"34943": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"34944": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"34945": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"34946": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"34947": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"34948": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"34949": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"34950": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"34951": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"34952": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"34953": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"34954": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"34955": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"34956": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"34957": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"34958": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"34959": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"34960": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"34961": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"34962": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"34963": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34964": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34965": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"34966": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"34967": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34968": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34969": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"34970": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34971": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"34972": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"34973": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"34974": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"34975": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"34976": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"34977": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"34978": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"34979": {
			"sourceFileName": "../../../../packages/core/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"34980": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"34981": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"34982": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"34983": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps"
		},
		"34984": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps.id"
		},
		"34985": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"34986": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"34987": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"34988": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"34989": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.access"
		},
		"34990": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"34991": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"34992": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"34993": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"34994": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34995": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"34996": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"34997": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34998": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"34999": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"35000": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"35001": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35002": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"35003": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"35004": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35005": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"35006": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"35007": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"35008": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"35009": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35010": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"35011": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"35012": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"35013": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"35014": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35015": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"35016": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"35017": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"35018": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"35019": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35033": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"35034": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"35035": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"35036": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"35037": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"35038": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"35039": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"35040": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"35041": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"35042": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"35043": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"35044": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.access"
		},
		"35045": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"35046": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"35047": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"35048": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"35049": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"35050": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"35051": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"35052": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"35053": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"35054": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"35055": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions"
		},
		"35056": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.file_url"
		},
		"35057": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.access_key_id"
		},
		"35058": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.secret_access_key"
		},
		"35059": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.region"
		},
		"35060": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.bucket"
		},
		"35061": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.prefix"
		},
		"35062": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.endpoint"
		},
		"35063": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.cache_control"
		},
		"35064": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.download_file_duration"
		},
		"35065": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.additional_client_config"
		},
		"35066": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions"
		},
		"35067": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.upload_dir"
		},
		"35068": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.private_upload_dir"
		},
		"35069": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.backend_url"
		},
		"35070": {
			"sourceFileName": "../../../../packages/core/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"35071": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress"
		},
		"35072": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.id"
		},
		"35073": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.customer_id"
		},
		"35074": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.first_name"
		},
		"35075": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.last_name"
		},
		"35076": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.phone"
		},
		"35077": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.company"
		},
		"35078": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.address_1"
		},
		"35079": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.address_2"
		},
		"35080": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.city"
		},
		"35081": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.country_code"
		},
		"35082": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.province"
		},
		"35083": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.postal_code"
		},
		"35084": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.metadata"
		},
		"35085": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.created_at"
		},
		"35086": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.updated_at"
		},
		"35087": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign"
		},
		"35088": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.name"
		},
		"35089": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.description"
		},
		"35090": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.currency"
		},
		"35091": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.campaign_identifier"
		},
		"35092": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.starts_at"
		},
		"35093": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.ends_at"
		},
		"35094": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.budget"
		},
		"35095": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35096": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"35097": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"35098": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"35099": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign"
		},
		"35100": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.name"
		},
		"35101": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.description"
		},
		"35102": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.currency"
		},
		"35103": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.campaign_identifier"
		},
		"35104": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.starts_at"
		},
		"35105": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.ends_at"
		},
		"35106": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.budget"
		},
		"35107": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35108": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"35109": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"35110": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"35111": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams"
		},
		"35112": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.q"
		},
		"35113": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.campaign_identifier"
		},
		"35114": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.budget"
		},
		"35115": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "__type"
		},
		"35116": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "__type.currency_code"
		},
		"35117": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.$and"
		},
		"35118": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.$or"
		},
		"35119": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35120": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35121": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35122": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35123": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignParams"
		},
		"35124": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35125": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign"
		},
		"35126": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.id"
		},
		"35127": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.name"
		},
		"35128": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.description"
		},
		"35129": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.currency"
		},
		"35130": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.campaign_identifier"
		},
		"35131": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.starts_at"
		},
		"35132": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.ends_at"
		},
		"35133": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.budget"
		},
		"35134": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35135": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.id"
		},
		"35136": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.type"
		},
		"35137": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.currency_code"
		},
		"35138": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.limit"
		},
		"35139": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.used"
		},
		"35140": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"35141": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35142": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.campaigns"
		},
		"35143": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"35144": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"35145": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignDeleteResponse"
		},
		"35146": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim"
		},
		"35147": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"35148": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"35149": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"35150": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"35151": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"35152": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"35153": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"35154": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim"
		},
		"35155": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.type"
		},
		"35156": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.order_id"
		},
		"35157": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.description"
		},
		"35158": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.internal_note"
		},
		"35159": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.metadata"
		},
		"35160": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimItems"
		},
		"35161": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"35162": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35163": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35164": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35165": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35166": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35167": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35168": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimItem"
		},
		"35169": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"35170": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"35171": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"35172": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"35173": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimInboundItems"
		},
		"35174": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"35175": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35176": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35177": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35178": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35179": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35180": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35181": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimInboundItem"
		},
		"35182": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"35183": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"35184": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"35185": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"35186": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimOutboundItems"
		},
		"35187": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"35188": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35189": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35190": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35191": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35192": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35193": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35194": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimOutboundItem"
		},
		"35195": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"35196": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"35197": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"35198": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"35199": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddInboundShipping"
		},
		"35200": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"35201": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"35202": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"35203": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"35204": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"35205": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateInboundShipping"
		},
		"35206": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"35207": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"35208": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"35209": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddOutboundShipping"
		},
		"35210": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"35211": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"35212": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"35213": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"35214": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"35215": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateOutboundShipping"
		},
		"35216": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"35217": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"35218": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"35219": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminRequestClaim"
		},
		"35220": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim"
		},
		"35221": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim.no_notification"
		},
		"35222": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams"
		},
		"35223": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams.deleted_at"
		},
		"35224": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"35225": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"35226": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"35227": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"35228": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"35229": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"35230": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35231": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35232": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35233": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35234": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35235": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35236": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams"
		},
		"35237": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.id"
		},
		"35238": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.status"
		},
		"35239": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.created_at"
		},
		"35240": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.updated_at"
		},
		"35241": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.deleted_at"
		},
		"35242": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35243": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse"
		},
		"35244": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse.claim"
		},
		"35245": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimListResponse"
		},
		"35246": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35247": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"35248": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35249": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35250": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35251": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"35252": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse"
		},
		"35253": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.order"
		},
		"35254": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.claim"
		},
		"35255": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse"
		},
		"35256": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"35257": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"35258": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse"
		},
		"35259": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.order_preview"
		},
		"35260": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.return"
		},
		"35261": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse"
		},
		"35262": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse.return"
		},
		"35263": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"35264": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"35265": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimDeleteResponse"
		},
		"35266": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35267": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35268": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35269": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/entities.ts",
			"qualifiedName": "AdminCollection"
		},
		"35270": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"35271": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"35272": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"35273": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"35274": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"35275": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"35276": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"35277": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"35278": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection"
		},
		"35279": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.title"
		},
		"35280": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.handle"
		},
		"35281": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.metadata"
		},
		"35282": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection"
		},
		"35283": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.title"
		},
		"35284": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.handle"
		},
		"35285": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.metadata"
		},
		"35286": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts"
		},
		"35287": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.add"
		},
		"35288": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.remove"
		},
		"35289": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams"
		},
		"35290": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams.deleted_at"
		},
		"35291": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"35292": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"35293": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"35294": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"35295": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"35296": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"35297": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35298": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35299": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35300": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35301": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35302": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35303": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionParams"
		},
		"35304": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35305": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse"
		},
		"35306": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse.collection"
		},
		"35307": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionListResponse"
		},
		"35308": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35309": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"35310": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35311": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35312": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35313": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"35314": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionDeleteResponse"
		},
		"35315": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35316": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35317": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35318": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams"
		},
		"35319": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35320": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams"
		},
		"35321": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35322": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35323": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35324": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35325": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink"
		},
		"35326": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.add"
		},
		"35327": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.remove"
		},
		"35328": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponse"
		},
		"35329": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35330": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35331": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35332": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35333": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"35334": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponseWithParent"
		},
		"35335": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35336": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"35337": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"35338": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TParent"
		},
		"35339": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35340": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"35341": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35342": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35343": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35344": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35345": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"35346": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "BatchResponse"
		},
		"35347": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35348": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.created"
		},
		"35349": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.updated"
		},
		"35350": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35351": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"35352": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.ids"
		},
		"35353": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35354": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35355": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"35356": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "AdditionalData"
		},
		"35357": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type"
		},
		"35358": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type.additional_data"
		},
		"35359": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/entities.ts",
			"qualifiedName": "AdminCustomerGroup"
		},
		"35360": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.id"
		},
		"35361": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.name"
		},
		"35362": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.customers"
		},
		"35363": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.metadata"
		},
		"35364": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.created_at"
		},
		"35365": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.updated_at"
		},
		"35366": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup"
		},
		"35367": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup.name"
		},
		"35368": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup.metadata"
		},
		"35369": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup"
		},
		"35370": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup.name"
		},
		"35371": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup.metadata"
		},
		"35372": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters"
		},
		"35373": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.id"
		},
		"35374": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.email"
		},
		"35375": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.default_billing_address_id"
		},
		"35376": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.default_shipping_address_id"
		},
		"35377": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.company_name"
		},
		"35378": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.first_name"
		},
		"35379": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.last_name"
		},
		"35380": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.created_by"
		},
		"35381": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.created_at"
		},
		"35382": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.updated_at"
		},
		"35383": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.deleted_at"
		},
		"35384": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams"
		},
		"35385": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.limit"
		},
		"35386": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.offset"
		},
		"35387": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.q"
		},
		"35388": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.id"
		},
		"35389": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.name"
		},
		"35390": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.customers"
		},
		"35391": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.created_by"
		},
		"35392": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.created_at"
		},
		"35393": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.updated_at"
		},
		"35394": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.deleted_at"
		},
		"35395": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.$and"
		},
		"35396": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.$or"
		},
		"35397": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35398": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35399": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupParams"
		},
		"35400": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35401": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupResponse"
		},
		"35402": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupResponse.customer_group"
		},
		"35403": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupListResponse"
		},
		"35404": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35405": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"35406": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/entities.ts",
			"qualifiedName": "AdminExchange"
		},
		"35407": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"35408": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"35409": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"35410": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"35411": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"35412": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"35413": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"35414": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange"
		},
		"35415": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.type"
		},
		"35416": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.order_id"
		},
		"35417": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.description"
		},
		"35418": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.internal_note"
		},
		"35419": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.metadata"
		},
		"35420": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminAddExchangeItems"
		},
		"35421": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"35422": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35423": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35424": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35425": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35426": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35427": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35428": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminUpdateExchangeItem"
		},
		"35429": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"35430": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"35431": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"35432": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"35433": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminAddExchangeInboundItems"
		},
		"35434": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"35435": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35436": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35437": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35438": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35439": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35440": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35441": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminUpdateExchangeInboundItem"
		},
		"35442": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"35443": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"35444": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"35445": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"35446": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminAddExchangeOutboundItems"
		},
		"35447": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"35448": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35449": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"35450": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35451": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"35452": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"35453": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35454": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminUpdateExchangeOutboundItem"
		},
		"35455": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"35456": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"35457": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"35458": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"35459": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddInboundShipping"
		},
		"35460": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"35461": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"35462": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"35463": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"35464": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"35465": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateInboundShipping"
		},
		"35466": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"35467": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"35468": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"35469": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddOutboundShipping"
		},
		"35470": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"35471": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"35472": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"35473": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"35474": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"35475": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateOutboundShipping"
		},
		"35476": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"35477": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"35478": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"35479": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminRequestExchange"
		},
		"35480": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminRequestExchange.no_notification"
		},
		"35481": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCancelExchange"
		},
		"35482": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCancelExchange.no_notification"
		},
		"35483": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams"
		},
		"35484": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.deleted_at"
		},
		"35485": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.q"
		},
		"35486": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.id"
		},
		"35487": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.order_id"
		},
		"35488": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.status"
		},
		"35489": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.created_at"
		},
		"35490": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.updated_at"
		},
		"35491": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35492": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35493": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35494": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35495": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35496": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35497": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams"
		},
		"35498": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams.id"
		},
		"35499": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams.status"
		},
		"35500": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams.created_at"
		},
		"35501": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams.updated_at"
		},
		"35502": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeParams.deleted_at"
		},
		"35503": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35504": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse"
		},
		"35505": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse.exchange"
		},
		"35506": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeListResponse"
		},
		"35507": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35508": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type.exchanges"
		},
		"35509": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse"
		},
		"35510": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.order"
		},
		"35511": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.exchange"
		},
		"35512": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse"
		},
		"35513": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"35514": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"35515": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse"
		},
		"35516": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse.return"
		},
		"35517": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"35518": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"35519": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse"
		},
		"35520": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.order_preview"
		},
		"35521": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.return"
		},
		"35522": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeDeleteResponse"
		},
		"35523": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35524": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35525": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35526": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/entities.ts",
			"qualifiedName": "AdminFile"
		},
		"35527": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"35528": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"35529": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/payloads.ts",
			"qualifiedName": "AdminUploadFile"
		},
		"35530": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileResponse"
		},
		"35531": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileResponse.file"
		},
		"35532": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileListResponse"
		},
		"35533": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileListResponse.files"
		},
		"35534": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileDeleteResponse"
		},
		"35535": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/store.ts",
			"qualifiedName": "StoreFile"
		},
		"35536": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"35537": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"35538": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider"
		},
		"35539": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"35540": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"35541": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams"
		},
		"35542": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.id"
		},
		"35543": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.q"
		},
		"35544": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.is_enabled"
		},
		"35545": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.stock_location_id"
		},
		"35546": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35547": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35548": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35549": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35550": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentProviderListResponse"
		},
		"35551": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35552": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"35553": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35554": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35555": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35556": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"35557": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone"
		},
		"35558": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.id"
		},
		"35559": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.type"
		},
		"35560": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.country_code"
		},
		"35561": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.province_code"
		},
		"35562": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.city"
		},
		"35563": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.postal_expression"
		},
		"35564": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.created_at"
		},
		"35565": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.updated_at"
		},
		"35566": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.deleted_at"
		},
		"35567": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone"
		},
		"35568": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.id"
		},
		"35569": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.name"
		},
		"35570": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set_id"
		},
		"35571": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set"
		},
		"35572": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.geo_zones"
		},
		"35573": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.shipping_options"
		},
		"35574": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.created_at"
		},
		"35575": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.updated_at"
		},
		"35576": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.deleted_at"
		},
		"35577": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet"
		},
		"35578": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.id"
		},
		"35579": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.name"
		},
		"35580": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.type"
		},
		"35581": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.location"
		},
		"35582": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.service_zones"
		},
		"35583": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.created_at"
		},
		"35584": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.updated_at"
		},
		"35585": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.deleted_at"
		},
		"35586": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
		},
		"35587": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.name"
		},
		"35588": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.geo_zones"
		},
		"35589": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
		},
		"35590": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.name"
		},
		"35591": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.geo_zones"
		},
		"35592": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse"
		},
		"35593": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse.service_zone"
		},
		"35594": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneDeleteResponse"
		},
		"35595": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35596": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35597": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35598": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"35599": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse"
		},
		"35600": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse.fulfillment_set"
		},
		"35601": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetDeleteResponse"
		},
		"35602": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35603": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35604": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35605": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem"
		},
		"35606": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.id"
		},
		"35607": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.sku"
		},
		"35608": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.origin_country"
		},
		"35609": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.hs_code"
		},
		"35610": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.requires_shipping"
		},
		"35611": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.mid_code"
		},
		"35612": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.material"
		},
		"35613": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.weight"
		},
		"35614": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.length"
		},
		"35615": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.height"
		},
		"35616": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.width"
		},
		"35617": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.title"
		},
		"35618": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.description"
		},
		"35619": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.thumbnail"
		},
		"35620": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.metadata"
		},
		"35621": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.location_levels"
		},
		"35622": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel"
		},
		"35623": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.id"
		},
		"35624": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.created_at"
		},
		"35625": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.updated_at"
		},
		"35626": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.deleted_at"
		},
		"35627": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.inventory_item_id"
		},
		"35628": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.location_id"
		},
		"35629": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.stocked_quantity"
		},
		"35630": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.raw_stocked_quantity"
		},
		"35631": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.reserved_quantity"
		},
		"35632": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.raw_reserved_quantity"
		},
		"35633": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.incoming_quantity"
		},
		"35634": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.raw_incoming_quantity"
		},
		"35635": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.metadata"
		},
		"35636": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.inventory_item"
		},
		"35637": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.available_quantity"
		},
		"35638": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem"
		},
		"35639": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"35640": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"35641": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"35642": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"35643": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"35644": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"35645": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"35646": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"35647": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"35648": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"35649": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"35650": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"35651": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"35652": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"35653": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryItem"
		},
		"35654": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"35655": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"35656": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"35657": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"35658": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"35659": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"35660": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"35661": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"35662": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"35663": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"35664": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"35665": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"35666": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"35667": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"35668": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams"
		},
		"35669": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.id"
		},
		"35670": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.q"
		},
		"35671": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.sku"
		},
		"35672": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.origin_country"
		},
		"35673": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.mid_code"
		},
		"35674": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.hs_code"
		},
		"35675": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.material"
		},
		"35676": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.requires_shipping"
		},
		"35677": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.weight"
		},
		"35678": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.length"
		},
		"35679": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.height"
		},
		"35680": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.width"
		},
		"35681": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.location_levels"
		},
		"35682": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35683": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35684": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35685": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35686": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35687": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35688": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse"
		},
		"35689": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse.inventory_item"
		},
		"35690": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemListResponse"
		},
		"35691": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35692": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"35693": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemDeleteResponse"
		},
		"35694": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelDeleteResponse"
		},
		"35695": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel"
		},
		"35696": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.id"
		},
		"35697": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.inventory_item_id"
		},
		"35698": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.location_id"
		},
		"35699": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.stocked_quantity"
		},
		"35700": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.reserved_quantity"
		},
		"35701": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.available_quantity"
		},
		"35702": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.incoming_quantity"
		},
		"35703": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.metadata"
		},
		"35704": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel"
		},
		"35705": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.stocked_quantity"
		},
		"35706": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.incoming_quantity"
		},
		"35707": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel"
		},
		"35708": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.location_id"
		},
		"35709": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.stocked_quantity"
		},
		"35710": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.incoming_quantity"
		},
		"35711": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation"
		},
		"35712": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.delete"
		},
		"35713": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.update"
		},
		"35714": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.create"
		},
		"35715": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters"
		},
		"35716": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters.location_id"
		},
		"35717": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35718": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35719": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35720": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35721": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse"
		},
		"35722": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse.inventory_level"
		},
		"35723": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelListResponse"
		},
		"35724": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35725": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type.inventory_levels"
		},
		"35726": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite"
		},
		"35727": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.id"
		},
		"35728": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.email"
		},
		"35729": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.accepted"
		},
		"35730": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.token"
		},
		"35731": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.expires_at"
		},
		"35732": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.metadata"
		},
		"35733": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.created_at"
		},
		"35734": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.updated_at"
		},
		"35735": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminAcceptInvite"
		},
		"35736": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35737": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.first_name"
		},
		"35738": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.last_name"
		},
		"35739": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminCreateInvite"
		},
		"35740": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35741": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.email"
		},
		"35742": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"35743": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams"
		},
		"35744": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.q"
		},
		"35745": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.id"
		},
		"35746": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.email"
		},
		"35747": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.created_at"
		},
		"35748": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.updated_at"
		},
		"35749": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.deleted_at"
		},
		"35750": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35751": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35752": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35753": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35754": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35755": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35756": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse"
		},
		"35757": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse.invite"
		},
		"35758": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteListResponse"
		},
		"35759": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35760": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.invites"
		},
		"35761": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminAcceptInviteResponse"
		},
		"35762": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35763": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.user"
		},
		"35764": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35765": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.message"
		},
		"35766": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteDeleteResponse"
		},
		"35767": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification"
		},
		"35768": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.id"
		},
		"35769": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.to"
		},
		"35770": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.channel"
		},
		"35771": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.template"
		},
		"35772": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.data"
		},
		"35773": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.trigger_type"
		},
		"35774": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_id"
		},
		"35775": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_type"
		},
		"35776": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.receiver_id"
		},
		"35777": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.original_notification_id"
		},
		"35778": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.external_id"
		},
		"35779": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.provider_id"
		},
		"35780": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.created_at"
		},
		"35781": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams"
		},
		"35782": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.q"
		},
		"35783": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.id"
		},
		"35784": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.channel"
		},
		"35785": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35786": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35787": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35788": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35789": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35790": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35791": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationParams"
		},
		"35792": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35793": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse"
		},
		"35794": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse.notification"
		},
		"35795": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationListResponse"
		},
		"35796": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35797": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"35798": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35799": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35800": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35801": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"35802": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditPreviewResponse"
		},
		"35803": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditPreviewResponse.order_preview"
		},
		"35804": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditResponse"
		},
		"35805": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditResponse.order_change"
		},
		"35806": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditDeleteResponse"
		},
		"35807": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest"
		},
		"35808": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.order_id"
		},
		"35809": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.description"
		},
		"35810": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.internal_note"
		},
		"35811": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.metadata"
		},
		"35812": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminAddOrderEditItems"
		},
		"35813": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminAddOrderEditItems.items"
		},
		"35814": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"35815": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.variant_id"
		},
		"35816": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"35817": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.unit_price"
		},
		"35818": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"35819": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.allow_backorder"
		},
		"35820": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"35821": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem"
		},
		"35822": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem.quantity"
		},
		"35823": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem.internal_note"
		},
		"35824": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem"
		},
		"35825": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.id"
		},
		"35826": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.order_id"
		},
		"35827": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.item_id"
		},
		"35828": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.quantity"
		},
		"35829": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.metadata"
		},
		"35830": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.created_at"
		},
		"35831": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.updated_at"
		},
		"35832": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice"
		},
		"35833": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.variant_id"
		},
		"35834": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.rules"
		},
		"35835": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList"
		},
		"35836": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.id"
		},
		"35837": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.title"
		},
		"35838": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.description"
		},
		"35839": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.rules"
		},
		"35840": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.starts_at"
		},
		"35841": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.ends_at"
		},
		"35842": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.status"
		},
		"35843": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.type"
		},
		"35844": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.prices"
		},
		"35845": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.created_at"
		},
		"35846": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.updated_at"
		},
		"35847": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.deleted_at"
		},
		"35848": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice"
		},
		"35849": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.currency_code"
		},
		"35850": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.amount"
		},
		"35851": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.variant_id"
		},
		"35852": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.min_quantity"
		},
		"35853": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.max_quantity"
		},
		"35854": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.rules"
		},
		"35855": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList"
		},
		"35856": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.title"
		},
		"35857": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.description"
		},
		"35858": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.starts_at"
		},
		"35859": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.ends_at"
		},
		"35860": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.status"
		},
		"35861": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.type"
		},
		"35862": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.rules"
		},
		"35863": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.prices"
		},
		"35864": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice"
		},
		"35865": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.id"
		},
		"35866": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.currency_code"
		},
		"35867": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.amount"
		},
		"35868": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.variant_id"
		},
		"35869": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.min_quantity"
		},
		"35870": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.max_quantity"
		},
		"35871": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.rules"
		},
		"35872": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList"
		},
		"35873": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.title"
		},
		"35874": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.description"
		},
		"35875": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.starts_at"
		},
		"35876": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.ends_at"
		},
		"35877": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.status"
		},
		"35878": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.type"
		},
		"35879": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.rules"
		},
		"35880": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice"
		},
		"35881": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.create"
		},
		"35882": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.update"
		},
		"35883": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.delete"
		},
		"35884": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts"
		},
		"35885": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts.remove"
		},
		"35886": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams"
		},
		"35887": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.q"
		},
		"35888": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.id"
		},
		"35889": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.starts_at"
		},
		"35890": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.ends_at"
		},
		"35891": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.status"
		},
		"35892": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.rules_count"
		},
		"35893": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35894": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35895": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35896": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35897": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35898": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35899": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListParams"
		},
		"35900": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35901": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse"
		},
		"35902": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse.price_list"
		},
		"35903": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListListResponse"
		},
		"35904": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35905": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"35906": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35907": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35908": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35909": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"35910": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListDeleteResponse"
		},
		"35911": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35912": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35913": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35914": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse"
		},
		"35915": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.created"
		},
		"35916": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.updated"
		},
		"35917": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.deleted"
		},
		"35918": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35919": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"35920": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"35921": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"35922": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory"
		},
		"35923": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.category_children"
		},
		"35924": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.parent_category"
		},
		"35925": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.products"
		},
		"35926": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "name"
		},
		"35927": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "id"
		},
		"35928": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "created_at"
		},
		"35929": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "updated_at"
		},
		"35930": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "deleted_at"
		},
		"35931": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "description"
		},
		"35932": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "metadata"
		},
		"35933": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "handle"
		},
		"35934": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "parent_category_id"
		},
		"35935": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_active"
		},
		"35936": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_internal"
		},
		"35937": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "rank"
		},
		"35938": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory"
		},
		"35939": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.name"
		},
		"35940": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.description"
		},
		"35941": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.handle"
		},
		"35942": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_internal"
		},
		"35943": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_active"
		},
		"35944": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.parent_category_id"
		},
		"35945": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.rank"
		},
		"35946": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.metadata"
		},
		"35947": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory"
		},
		"35948": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.name"
		},
		"35949": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.description"
		},
		"35950": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.handle"
		},
		"35951": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_internal"
		},
		"35952": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_active"
		},
		"35953": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.parent_category_id"
		},
		"35954": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.rank"
		},
		"35955": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.metadata"
		},
		"35956": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts"
		},
		"35957": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.add"
		},
		"35958": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.remove"
		},
		"35959": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams"
		},
		"35960": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_internal"
		},
		"35961": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_active"
		},
		"35962": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"35963": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"35964": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"35965": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"35966": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"35967": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"35968": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"35969": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"35970": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"35971": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"35972": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"35973": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"35974": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"35975": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"35976": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35977": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35978": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35979": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryParams"
		},
		"35980": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"35981": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"35982": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"35983": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"35984": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"35985": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"35986": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"35987": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"35988": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"35989": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"35990": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"35991": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"35992": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryDeleteResponse"
		},
		"35993": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"35994": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"35995": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"35996": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/entities.ts",
			"qualifiedName": "AdminProductTag"
		},
		"35997": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"35998": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"35999": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"36000": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"36001": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"36002": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"36003": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag"
		},
		"36004": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.value"
		},
		"36005": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.metadata"
		},
		"36006": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag"
		},
		"36007": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.value"
		},
		"36008": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.metadata"
		},
		"36009": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams"
		},
		"36010": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams.deleted_at"
		},
		"36011": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"36012": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"36013": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"36014": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"36015": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"36016": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36017": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36018": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36019": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36020": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36021": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36022": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagParams"
		},
		"36023": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36024": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse"
		},
		"36025": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse.product_tag"
		},
		"36026": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagListResponse"
		},
		"36027": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36028": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"36029": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"36030": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"36031": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"36032": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"36033": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagDeleteResponse"
		},
		"36034": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36035": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36036": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36037": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/entities.ts",
			"qualifiedName": "AdminProductType"
		},
		"36038": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"36039": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"36040": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"36041": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"36042": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"36043": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"36044": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType"
		},
		"36045": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.value"
		},
		"36046": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.metadata"
		},
		"36047": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType"
		},
		"36048": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.value"
		},
		"36049": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.metadata"
		},
		"36050": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams"
		},
		"36051": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.q"
		},
		"36052": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.id"
		},
		"36053": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.value"
		},
		"36054": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.created_at"
		},
		"36055": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.updated_at"
		},
		"36056": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.deleted_at"
		},
		"36057": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36058": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36059": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36060": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36061": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36062": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36063": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeParams"
		},
		"36064": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36065": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse"
		},
		"36066": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse.product_type"
		},
		"36067": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeListResponse"
		},
		"36068": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36069": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"36070": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"36071": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"36072": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"36073": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"36074": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeDeleteResponse"
		},
		"36075": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36076": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36077": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36078": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation"
		},
		"36079": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.id"
		},
		"36080": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.line_item_id"
		},
		"36081": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.location_id"
		},
		"36082": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.quantity"
		},
		"36083": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.external_id"
		},
		"36084": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.description"
		},
		"36085": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.inventory_item_id"
		},
		"36086": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.inventory_item"
		},
		"36087": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.metadata"
		},
		"36088": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.created_by"
		},
		"36089": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.deleted_at"
		},
		"36090": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.created_at"
		},
		"36091": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.updated_at"
		},
		"36092": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation"
		},
		"36093": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.line_item_id"
		},
		"36094": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.location_id"
		},
		"36095": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.inventory_item_id"
		},
		"36096": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.quantity"
		},
		"36097": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.description"
		},
		"36098": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.metadata"
		},
		"36099": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation"
		},
		"36100": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.location_id"
		},
		"36101": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.quantity"
		},
		"36102": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.description"
		},
		"36103": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.metadata"
		},
		"36104": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"36105": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.limit"
		},
		"36106": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.offset"
		},
		"36107": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.location_id"
		},
		"36108": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.inventory_item_id"
		},
		"36109": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.line_item_id"
		},
		"36110": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.created_by"
		},
		"36111": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.description"
		},
		"36112": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.created_at"
		},
		"36113": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.updated_at"
		},
		"36114": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.deleted_at"
		},
		"36115": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminReservationParams"
		},
		"36116": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36117": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationResponse"
		},
		"36118": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationResponse.reservation"
		},
		"36119": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationListResponse"
		},
		"36120": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36121": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "__type.reservations"
		},
		"36122": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationDeleteResponse"
		},
		"36123": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/entities.ts",
			"qualifiedName": "AdminReturnItem"
		},
		"36124": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.id"
		},
		"36125": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.quantity"
		},
		"36126": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.received_quantity"
		},
		"36127": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.damaged_quantity"
		},
		"36128": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.reason_id"
		},
		"36129": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.note"
		},
		"36130": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.item_id"
		},
		"36131": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.return_id"
		},
		"36132": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.metadata"
		},
		"36133": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/entities.ts",
			"qualifiedName": "AdminReturn"
		},
		"36134": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.id"
		},
		"36135": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_id"
		},
		"36136": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.status"
		},
		"36137": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.exchange_id"
		},
		"36138": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.location_id"
		},
		"36139": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.claim_id"
		},
		"36140": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_version"
		},
		"36141": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.display_id"
		},
		"36142": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.no_notification"
		},
		"36143": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.refund_amount"
		},
		"36144": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.items"
		},
		"36145": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.received_at"
		},
		"36146": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.created_at"
		},
		"36147": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.canceled_at"
		},
		"36148": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest"
		},
		"36149": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.order_id"
		},
		"36150": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.location_id"
		},
		"36151": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.description"
		},
		"36152": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.internal_note"
		},
		"36153": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.no_notification"
		},
		"36154": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.metadata"
		},
		"36155": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem"
		},
		"36156": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.id"
		},
		"36157": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.quantity"
		},
		"36158": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.description"
		},
		"36159": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.internal_note"
		},
		"36160": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.metadata"
		},
		"36161": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItems"
		},
		"36162": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItems.items"
		},
		"36163": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems"
		},
		"36164": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.quantity"
		},
		"36165": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.internal_note"
		},
		"36166": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.reason_id"
		},
		"36167": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping"
		},
		"36168": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.shipping_option_id"
		},
		"36169": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.custom_amount"
		},
		"36170": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.description"
		},
		"36171": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.internal_note"
		},
		"36172": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.metadata"
		},
		"36173": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping"
		},
		"36174": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.custom_amount"
		},
		"36175": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.internal_note"
		},
		"36176": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.metadata"
		},
		"36177": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReturnRequest"
		},
		"36178": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReturnRequest.no_notification"
		},
		"36179": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest"
		},
		"36180": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.location_id"
		},
		"36181": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.no_notification"
		},
		"36182": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.metadata"
		},
		"36183": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReceiveReturn"
		},
		"36184": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReceiveReturn.no_notification"
		},
		"36185": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn"
		},
		"36186": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.internal_note"
		},
		"36187": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.description"
		},
		"36188": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.metadata"
		},
		"36189": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminReceiveItems"
		},
		"36190": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminReceiveItems.items"
		},
		"36191": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"36192": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"36193": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"36194": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"36195": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminDismissItems"
		},
		"36196": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminDismissItems.items"
		},
		"36197": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"36198": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"36199": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"36200": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"36201": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems"
		},
		"36202": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.quantity"
		},
		"36203": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.internal_note"
		},
		"36204": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.reason_id"
		},
		"36205": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.metadata"
		},
		"36206": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems"
		},
		"36207": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.quantity"
		},
		"36208": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.internal_note"
		},
		"36209": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.reason_id"
		},
		"36210": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.metadata"
		},
		"36211": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters"
		},
		"36212": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.id"
		},
		"36213": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.order_id"
		},
		"36214": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.status"
		},
		"36215": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.created_at"
		},
		"36216": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.updated_at"
		},
		"36217": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36218": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36219": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36220": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36221": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnResponse"
		},
		"36222": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnResponse.return"
		},
		"36223": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnsResponse"
		},
		"36224": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36225": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "__type.returns"
		},
		"36226": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse"
		},
		"36227": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse.order"
		},
		"36228": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse.return"
		},
		"36229": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse"
		},
		"36230": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse.order_preview"
		},
		"36231": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse.return"
		},
		"36232": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnDeleteResponse"
		},
		"36233": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/entities.ts",
			"qualifiedName": "AdminReturnReason"
		},
		"36234": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"36235": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"36236": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"36237": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"36238": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"36239": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"36240": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"36241": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason"
		},
		"36242": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason.metadata"
		},
		"36243": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "value"
		},
		"36244": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "description"
		},
		"36245": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "label"
		},
		"36246": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnReason"
		},
		"36247": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnReason.metadata"
		},
		"36248": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "value"
		},
		"36249": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "description"
		},
		"36250": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "label"
		},
		"36251": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams"
		},
		"36252": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams.deleted_at"
		},
		"36253": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"36254": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"36255": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"36256": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"36257": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"36258": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"36259": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"36260": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"36261": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36262": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36263": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36264": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36267": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonParams"
		},
		"36268": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36269": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse"
		},
		"36270": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse.return_reason"
		},
		"36271": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonListResponse"
		},
		"36272": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36273": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"36274": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"36275": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"36276": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"36277": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"36278": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonDeleteResponse"
		},
		"36279": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36280": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36281": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36282": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType"
		},
		"36283": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.id"
		},
		"36284": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.label"
		},
		"36285": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.description"
		},
		"36286": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.code"
		},
		"36287": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.shipping_option_id"
		},
		"36288": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.created_at"
		},
		"36289": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.updated_at"
		},
		"36290": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.deleted_at"
		},
		"36291": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule"
		},
		"36292": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.id"
		},
		"36293": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.attribute"
		},
		"36294": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.operator"
		},
		"36295": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.value"
		},
		"36296": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.shipping_option_id"
		},
		"36297": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.created_at"
		},
		"36298": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.updated_at"
		},
		"36299": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.deleted_at"
		},
		"36300": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule"
		},
		"36301": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.id"
		},
		"36302": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.value"
		},
		"36303": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice"
		},
		"36304": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.price_rules"
		},
		"36305": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.rules_count"
		},
		"36306": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption"
		},
		"36307": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.id"
		},
		"36308": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.name"
		},
		"36309": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.price_type"
		},
		"36310": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone_id"
		},
		"36311": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone"
		},
		"36312": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider_id"
		},
		"36313": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider"
		},
		"36314": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_option_type_id"
		},
		"36315": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.type"
		},
		"36316": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile_id"
		},
		"36317": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile"
		},
		"36318": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.rules"
		},
		"36319": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.prices"
		},
		"36320": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.data"
		},
		"36321": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.metadata"
		},
		"36322": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.created_at"
		},
		"36323": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.updated_at"
		},
		"36324": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.deleted_at"
		},
		"36325": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule"
		},
		"36326": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"36327": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"36328": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"36329": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType"
		},
		"36330": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.label"
		},
		"36331": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.description"
		},
		"36332": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.code"
		},
		"36333": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency"
		},
		"36334": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.currency_code"
		},
		"36335": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.amount"
		},
		"36336": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion"
		},
		"36337": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.region_id"
		},
		"36338": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.amount"
		},
		"36339": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption"
		},
		"36340": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.name"
		},
		"36341": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.service_zone_id"
		},
		"36342": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.shipping_profile_id"
		},
		"36343": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.data"
		},
		"36344": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.price_type"
		},
		"36345": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.provider_id"
		},
		"36346": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.type"
		},
		"36347": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.prices"
		},
		"36348": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.rules"
		},
		"36349": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule"
		},
		"36350": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule.id"
		},
		"36351": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"36352": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"36353": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"36354": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency"
		},
		"36355": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.id"
		},
		"36356": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.currency_code"
		},
		"36357": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.amount"
		},
		"36358": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion"
		},
		"36359": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.id"
		},
		"36360": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.region_id"
		},
		"36361": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.amount"
		},
		"36362": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption"
		},
		"36363": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.name"
		},
		"36364": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.data"
		},
		"36365": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.price_type"
		},
		"36366": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.provider_id"
		},
		"36367": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.shipping_profile_id"
		},
		"36368": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.type"
		},
		"36369": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.prices"
		},
		"36370": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.rules"
		},
		"36371": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules"
		},
		"36372": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.create"
		},
		"36373": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.update"
		},
		"36374": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.delete"
		},
		"36375": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams"
		},
		"36376": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.id"
		},
		"36377": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.q"
		},
		"36378": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.service_zone_id"
		},
		"36379": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.stock_location_id"
		},
		"36380": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.is_return"
		},
		"36381": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.admin_only"
		},
		"36382": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_profile_id"
		},
		"36383": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.provider_id"
		},
		"36384": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_option_type_id"
		},
		"36385": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.created_at"
		},
		"36386": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.updated_at"
		},
		"36387": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.deleted_at"
		},
		"36388": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36389": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36390": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36391": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36392": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse"
		},
		"36393": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse.shipping_option"
		},
		"36394": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionListResponse"
		},
		"36395": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36396": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"36397": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionDeleteResponse"
		},
		"36398": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36399": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36400": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36401": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
		},
		"36402": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile"
		},
		"36403": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.id"
		},
		"36404": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.name"
		},
		"36405": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.type"
		},
		"36406": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.metadata"
		},
		"36407": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.created_at"
		},
		"36408": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.updated_at"
		},
		"36409": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.deleted_at"
		},
		"36410": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile"
		},
		"36411": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.name"
		},
		"36412": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.type"
		},
		"36413": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.metadata"
		},
		"36414": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile"
		},
		"36415": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.name"
		},
		"36416": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.type"
		},
		"36417": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.metadata"
		},
		"36418": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams"
		},
		"36419": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.id"
		},
		"36420": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.q"
		},
		"36421": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.type"
		},
		"36422": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.name"
		},
		"36423": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.created_at"
		},
		"36424": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.updated_at"
		},
		"36425": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.deleted_at"
		},
		"36426": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$and"
		},
		"36427": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$or"
		},
		"36428": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36429": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36430": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36431": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36432": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse"
		},
		"36433": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse.shipping_profile"
		},
		"36434": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileListResponse"
		},
		"36435": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36436": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"36437": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileDeleteResponse"
		},
		"36438": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36439": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36440": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36441": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress"
		},
		"36442": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.id"
		},
		"36443": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_1"
		},
		"36444": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_2"
		},
		"36445": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.company"
		},
		"36446": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.country_code"
		},
		"36447": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.city"
		},
		"36448": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.phone"
		},
		"36449": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.postal_code"
		},
		"36450": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.province"
		},
		"36451": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation"
		},
		"36452": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.id"
		},
		"36453": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.name"
		},
		"36454": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address_id"
		},
		"36455": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address"
		},
		"36456": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.sales_channels"
		},
		"36457": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_providers"
		},
		"36458": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_sets"
		},
		"36459": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation"
		},
		"36460": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.name"
		},
		"36461": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address_id"
		},
		"36462": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address"
		},
		"36463": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.metadata"
		},
		"36464": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation"
		},
		"36465": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.name"
		},
		"36466": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address_id"
		},
		"36467": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address"
		},
		"36468": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.metadata"
		},
		"36469": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels"
		},
		"36470": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.add"
		},
		"36471": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.remove"
		},
		"36472": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
		},
		"36473": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.name"
		},
		"36474": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.type"
		},
		"36475": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams"
		},
		"36476": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.id"
		},
		"36477": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.q"
		},
		"36478": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.name"
		},
		"36479": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.address_id"
		},
		"36480": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.sales_channel_id"
		},
		"36481": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$and"
		},
		"36482": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$or"
		},
		"36483": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.created_at"
		},
		"36484": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.updated_at"
		},
		"36485": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.deleted_at"
		},
		"36486": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36487": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36488": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36489": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36490": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"36491": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse.stock_location"
		},
		"36492": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationListResponse"
		},
		"36493": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36494": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"36495": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"36496": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"36497": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"36498": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"36499": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationDeleteResponse"
		},
		"36500": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36501": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36502": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36503": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule"
		},
		"36504": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference"
		},
		"36505": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference_id"
		},
		"36506": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate"
		},
		"36507": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.id"
		},
		"36508": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rate"
		},
		"36509": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.code"
		},
		"36510": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.name"
		},
		"36511": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.metadata"
		},
		"36512": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region_id"
		},
		"36513": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_combinable"
		},
		"36514": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_default"
		},
		"36515": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_at"
		},
		"36516": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.updated_at"
		},
		"36517": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.deleted_at"
		},
		"36518": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_by"
		},
		"36519": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region"
		},
		"36520": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rules"
		},
		"36521": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate"
		},
		"36522": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.name"
		},
		"36523": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.tax_region_id"
		},
		"36524": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rate"
		},
		"36525": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.code"
		},
		"36526": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rules"
		},
		"36527": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_default"
		},
		"36528": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_combinable"
		},
		"36529": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.metadata"
		},
		"36530": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate"
		},
		"36531": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.name"
		},
		"36532": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rate"
		},
		"36533": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.code"
		},
		"36534": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rules"
		},
		"36535": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_default"
		},
		"36536": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_combinable"
		},
		"36537": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.metadata"
		},
		"36538": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams"
		},
		"36539": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.q"
		},
		"36540": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.tax_region_id"
		},
		"36541": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.is_default"
		},
		"36542": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.service_zone_id"
		},
		"36543": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_profile_id"
		},
		"36544": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.provider_id"
		},
		"36545": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_option_type_id"
		},
		"36546": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.created_at"
		},
		"36547": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.updated_at"
		},
		"36548": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.deleted_at"
		},
		"36549": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36550": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36551": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36552": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36553": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36554": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36555": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse"
		},
		"36556": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse.tax_rate"
		},
		"36557": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateListResponse"
		},
		"36558": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36559": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"36560": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateDeleteResponse"
		},
		"36561": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36562": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36563": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36564": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateRuleDeleteResponse"
		},
		"36565": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion"
		},
		"36566": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.id"
		},
		"36567": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.rate"
		},
		"36568": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.code"
		},
		"36569": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.country_code"
		},
		"36570": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.province_code"
		},
		"36571": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.name"
		},
		"36572": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.metadata"
		},
		"36573": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_region_id"
		},
		"36574": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_combinable"
		},
		"36575": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_default"
		},
		"36576": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent_id"
		},
		"36577": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_at"
		},
		"36578": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.updated_at"
		},
		"36579": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.deleted_at"
		},
		"36580": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_by"
		},
		"36581": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_rates"
		},
		"36582": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent"
		},
		"36583": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.children"
		},
		"36584": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion"
		},
		"36585": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.country_code"
		},
		"36586": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.province_code"
		},
		"36587": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.parent_id"
		},
		"36588": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.default_tax_rate"
		},
		"36589": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"36590": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.rate"
		},
		"36591": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.code"
		},
		"36592": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.name"
		},
		"36593": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.is_combinable"
		},
		"36594": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"36595": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.metadata"
		},
		"36596": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams"
		},
		"36597": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.id"
		},
		"36598": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.q"
		},
		"36599": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.parent_id"
		},
		"36600": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.country_code"
		},
		"36601": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.province_code"
		},
		"36602": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_at"
		},
		"36603": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.updated_at"
		},
		"36604": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.deleted_at"
		},
		"36605": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_by"
		},
		"36606": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36607": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36608": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36609": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36610": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36611": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36612": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionParams"
		},
		"36613": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36614": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse"
		},
		"36615": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse.tax_region"
		},
		"36616": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionListResponse"
		},
		"36617": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36618": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type.tax_regions"
		},
		"36619": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionDeleteResponse"
		},
		"36620": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"36621": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"36622": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"36623": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"36624": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionState"
		},
		"36625": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionStepState"
		},
		"36626": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "StepInvokeResult"
		},
		"36627": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"36628": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.output"
		},
		"36629": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"36630": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.output"
		},
		"36631": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.compensateInput"
		},
		"36632": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "StepError"
		},
		"36633": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"36634": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.error"
		},
		"36635": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.action"
		},
		"36636": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.handlerType"
		},
		"36637": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext"
		},
		"36638": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.data"
		},
		"36639": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"36640": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.invoke"
		},
		"36641": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.payload"
		},
		"36642": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.compensate"
		},
		"36643": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.errors"
		},
		"36644": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition"
		},
		"36645": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.async"
		},
		"36646": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.compensateAsync"
		},
		"36647": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.noCompensation"
		},
		"36648": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.continueOnPermanentFailure"
		},
		"36649": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.maxRetries"
		},
		"36650": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.noWait"
		},
		"36651": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.retryInterval"
		},
		"36652": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.retryIntervalAwaiting"
		},
		"36653": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.saveResponse"
		},
		"36654": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.timeout"
		},
		"36655": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn"
		},
		"36656": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn.state"
		},
		"36657": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn.status"
		},
		"36658": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep"
		},
		"36659": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.id"
		},
		"36660": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.invoke"
		},
		"36661": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.definition"
		},
		"36662": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.compensate"
		},
		"36663": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.depth"
		},
		"36664": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.startedAt"
		},
		"36665": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution"
		},
		"36666": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.id"
		},
		"36667": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.workflow_id"
		},
		"36668": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.transaction_id"
		},
		"36669": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.execution"
		},
		"36670": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.context"
		},
		"36671": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.state"
		},
		"36672": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.created_at"
		},
		"36673": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.updated_at"
		},
		"36674": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.deleted_at"
		},
		"36675": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"36676": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.transaction_id"
		},
		"36677": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.workflow_id"
		},
		"36678": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36679": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36680": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36681": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36682": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionResponse"
		},
		"36683": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionResponse.workflow_execution"
		},
		"36684": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionListResponse"
		},
		"36685": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36686": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type.workflow_executions"
		},
		"36687": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowRunResponse"
		},
		"36688": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"36689": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"36690": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"36691": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"36692": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"36693": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"36694": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"36695": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"36696": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"36697": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"36698": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"36699": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"36700": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"36701": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"36702": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"36703": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"36704": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"36705": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"36706": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"36707": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"36708": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"36709": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"36710": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"36711": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"36712": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"36713": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"36714": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"36715": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"36716": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"36717": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"36718": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"36719": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"36720": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"36721": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"36722": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"36723": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"36724": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"36725": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"36726": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"36727": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"36728": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"36729": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"36730": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"36731": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"36732": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"36733": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"36734": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"36735": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"36736": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36737": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36738": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"36739": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"36740": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"36741": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"36742": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"36743": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"36744": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"36745": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"36746": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"36747": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"36748": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"36749": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"36750": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"36751": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"36752": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"36754": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"36755": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"36756": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"36757": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"36758": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"36759": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"36760": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"36761": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"36762": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"36763": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"36764": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"36765": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"36766": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"36767": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"36768": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"36769": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"36770": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"36771": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"36772": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"36773": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"36774": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"36775": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"36776": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"36777": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"36778": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"36779": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"36780": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"36781": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"36782": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"36783": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"36784": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"36785": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"36786": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"36787": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"36788": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"36789": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"36790": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"36791": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"36792": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"36793": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"36794": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"36795": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"36796": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"36797": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"36798": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"36799": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"36800": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"36801": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"36802": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"36803": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"36804": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"36805": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"36806": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkAdjustInventoryLevelInput"
		},
		"36807": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type"
		},
		"36808": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"36809": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"36810": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.adjustment"
		},
		"36811": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"36812": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"36813": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"36814": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"36815": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"36816": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"36817": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"36818": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"36819": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"36820": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"36821": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"36822": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"36823": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"36824": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"36825": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"36826": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"36827": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"36828": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext"
		},
		"36829": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.locationId"
		},
		"36830": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.lineItemId"
		},
		"36831": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.salesChannelId"
		},
		"36832": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"36833": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"36834": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"36835": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36836": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36837": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36838": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"36839": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"36840": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36841": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36842": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36843": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"36844": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"36845": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36846": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36847": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36848": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"36849": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"36850": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36851": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36852": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36853": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"36854": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"36855": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36856": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36857": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36858": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"36859": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"36860": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"36861": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36862": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36863": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"36864": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"36865": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"36866": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36867": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36868": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"36869": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"36870": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"36871": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"36872": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36873": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"36874": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"36875": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"36876": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36877": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36878": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"36879": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"36880": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"36881": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36882": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36883": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"36884": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"36885": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36886": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36887": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"36888": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36889": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36890": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"36891": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"36892": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36893": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36894": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"36895": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36896": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36897": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"36898": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"36899": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"36900": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36901": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"36902": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"36903": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36904": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"36905": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"36906": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"36907": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36908": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"36909": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"36910": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36911": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"36912": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"36913": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36914": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36915": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"36916": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36917": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36918": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"36919": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"36920": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36921": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36922": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"36923": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36924": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36925": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"36926": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"36927": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"36928": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36929": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"36930": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"36931": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"36932": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36933": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"36934": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"36935": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"36936": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36937": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"36938": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"36939": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36940": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"36941": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36942": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36943": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"36944": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"36945": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36946": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"36947": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36948": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36949": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"36950": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"36951": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"36952": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36953": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"36954": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"36955": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36956": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"36957": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36958": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36959": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"36960": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"36961": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36962": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"36963": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36964": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36965": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"36966": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"36967": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"36968": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36969": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"36970": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"36971": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"36972": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36973": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"36974": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"36975": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"36976": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"36977": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36978": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"36979": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"36980": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"36981": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"36982": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"36983": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"36984": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36985": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"36986": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36987": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36988": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"36989": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"36990": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"36991": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"36992": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"36993": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"36994": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"36995": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"36996": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"36997": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"36998": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"36999": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"37000": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"37001": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37002": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"37003": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"37004": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"37005": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"37006": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37007": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"37008": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"37009": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"37010": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"37011": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"37012": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37013": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"37014": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"37015": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"37016": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"37017": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37018": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"37019": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"37020": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"37021": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"37022": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37023": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"37024": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"37025": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"37026": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"37027": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37041": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"37042": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"37043": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"37044": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37045": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37046": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"37047": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"37048": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37049": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37050": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"37051": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"37052": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37053": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37054": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"37055": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"37056": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37057": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37058": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"37059": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37060": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37061": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37062": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"37063": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"37064": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37065": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37066": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"37067": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37068": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"37069": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37070": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37071": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"37072": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"37073": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"37074": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37075": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37076": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"37077": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37078": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"37079": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37080": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37081": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"37082": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37083": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"37084": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37085": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37086": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37087": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"37088": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37089": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37090": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37091": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"37092": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37093": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37094": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"37095": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"37096": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37097": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"37098": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"37099": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"37100": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"37101": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37102": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37103": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37104": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37105": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"37106": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"37107": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"37108": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"37109": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"37110": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37111": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"37112": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"37113": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"37114": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"37115": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"37116": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"37117": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37118": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"37119": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"37120": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"37121": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"37122": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"37123": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"37124": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"37125": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"37126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"37127": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"37128": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37129": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"37130": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"37131": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"37132": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37133": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"37134": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"37135": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"37136": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"37137": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"37138": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"37139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"37140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"37142": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"37143": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"37144": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"37145": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"37146": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"37147": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"37148": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37149": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"37150": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"37151": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"37152": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"37153": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"37154": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"37155": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"37157": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"37158": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"37159": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37160": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"37161": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"37162": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"37163": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"37164": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"37165": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"37166": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37167": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"37168": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"37169": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"37170": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"37171": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37172": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"37173": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"37174": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"37175": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37176": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"37177": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"37178": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"37179": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"37180": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"37181": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"37182": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37183": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37184": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"37185": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"37186": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"37187": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37188": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"37189": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"37190": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"37191": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"37193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"37194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"37195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"37196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkDefinition"
		},
		"37197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"37200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"37203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.data"
		},
		"37205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"37206": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37207": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"37208": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"37209": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"37210": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37211": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"37212": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"37213": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37214": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"37215": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"37216": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"37217": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"37218": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"37219": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"37220": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"37221": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"37222": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"37223": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"37224": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"37225": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37226": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"37227": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"37228": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"37229": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"37230": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37231": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"37232": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"37233": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37234": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"37235": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"37236": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"37237": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"37238": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"37239": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"37240": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"37241": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"37242": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"37243": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"37244": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"37245": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"37246": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"37247": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"37248": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"37249": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"37250": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"37251": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37252": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"37253": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"37254": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"37255": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"37256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"37257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"37258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"37259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"37260": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"37261": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37262": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"37263": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"37264": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"37265": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"37266": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37267": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"37268": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"37269": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"37272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"37273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"37274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"37276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"37277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"37278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"37279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"37293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService"
		},
		"37294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"37295": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"37296": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"37297": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"37298": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"37299": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"37300": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37301": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"37302": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"37303": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"37304": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37305": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"37306": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"37307": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"37308": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37309": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"37311": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37312": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"37313": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"37314": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"37315": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37316": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37317": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"37318": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37319": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"37320": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"37321": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37322": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37323": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"37324": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37325": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37326": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"37327": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"37328": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37329": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37330": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"37331": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37332": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37333": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"37334": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"37335": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"37336": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"37337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37338": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37339": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"37340": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37341": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"37342": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"37343": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"37344": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"37345": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37346": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37347": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"37348": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37349": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37350": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"37352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37353": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37354": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"37355": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37356": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37357": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"37358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"37361": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37362": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"37363": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"37364": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"37365": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"37366": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37367": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37368": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37369": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"37370": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"37371": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"37372": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37373": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37374": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37375": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"37376": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"37377": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"37378": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37379": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37380": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"37381": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"37382": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37383": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37384": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"37385": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37386": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37387": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"37388": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"37389": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"37390": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"37391": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"37392": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"37393": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.entities"
		},
		"37394": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"37395": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TEntity"
		},
		"37396": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"37397": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TContainer"
		},
		"37398": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"37399": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"37400": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"37401": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"37402": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"37403": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"37404": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.id"
		},
		"37405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"37406": {
			"sourceFileName": "../../../../packages/core/types/src/notification/index.ts",
			"qualifiedName": ""
		},
		"37407": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment"
		},
		"37408": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.content"
		},
		"37409": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.filename"
		},
		"37410": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.content_type"
		},
		"37411": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.disposition"
		},
		"37412": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.id"
		},
		"37413": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO"
		},
		"37414": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.id"
		},
		"37415": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.to"
		},
		"37416": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.from"
		},
		"37417": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.attachments"
		},
		"37418": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.channel"
		},
		"37419": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.template"
		},
		"37420": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.data"
		},
		"37421": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.trigger_type"
		},
		"37422": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_id"
		},
		"37423": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_type"
		},
		"37424": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.receiver_id"
		},
		"37425": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.original_notification_id"
		},
		"37426": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.external_id"
		},
		"37427": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider_id"
		},
		"37428": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider"
		},
		"37429": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.created_at"
		},
		"37430": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.status"
		},
		"37431": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO"
		},
		"37432": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.id"
		},
		"37433": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.handle"
		},
		"37434": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.name"
		},
		"37435": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.channels"
		},
		"37436": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps"
		},
		"37437": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.q"
		},
		"37438": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.to"
		},
		"37439": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.channel"
		},
		"37440": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.template"
		},
		"37441": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.trigger_type"
		},
		"37442": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_id"
		},
		"37443": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_type"
		},
		"37444": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.receiver_id"
		},
		"37445": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.created_at"
		},
		"37446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"37447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"37448": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/logger.ts",
			"qualifiedName": "LocalNotificationServiceOptions"
		},
		"37449": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions"
		},
		"37450": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.api_key"
		},
		"37451": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.from"
		},
		"37452": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO"
		},
		"37453": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.to"
		},
		"37454": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.channel"
		},
		"37455": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.template"
		},
		"37456": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.data"
		},
		"37457": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.trigger_type"
		},
		"37458": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_id"
		},
		"37459": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_type"
		},
		"37460": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.receiver_id"
		},
		"37461": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.original_notification_id"
		},
		"37462": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.idempotency_key"
		},
		"37463": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"37464": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"37465": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"37466": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"37467": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37468": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"37469": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"37470": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37471": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"37472": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"37473": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"37474": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"37475": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37476": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"37477": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"37478": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"37479": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"37480": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37481": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"37482": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"37483": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"37484": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"37485": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37499": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationDTO"
		},
		"37500": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.to"
		},
		"37501": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.from"
		},
		"37502": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.attachments"
		},
		"37503": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.channel"
		},
		"37504": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.template"
		},
		"37505": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.data"
		},
		"37506": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationResultsDTO"
		},
		"37507": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.id"
		},
		"37508": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider"
		},
		"37509": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"37510": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"37511": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "notification"
		},
		"37512": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"37513": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"37514": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"37515": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"37516": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"37517": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"37518": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"37519": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"37520": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"37521": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"37522": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"37523": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"37524": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"37525": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37526": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"37527": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"37528": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"37529": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37530": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"37531": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"37532": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37533": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"37534": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"37535": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"37536": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"37537": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37538": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"37539": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"37540": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"37541": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"37542": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37543": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"37544": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"37545": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"37546": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37547": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"37548": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"37549": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37550": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"37551": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"37552": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"37553": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"37554": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"37555": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"37556": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/index.ts",
			"qualifiedName": ""
		},
		"37557": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"37558": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37559": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"37560": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"37561": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"37562": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"37563": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"37564": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"37565": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"37566": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"37567": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"37568": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37569": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"37570": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"37571": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"37572": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"37573": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37574": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"37575": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"37576": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37577": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"37578": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"37579": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"37580": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"37581": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"37582": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"37583": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"37584": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37585": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"37586": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps"
		},
		"37587": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.q"
		},
		"37588": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.id"
		},
		"37589": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.name"
		},
		"37590": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"37591": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"37592": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressInput"
		},
		"37593": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37594": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"37595": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"37596": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"37597": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"37598": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"37599": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"37600": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"37601": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37602": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "CreateStockLocationInput"
		},
		"37603": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37604": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"37605": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"37606": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"37607": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37608": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpdateStockLocationInput"
		},
		"37609": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"37610": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"37611": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"37612": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"37613": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37614": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpsertStockLocationInput"
		},
		"37615": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "name"
		},
		"37616": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address_id"
		},
		"37617": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address"
		},
		"37618": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "metadata"
		},
		"37619": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"37620": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService"
		},
		"37621": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"37622": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"37623": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"37624": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"37625": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37626": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"37627": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"37628": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"37629": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"37630": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37631": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"37632": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"37633": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"37634": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"37635": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37636": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"37637": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"37638": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"37639": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37640": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"37641": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"37642": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37643": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"37644": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"37645": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"37646": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37647": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"37648": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"37649": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37650": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"37651": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"37652": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"37653": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"37654": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37655": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"37656": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"37657": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"37658": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37659": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"37660": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"37661": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"37662": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"37663": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"37664": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"37665": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"37666": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"37667": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"37668": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37669": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"37670": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"37671": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"37672": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"37673": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"37674": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37688": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"37689": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"37690": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"37691": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"37692": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"37693": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"37694": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"37695": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"37696": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"37697": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"37698": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"37699": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"37700": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"37701": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"qualifiedName": ""
		},
		"37702": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO"
		},
		"37703": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.sku"
		},
		"37704": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.hs_code"
		},
		"37705": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.weight"
		},
		"37706": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.length"
		},
		"37707": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.height"
		},
		"37708": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.width"
		},
		"37709": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.origin_country"
		},
		"37710": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.mid_code"
		},
		"37711": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.material"
		},
		"37712": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.title"
		},
		"37713": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.description"
		},
		"37714": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.thumbnail"
		},
		"37715": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.metadata"
		},
		"37716": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO"
		},
		"37717": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO.inventoryItems"
		},
		"37718": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"37719": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"37720": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"37721": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"37722": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"37723": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"37724": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"37725": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_identity_id"
		},
		"37726": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"37727": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"37728": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"37729": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"37730": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"37731": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"37732": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"37733": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"37734": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"37735": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"37736": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"37737": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"37738": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"37739": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"37740": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"37741": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"37742": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"37743": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"37744": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"37745": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"37746": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"37747": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"37748": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"37749": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"37750": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"37751": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"37752": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.attribute"
		},
		"37753": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"37754": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"37755": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"37756": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"37757": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"37758": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"37759": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"37760": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"37761": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"37762": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"37763": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"37764": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"37765": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"37766": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"37767": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"37768": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"37769": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"37770": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"37771": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"37772": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"37773": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"37774": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"37775": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"37776": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"37777": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"37778": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"37779": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"37780": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"37781": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"37782": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"37783": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"37784": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"37785": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"37786": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput"
		},
		"37787": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput.product_categories"
		},
		"37788": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput"
		},
		"37789": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.selector"
		},
		"37790": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.update"
		},
		"37791": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
		},
		"37792": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"37793": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"37794": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"37795": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"37796": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"37797": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"37798": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"37799": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"37800": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"37801": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"37802": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"qualifiedName": ""
		},
		"37803": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO"
		},
		"37804": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.id"
		},
		"37805": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.workflow_id"
		},
		"37806": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.transaction_id"
		},
		"37807": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.execution"
		},
		"37808": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.context"
		},
		"37809": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.state"
		},
		"37810": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.created_at"
		},
		"37811": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.updated_at"
		},
		"37812": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.deleted_at"
		},
		"37813": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps"
		},
		"37814": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.id"
		},
		"37815": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.workflow_id"
		},
		"37816": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.transaction_id"
		},
		"37817": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.state"
		},
		"37818": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"37819": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"37820": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO"
		},
		"37821": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.workflow_id"
		},
		"37822": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.transaction_id"
		},
		"37823": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.execution"
		},
		"37824": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.context"
		},
		"37825": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.state"
		},
		"37826": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "Acknowledgement"
		},
		"37827": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37828": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"37829": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"37830": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO"
		},
		"37831": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.transactionId"
		},
		"37832": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"37833": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"37834": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"37835": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"37836": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.logOnError"
		},
		"37837": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"37838": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.T"
		},
		"37839": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IdempotencyKeyParts"
		},
		"37840": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37841": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"37842": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"37843": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepId"
		},
		"37844": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.action"
		},
		"37845": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService"
		},
		"37846": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"37847": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"37848": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "idOrObject"
		},
		"37849": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37850": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflow_id"
		},
		"37851": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"37852": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"37853": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37854": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"37855": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"37856": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"37857": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"37858": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37859": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"37860": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"37861": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"37862": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"37863": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37864": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"37865": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"37866": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"37867": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"37868": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37869": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37870": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.errors"
		},
		"37871": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction"
		},
		"37872": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.result"
		},
		"37873": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"37874": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"37875": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"37876": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"37877": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "transactionId"
		},
		"37878": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"37879": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37880": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"37881": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"37882": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"37883": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37884": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"37885": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"37886": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"37887": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37888": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"37889": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"37890": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"37891": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37892": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"37893": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"37894": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"37895": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37896": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"37897": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"37898": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"37899": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37900": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"37901": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"37902": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriber"
		},
		"37903": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"37904": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37905": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"37906": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"37907": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"37908": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"37909": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"37910": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"37911": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberOrId"
		},
		"37912": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37926": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": ""
		},
		"37927": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"37928": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntityConfig"
		},
		"37929": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37930": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"37931": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"37932": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferDmlEntityNameFromConfig"
		},
		"37933": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37934": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"37935": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37936": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"37937": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TConfig"
		},
		"37938": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"37939": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.name"
		},
		"37940": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"37941": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"37942": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Config"
		},
		"37943": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		},
		"37944": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"37945": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"37946": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37947": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"37948": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"37949": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"37950": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"37951": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37952": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"37953": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"37954": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"37955": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37956": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"37957": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"37958": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"37959": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"37960": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"37961": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37962": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"37963": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"37964": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"37965": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"37966": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"37967": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"37968": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37969": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"37970": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"37971": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37972": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"37973": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"37974": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"37975": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"37976": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"37977": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"37978": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"37979": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37980": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"37981": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"37982": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"37983": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"37984": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"37985": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"37986": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"37987": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"37988": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"37989": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"37990": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"37991": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37992": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"37993": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37994": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"37995": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"37996": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferBelongsToFields"
		},
		"37997": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37998": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"37999": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38000": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38001": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38002": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasOneFields"
		},
		"38003": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38004": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasManyFields"
		},
		"38005": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38006": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38007": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38008": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferManyToManyFields"
		},
		"38009": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38010": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferSchemaFields"
		},
		"38011": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"38012": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"38013": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38014": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"38015": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38016": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38017": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"38018": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"38019": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"38020": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38021": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"38022": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"38023": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferTypeOf"
		},
		"38024": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38025": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferEntityType"
		},
		"38026": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38027": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"38028": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38029": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38030": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38031": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"38032": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38033": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38034": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"38035": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"38036": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"38037": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"38038": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TWhere"
		},
		"38039": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "SimpleQueryValue"
		},
		"38040": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "NeQueryValue"
		},
		"38041": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38042": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$ne"
		},
		"38043": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryValue"
		},
		"38044": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryCondition"
		},
		"38045": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38046": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO"
		},
		"38047": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.quantity"
		},
		"38048": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_id"
		},
		"38049": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.title"
		},
		"38050": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.subtitle"
		},
		"38051": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.thumbnail"
		},
		"38052": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_id"
		},
		"38053": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_title"
		},
		"38054": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_description"
		},
		"38055": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_subtitle"
		},
		"38056": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_type"
		},
		"38057": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_collection"
		},
		"38058": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_handle"
		},
		"38059": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_sku"
		},
		"38060": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_barcode"
		},
		"38061": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_title"
		},
		"38062": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_option_values"
		},
		"38063": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.requires_shipping"
		},
		"38064": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_discountable"
		},
		"38065": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_tax_inclusive"
		},
		"38066": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_giftcard"
		},
		"38067": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.compare_at_unit_price"
		},
		"38068": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.unit_price"
		},
		"38069": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.metadata"
		},
		"38070": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO"
		},
		"38071": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.cart"
		},
		"38072": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.item"
		},
		"38073": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.update"
		},
		"38074": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO"
		},
		"38075": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.first_name"
		},
		"38076": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.last_name"
		},
		"38077": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.phone"
		},
		"38078": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.company"
		},
		"38079": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_1"
		},
		"38080": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_2"
		},
		"38081": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.city"
		},
		"38082": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.country_code"
		},
		"38083": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.province"
		},
		"38084": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.postal_code"
		},
		"38085": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.metadata"
		},
		"38086": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO"
		},
		"38087": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.region_id"
		},
		"38088": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.customer_id"
		},
		"38089": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.sales_channel_id"
		},
		"38090": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.email"
		},
		"38091": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.currency_code"
		},
		"38092": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address_id"
		},
		"38093": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address_id"
		},
		"38094": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address"
		},
		"38095": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address"
		},
		"38096": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.metadata"
		},
		"38097": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.items"
		},
		"38098": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.promo_codes"
		},
		"38099": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO"
		},
		"38100": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.items"
		},
		"38101": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.cart"
		},
		"38102": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO"
		},
		"38103": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.id"
		},
		"38104": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.promo_codes"
		},
		"38105": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.region_id"
		},
		"38106": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.customer_id"
		},
		"38107": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.sales_channel_id"
		},
		"38108": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.email"
		},
		"38109": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.currency_code"
		},
		"38110": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.metadata"
		},
		"38111": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO"
		},
		"38112": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.cart_id"
		},
		"38113": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.metadata"
		},
		"38114": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO"
		},
		"38115": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.customer"
		},
		"38116": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.product"
		},
		"38117": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.region"
		},
		"38118": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.id"
		},
		"38119": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.payment_collection"
		},
		"38120": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO"
		},
		"38121": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.cart_id"
		},
		"38122": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.sales_channel_id"
		},
		"38123": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.currency_code"
		},
		"38124": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.shipping_address"
		},
		"38125": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38126": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.city"
		},
		"38127": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.country_code"
		},
		"38128": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.province"
		},
		"38129": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO"
		},
		"38130": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO.amount"
		},
		"38131": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CompleteCartWorkflowInputDTO"
		},
		"38132": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CompleteCartWorkflowInputDTO.id"
		},
		"38133": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO"
		},
		"38134": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.sales_channel_id"
		},
		"38135": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.variants"
		},
		"38136": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38137": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38138": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.manage_inventory"
		},
		"38139": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"38140": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38141": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"38142": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"38143": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.required_quantity"
		},
		"38144": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory"
		},
		"38145": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38146": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.location_levels"
		},
		"38147": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38148": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"38149": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38150": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38151": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"38152": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38153": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38154": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.items"
		},
		"38155": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38156": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"38157": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.quantity"
		},
		"38158": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.itemsToUpdate"
		},
		"38159": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38160": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38161": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"38162": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"38163": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.quantity"
		},
		"38164": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"38165": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"38166": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"38167": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"38168": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"38169": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"38170": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"38171": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"38172": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"38173": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"38174": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"38175": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"38176": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"38177": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"38178": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"38179": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"38180": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"38181": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "AddFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"38182": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"38183": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38184": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "RemoveFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"38185": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"38186": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.ids"
		},
		"38187": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "UpdateFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"38188": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"38189": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38190": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"38191": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38192": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"38193": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"38194": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"38195": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"38196": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"38197": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"38198": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"38199": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"38200": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"38201": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"38202": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"38203": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"38204": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"38205": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"38206": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38207": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"38208": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"38209": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"38210": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"38211": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"38212": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38213": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"38214": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"38215": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"38216": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"38217": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"38218": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"38219": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"38220": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"38221": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"38222": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"38223": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"38224": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"38225": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"38226": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38227": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"38228": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"38229": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"38230": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"38231": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38232": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"38234": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"38235": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"38236": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"38237": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38238": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"38240": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"38241": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"38242": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"38243": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"38244": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"38246": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38247": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"38248": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"38249": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"38250": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "InternalJoinerServiceConfig"
		},
		"38251": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"38252": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"38253": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"38254": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"38255": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"38256": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"38257": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"38258": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"38259": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"38260": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"38261": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule"
		},
		"38262": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"38263": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"38264": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"38265": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"38266": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38267": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"38268": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"38269": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"38270": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"38271": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38272": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"38273": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"38274": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"38275": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"38276": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38277": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"38278": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"38279": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"38280": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"38281": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38282": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"38283": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"38284": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"38285": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38286": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"38287": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"38288": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"38289": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"38290": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38291": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"38292": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"38293": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"38294": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"38295": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38309": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "PlannerActionLinkDescriptor"
		},
		"38310": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"38311": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModule"
		},
		"38312": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModule"
		},
		"38313": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModel"
		},
		"38314": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModel"
		},
		"38315": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "LinkMigrationsPlannerAction"
		},
		"38316": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"38317": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"38318": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"38319": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.sql"
		},
		"38320": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"38321": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"38322": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"38323": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"38324": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"38325": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"38326": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"38327": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"38328": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"38329": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner"
		},
		"38330": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"38331": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"38332": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"38333": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"38334": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "actions"
		},
		"38335": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO"
		},
		"38336": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO.customer"
		},
		"38337": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO.region"
		},
		"38338": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO"
		},
		"38339": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.amount"
		},
		"38340": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.currency_code"
		},
		"38341": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.variant_id"
		},
		"38342": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.max_quantity"
		},
		"38343": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.min_quantity"
		},
		"38344": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.rules"
		},
		"38345": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO"
		},
		"38346": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.id"
		},
		"38347": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.variant_id"
		},
		"38348": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.amount"
		},
		"38349": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.currency_code"
		},
		"38350": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.max_quantity"
		},
		"38351": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.min_quantity"
		},
		"38352": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.rules"
		},
		"38353": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"38354": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.title"
		},
		"38355": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.description"
		},
		"38356": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.starts_at"
		},
		"38357": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.ends_at"
		},
		"38358": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.status"
		},
		"38359": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.rules"
		},
		"38360": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.prices"
		},
		"38361": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO"
		},
		"38362": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.id"
		},
		"38363": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.title"
		},
		"38364": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.description"
		},
		"38365": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.starts_at"
		},
		"38366": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.ends_at"
		},
		"38367": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.status"
		},
		"38368": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.rules"
		},
		"38369": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO"
		},
		"38370": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO.id"
		},
		"38371": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO.prices"
		},
		"38372": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO"
		},
		"38373": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.id"
		},
		"38374": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.create"
		},
		"38375": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.update"
		},
		"38376": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.delete"
		},
		"38377": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult"
		},
		"38378": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.created"
		},
		"38379": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.updated"
		},
		"38380": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.deleted"
		},
		"38381": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO"
		},
		"38382": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO.id"
		},
		"38383": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO.prices"
		},
		"38384": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO"
		},
		"38385": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO.data"
		},
		"38386": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO.variant_price_map"
		},
		"38387": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO"
		},
		"38388": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO.data"
		},
		"38389": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO.variant_price_map"
		},
		"38390": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO"
		},
		"38391": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO.data"
		},
		"38392": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "__type"
		},
		"38393": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38394": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO.variant_price_map"
		},
		"38395": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"38396": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"38397": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"38398": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "AddPromotionRulesWorkflowDTO"
		},
		"38399": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"38400": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"38401": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38402": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"38403": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38404": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rules"
		},
		"38405": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "RemovePromotionRulesWorkflowDTO"
		},
		"38406": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"38407": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"38408": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38409": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"38410": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"38411": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_ids"
		},
		"38412": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "UpdatePromotionRulesWorkflowDTO"
		},
		"38413": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"38414": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"38415": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"38416": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"38417": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"38418": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"38419": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"38420": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"38421": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"38422": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"38425": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"38426": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"38427": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"38428": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"38429": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"38430": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"38431": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"38432": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"38433": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"38434": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"38435": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"38436": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"38437": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"38438": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"38439": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"38440": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"38441": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"38442": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"38443": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"38444": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"38445": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"38446": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"38447": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"38448": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"38449": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"38450": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"38451": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"38452": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"38453": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"38454": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"38455": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"38456": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"38457": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"38458": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"38459": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"38460": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"38461": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"38462": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"38463": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"38464": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"38465": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"38466": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"38467": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"38468": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"38469": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"38470": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"38471": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"38472": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"38473": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"38474": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"38475": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"38476": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"38477": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"38478": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"38479": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"38480": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"38481": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"38482": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"38483": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"38484": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"38485": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"38487": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"38488": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"38489": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"38490": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"38491": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"38492": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"38493": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"38494": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"38495": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"38496": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38497": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"38498": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"38499": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38500": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"38501": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"38502": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38503": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"38504": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38505": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"38506": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"38507": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"38508": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38509": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"38510": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"38511": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"38512": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"38513": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"38514": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"38515": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"38516": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"38517": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"38518": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"38519": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsStringLiteral"
		},
		"38520": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38521": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Join"
		},
		"38522": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38523": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "JoinedString"
		},
		"38524": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCapitalizer"
		},
		"38525": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38526": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SplitAnyCase"
		},
		"38527": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38528": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"38529": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"38530": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38531": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"38532": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38533": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"38534": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38535": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"38536": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38537": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"38539": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38540": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityClassName"
		},
		"38541": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityValues"
		},
		"38542": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38543": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.id"
		},
		"38544": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"38545": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"38546": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"38547": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38548": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"38549": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38550": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38551": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"38552": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38553": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38554": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"38555": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"38556": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"38557": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38558": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38559": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38560": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38561": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38562": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38563": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38564": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38565": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"38566": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"38567": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"38568": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"38569": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim"
		},
		"38570": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"38571": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"38572": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"38573": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"38574": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"38575": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"38576": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"38577": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem"
		},
		"38578": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.id"
		},
		"38579": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.claim_id"
		},
		"38580": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.order_id"
		},
		"38581": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.item_id"
		},
		"38582": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.quantity"
		},
		"38583": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.reason"
		},
		"38584": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.raw_quantity"
		},
		"38585": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.metadata"
		},
		"38586": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.created_at"
		},
		"38587": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.updated_at"
		},
		"38588": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems"
		},
		"38589": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"38590": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38591": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38592": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38593": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38594": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38595": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38596": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason"
		},
		"38597": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"38598": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"38599": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"38600": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"38601": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem"
		},
		"38602": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"38603": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"38604": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"38605": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"38606": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod"
		},
		"38607": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"38608": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"38609": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"38610": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"38611": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"38612": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod"
		},
		"38613": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"38614": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"38615": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"38616": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams"
		},
		"38617": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"38618": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"38619": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"38620": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"38621": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"38622": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"38623": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.deleted_at"
		},
		"38624": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38625": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38626": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38627": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38628": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection"
		},
		"38629": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"38630": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"38631": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"38632": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"38633": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"38634": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"38635": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"38636": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"38637": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams"
		},
		"38638": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"38639": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"38640": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"38641": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"38642": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"38643": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"38644": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38645": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38646": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38647": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38648": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38649": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38650": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionParams"
		},
		"38651": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38652": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup"
		},
		"38653": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.id"
		},
		"38654": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.name"
		},
		"38655": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.customers"
		},
		"38656": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.metadata"
		},
		"38657": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.created_at"
		},
		"38658": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.updated_at"
		},
		"38659": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange"
		},
		"38660": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"38661": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"38662": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"38663": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"38664": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"38665": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"38666": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"38667": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem"
		},
		"38668": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.id"
		},
		"38669": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.exchange_id"
		},
		"38670": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.order_id"
		},
		"38671": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.item_id"
		},
		"38672": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.quantity"
		},
		"38673": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.metadata"
		},
		"38674": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.created_at"
		},
		"38675": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.updated_at"
		},
		"38676": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems"
		},
		"38677": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"38678": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38679": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38680": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38681": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38682": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38683": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38684": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason"
		},
		"38685": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.MISSING_ITEM"
		},
		"38686": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.WRONG_ITEM"
		},
		"38687": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.PRODUCTION_FAILURE"
		},
		"38688": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.OTHER"
		},
		"38689": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem"
		},
		"38690": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"38691": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"38692": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"38693": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"38694": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod"
		},
		"38695": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"38696": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"38697": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"38698": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"38699": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"38700": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod"
		},
		"38701": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"38702": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"38703": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"38704": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams"
		},
		"38705": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.q"
		},
		"38706": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.id"
		},
		"38707": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.order_id"
		},
		"38708": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.status"
		},
		"38709": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.created_at"
		},
		"38710": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.updated_at"
		},
		"38711": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeListParams.deleted_at"
		},
		"38712": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38713": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38714": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38715": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38716": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile"
		},
		"38717": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"38718": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"38719": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseUploadFile"
		},
		"38720": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"38721": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.files"
		},
		"38722": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"38723": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.name"
		},
		"38724": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.content"
		},
		"38725": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider"
		},
		"38726": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"38727": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"38728": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneGeoZone"
		},
		"38729": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneGeoZone"
		},
		"38730": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory"
		},
		"38731": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.id"
		},
		"38732": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.name"
		},
		"38733": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.description"
		},
		"38734": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.handle"
		},
		"38735": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_active"
		},
		"38736": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_internal"
		},
		"38737": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.rank"
		},
		"38738": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category_id"
		},
		"38739": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category"
		},
		"38740": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.category_children"
		},
		"38741": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.products"
		},
		"38742": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.metadata"
		},
		"38743": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.created_at"
		},
		"38744": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.updated_at"
		},
		"38745": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.deleted_at"
		},
		"38746": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams"
		},
		"38747": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"38748": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"38749": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"38750": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"38751": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"38752": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"38753": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_active"
		},
		"38754": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_internal"
		},
		"38755": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"38756": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"38757": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"38758": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"38759": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"38760": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38761": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38762": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38763": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38764": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38765": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38766": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams"
		},
		"38767": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"38768": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"38769": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38770": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag"
		},
		"38771": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"38772": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"38773": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"38774": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"38775": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"38776": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"38777": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams"
		},
		"38778": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"38779": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"38780": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"38781": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"38782": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"38783": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38784": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38785": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38786": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38787": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType"
		},
		"38788": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"38789": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"38790": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"38791": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"38792": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"38793": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"38794": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem"
		},
		"38795": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.id"
		},
		"38796": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.quantity"
		},
		"38797": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.received_quantity"
		},
		"38798": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.damaged_quantity"
		},
		"38799": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.reason_id"
		},
		"38800": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.note"
		},
		"38801": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.item_id"
		},
		"38802": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.return_id"
		},
		"38803": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.metadata"
		},
		"38804": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn"
		},
		"38805": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.id"
		},
		"38806": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_id"
		},
		"38807": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.status"
		},
		"38808": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.exchange_id"
		},
		"38809": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.location_id"
		},
		"38810": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.claim_id"
		},
		"38811": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_version"
		},
		"38812": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.display_id"
		},
		"38813": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.no_notification"
		},
		"38814": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.refund_amount"
		},
		"38815": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.items"
		},
		"38816": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.received_at"
		},
		"38817": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.created_at"
		},
		"38818": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.canceled_at"
		},
		"38819": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason"
		},
		"38820": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"38821": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"38822": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"38823": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"38824": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"38825": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"38826": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"38827": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminBaseReturnReasonPayload"
		},
		"38828": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams"
		},
		"38829": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"38830": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"38831": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"38832": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"38833": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"38834": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"38835": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"38836": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"38837": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38838": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38839": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38840": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38841": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress"
		},
		"38842": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_1"
		},
		"38843": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_2"
		},
		"38844": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.company"
		},
		"38845": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.country_code"
		},
		"38846": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.city"
		},
		"38847": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.phone"
		},
		"38848": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.postal_code"
		},
		"38849": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.province"
		},
		"38850": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule"
		},
		"38851": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference"
		},
		"38852": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference_id"
		},
		"38853": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionExecution"
		},
		"38854": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionExecution.steps"
		},
		"38855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"38856": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"38857": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"38858": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"38859": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"38860": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"38861": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"38862": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"38863": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"38864": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"38865": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"38866": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"38867": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"38868": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"38869": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.logOnError"
		},
		"38870": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"38871": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "TData"
		},
		"38872": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCapitalizer"
		},
		"38873": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38874": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"38875": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IncludesSeparator"
		},
		"38876": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38877": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SeparatorCaseParser"
		},
		"38878": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38879": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"38880": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsOneWord"
		},
		"38881": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38882": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsCamelCase"
		},
		"38883": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38884": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCaseParser"
		},
		"38885": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38886": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"38887": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsPascalCase"
		},
		"38888": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38889": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCaseParser"
		},
		"38890": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38891": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"38892": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38893": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"38894": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"38895": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"38896": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38897": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry"
		},
		"38898": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry.type"
		},
		"38899": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38900": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38901": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince"
		},
		"38902": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.type"
		},
		"38903": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.province_code"
		},
		"38904": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38905": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38906": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity"
		},
		"38907": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.type"
		},
		"38908": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.province_code"
		},
		"38909": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.city"
		},
		"38910": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38911": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38912": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip"
		},
		"38913": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.type"
		},
		"38914": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.province_code"
		},
		"38915": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.city"
		},
		"38916": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.postal_expression"
		},
		"38917": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38918": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38919": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry"
		},
		"38920": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry.type"
		},
		"38921": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"38922": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38923": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38924": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince"
		},
		"38925": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.type"
		},
		"38926": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.province_code"
		},
		"38927": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"38928": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38929": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38930": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity"
		},
		"38931": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.type"
		},
		"38932": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.province_code"
		},
		"38933": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.city"
		},
		"38934": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"38935": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38936": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38937": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip"
		},
		"38938": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.type"
		},
		"38939": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.province_code"
		},
		"38940": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.city"
		},
		"38941": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.postal_expression"
		},
		"38942": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"38943": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38944": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38945": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Separator"
		},
		"38946": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "WordInCamelCase"
		},
		"38947": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"38948": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Word"
		},
		"38949": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"38950": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38951": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone"
		},
		"38952": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"38953": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38954": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38955": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone"
		},
		"38956": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"38957": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"38958": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"38959": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"38960": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"38961": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38962": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"38963": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38964": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"38965": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38966": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"38967": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"38968": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"38969": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"38970": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"38971": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/index.ts",
			"2": "../../../../packages/core/types/src/admin/index.ts",
			"3": "../../../../packages/core/types/src/cache/index.ts",
			"4": "../../../../packages/core/types/src/common/index.ts",
			"5": "../../../../packages/core/types/src/dal/index.ts",
			"6": "../../../../packages/core/types/src/event-bus/index.ts",
			"7": "../../../../packages/core/types/src/feature-flag/index.ts",
			"8": "../../../../packages/core/types/src/file/index.ts",
			"9": "../../../../packages/core/types/src/http/index.ts",
			"10": "../../../../packages/core/types/src/inventory/index.ts",
			"11": "../../../../packages/core/types/src/logger/index.ts",
			"12": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"13": "../../../../packages/core/types/src/notification/index.ts",
			"14": "../../../../packages/core/types/src/search/index.ts",
			"15": "../../../../packages/core/types/src/stock-location/index.ts",
			"16": "../../../../packages/core/types/src/transaction-base/index.ts",
			"17": "../../../../packages/core/types/src/workflow/index.ts",
			"18": "../../../../packages/core/types/src/workflow/common.ts",
			"19": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"20": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"21": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"22": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"23": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"24": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"25": "../../../../packages/core/types/src/dml/index.ts"
		},
		"reflections": {
			"1": 34457,
			"2": 34476,
			"3": 34477,
			"4": 34491,
			"5": 34698,
			"6": 34887,
			"7": 34960,
			"8": 34979,
			"9": 35070,
			"10": 36690,
			"11": 37041,
			"12": 37099,
			"13": 37406,
			"14": 37512,
			"15": 37556,
			"16": 37688,
			"17": 37690,
			"18": 37691,
			"19": 37701,
			"20": 37718,
			"21": 37735,
			"22": 37785,
			"23": 37795,
			"24": 37802,
			"25": 37926
		}
	}
}